digraph "VectorizedSolver::VectorizedSolver"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="VectorizedSolver::Vectorized\lSolver",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="VectorizedSolver::setGeometry",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classVectorizedSolver.html#ab4a29f8b4f8cbb4dff38ce2b85a56642",tooltip="Sets the Geometry for the Solver and aligns all Material cross-section data for SIMD vector instructi..."];
  Node2 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="Geometry::getMaterials",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classGeometry.html#a79583fea11962f810751c6d8668be50a",tooltip="Return a std::map container of Material IDs (keys) with Materials pointers (values)."];
  Node1 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="Solver::setTrackGenerator",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classSolver.html#ac07cee2fe04515dc8e4d2980d567c4c5",tooltip="Sets the Solver&#39;s TrackGenerator with characteristic Tracks."];
  Node4 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="TrackGenerator::contains\lTracks",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classTrackGenerator.html#a5ec836ced3479a5aae51132809a3d7b4",tooltip="Returns whether or not the TrackGenerator contains Track that are for its current number of azimuthal..."];
  Node4 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="TrackGenerator::getNumAzim",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classTrackGenerator.html#a9c9661635df90ab658b17517548e7cc2",tooltip="Return the number of azimuthal angles in ."];
  Node4 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="TrackGenerator::getNumTracks\lArray",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classTrackGenerator.html#a20e00c47aa96fbee5c2eef16e8aa006c",tooltip="Return an array of the number of Tracks for each azimuthal angle."];
  Node4 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="TrackGenerator::getNumTracks",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classTrackGenerator.html#a078d71a343d4c245c38195491b2d024c",tooltip="Return the total number of Tracks across the Geometry."];
  Node4 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="TrackGenerator::getAzimWeights",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classTrackGenerator.html#a31deadd969cddf7eba85a442729f697a",tooltip="Return a pointer to the array of azimuthal angle quadrature weights."];
  Node4 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="TrackGenerator::getTracks",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classTrackGenerator.html#a293c6a25a694bfcb8187cfd679fa3639",tooltip="Returns a 2D jagged array of the Tracks."];
}
