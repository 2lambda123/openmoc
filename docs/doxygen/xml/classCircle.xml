<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="classCircle" kind="class" prot="public">
    <compoundname>Circle</compoundname>
    <basecompoundref refid="classSurface" prot="public" virt="non-virtual">Surface</basecompoundref>
    <includes refid="Surface_8h" local="yes">openmoc/src/host/Surface.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCircle_1aff9ab75acc2c2a362d401054159c2ae0" prot="private" static="no" mutable="no">
        <type><ref refid="classPoint" kindref="compound">Point</ref></type>
        <definition>Point Circle::_center</definition>
        <argsstring></argsstring>
        <name>_center</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A 2D point for the circle&apos;s center </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="275" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCircle_1a03d628cef1bde5936b1fc1ab4412dbe6" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Circle::_radius</definition>
        <argsstring></argsstring>
        <name>_radius</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The circle&apos;s radius </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="277" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCircle_1a39ad81ff898d52b29f27f5e296d53e3f" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Circle::_A</definition>
        <argsstring></argsstring>
        <name>_A</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The coefficient of the x-squared term </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="279" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCircle_1aaea2adf36cfd80e299253a41c246ad3c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Circle::_B</definition>
        <argsstring></argsstring>
        <name>_B</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The coefficient of the y-squared term </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="281" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCircle_1a7b621e11a3ee138b6b52b11f84a827cd" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Circle::_C</definition>
        <argsstring></argsstring>
        <name>_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The coefficient of the linear term in x </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="283" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCircle_1a1e1ae6d259259f1c2e38c221392fc55d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Circle::_D</definition>
        <argsstring></argsstring>
        <name>_D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The coefficient of the linear term in y </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="285" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCircle_1acf49c0081232ba6e136da8891d861d42" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Circle::_E</definition>
        <argsstring></argsstring>
        <name>_E</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The constant offset </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="287" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classCircle_1a432070efb8401735ea64bc0e98feebe5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Surface</definition>
        <argsstring></argsstring>
        <name>Surface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="classCircle" kindref="compound">Circle</ref> is a friend of the <ref refid="classSurface" kindref="compound">Surface</ref> class </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="289" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classCircle_1a89c71bac3ec153ca700e1cd69900b6ce" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Plane</definition>
        <argsstring></argsstring>
        <name>Plane</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="classCircle" kindref="compound">Circle</ref> is a friend of the <ref refid="classPlane" kindref="compound">Plane</ref> class </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="291" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCircle_1a2e16fb81ce028fc541fe3a7666cd166a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Circle::Circle</definition>
        <argsstring>(const double x, const double y, const double radius, const short int id=0)</argsstring>
        <name>Circle</name>
        <param>
          <type>const double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>const short int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>the surface id </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x-coordinte of the circle center </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y-coordinate of the circle center </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radius</parametername>
</parameternamelist>
<parameterdescription>
<para>the radius of the circle </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="295" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.cpp" bodystart="547" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="classCircle_1ad4e43556962fd45f3f45d4e2d378c7bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Circle::getX0</definition>
        <argsstring>()</argsstring>
        <name>getX0</name>
        <briefdescription>
<para>Return the x-coordinate of the circle&apos;s center point. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the x-coordinate of the circle center </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="297" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.cpp" bodystart="566" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="classCircle_1ad186209f266b47ad1136a736c8fa75fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Circle::getY0</definition>
        <argsstring>()</argsstring>
        <name>getY0</name>
        <briefdescription>
<para>Return the y-coordinate of the circle&apos;s center point. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the y-coordinate of the circle center </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="298" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.cpp" bodystart="575" bodyend="577"/>
      </memberdef>
      <memberdef kind="function" id="classCircle_1af9fccec77d3a15d63594666dc8501437" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Circle::getRadius</definition>
        <argsstring>()</argsstring>
        <name>getRadius</name>
        <briefdescription>
<para>Return the radius of the circle. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the radius of the circle </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="299" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" bodystart="380" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="classCircle_1a237978476592c9e3a51408e1b9983175" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Circle::getXMin</definition>
        <argsstring>()</argsstring>
        <name>getXMin</name>
        <reimplements refid="classSurface_1a3baea26cc38b6fb0d194fca014018174">getXMin</reimplements>
        <briefdescription>
<para>Returns the minimum x value on this circle. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the minimum y value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="300" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.cpp" bodystart="739" bodyend="741"/>
      </memberdef>
      <memberdef kind="function" id="classCircle_1a85c4fc93fe17f6ec4b5255c07315400c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Circle::getXMax</definition>
        <argsstring>()</argsstring>
        <name>getXMax</name>
        <reimplements refid="classSurface_1aff659fd1b2d547d8b59df1b804d4098b">getXMax</reimplements>
        <briefdescription>
<para>Returns the maximum x value on this circle. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the maximum x value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="301" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.cpp" bodystart="748" bodyend="750"/>
      </memberdef>
      <memberdef kind="function" id="classCircle_1a15a934ccb615ddf1e3b87d80a65d14c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Circle::getYMin</definition>
        <argsstring>()</argsstring>
        <name>getYMin</name>
        <reimplements refid="classSurface_1a294b8bd2f04b3b938cc7c31cc4f941f3">getYMin</reimplements>
        <briefdescription>
<para>Returns the minimum y value on this circle. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the minimum y value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="302" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.cpp" bodystart="756" bodyend="758"/>
      </memberdef>
      <memberdef kind="function" id="classCircle_1ac468c428499a1e10ace7c16260060da9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Circle::getYMax</definition>
        <argsstring>()</argsstring>
        <name>getYMax</name>
        <reimplements refid="classSurface_1a1ffa35335f366974886fa7c36b564fef">getYMax</reimplements>
        <briefdescription>
<para>Returns ths maximum y value on this circle. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the maximum y value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="303" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.cpp" bodystart="765" bodyend="767"/>
      </memberdef>
      <memberdef kind="function" id="classCircle_1a18f49b1f94c29760cd62d10b7e908fa9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double Circle::evaluate</definition>
        <argsstring>(const Point *point) const </argsstring>
        <name>evaluate</name>
        <reimplements refid="classSurface_1a2e0aaef635a7392806d27fb4999a9168">evaluate</reimplements>
        <param>
          <type>const <ref refid="classPoint" kindref="compound">Point</ref> *</type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Evaluate a point using the circle&apos;s quadratic surface equation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the point of interest </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of point in the equation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="305" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" bodystart="390" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="classCircle_1a49e3967db73a8f068dbe6302a84370f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int Circle::intersection</definition>
        <argsstring>(Point *point, double angle, Point *points)</argsstring>
        <name>intersection</name>
        <reimplements refid="classSurface_1a145ed967142bc6c121d43f5f2523e2e9">intersection</reimplements>
        <param>
          <type><ref refid="classPoint" kindref="compound">Point</ref> *</type>
          <declname>point</declname>
        </param>
        <param>
          <type>double</type>
          <declname>angle</declname>
        </param>
        <param>
          <type><ref refid="classPoint" kindref="compound">Point</ref> *</type>
          <declname>points</declname>
        </param>
        <briefdescription>
<para>Finds the intersection point with this circle from a given point and trajectory defined by an angle (0, 1, or 2 points). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the point of interest </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>the angle defining the trajectory in radians </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>points</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a an array of points to store intersection points </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of intersection points (0 or 1) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="306" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.cpp" bodystart="588" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="classCircle_1aea2207f792f532c1a92bfba37adcee5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string Circle::toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <reimplements refid="classSurface_1a7275a4ce4c6d96fd90b5c1916cf9ae37">toString</reimplements>
        <briefdescription>
<para>Converts this circle&apos;s attributes to a character array. </para>        </briefdescription>
        <detaileddescription>
<para>The character array returned conatins the type of plane (ie, CIRCLE) and the A, B, C, D and E coefficients in the quadratic surface equation. <simplesect kind="return"><para>a character array of this circle&apos;s attributes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="308" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.cpp" bodystart="714" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="classCircle_1a194de784b65de551eb4a05ff6bfd443b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Circle::printString</definition>
        <argsstring>()</argsstring>
        <name>printString</name>
        <reimplements refid="classSurface_1aedc2d76b05edc93b85bb63dc41c1f1b2">printString</reimplements>
        <briefdescription>
<para>Prints a string representation of all of the circle&apos;s objects to the console. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="309" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.cpp" bodystart="730" bodyend="732"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a circle in the xy-plane. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="12">
        <label>Circle</label>
        <link refid="classCircle"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>Surface</label>
        <link refid="classSurface"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="14">
        <label>Circle</label>
        <link refid="classCircle"/>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>Surface</label>
        <link refid="classSurface"/>
      </node>
    </collaborationgraph>
    <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="271" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" bodystart="271" bodyend="310"/>
    <listofallmembers>
      <member refid="classCircle_1a39ad81ff898d52b29f27f5e296d53e3f" prot="private" virt="non-virtual"><scope>Circle</scope><name>_A</name></member>
      <member refid="classCircle_1aaea2adf36cfd80e299253a41c246ad3c" prot="private" virt="non-virtual"><scope>Circle</scope><name>_B</name></member>
      <member refid="classSurface_1a73ff438f865a0694735877998dce0d91" prot="protected" virt="non-virtual"><scope>Circle</scope><name>_boundary_type</name></member>
      <member refid="classCircle_1a7b621e11a3ee138b6b52b11f84a827cd" prot="private" virt="non-virtual"><scope>Circle</scope><name>_C</name></member>
      <member refid="classCircle_1aff9ab75acc2c2a362d401054159c2ae0" prot="private" virt="non-virtual"><scope>Circle</scope><name>_center</name></member>
      <member refid="classCircle_1a1e1ae6d259259f1c2e38c221392fc55d" prot="private" virt="non-virtual"><scope>Circle</scope><name>_D</name></member>
      <member refid="classCircle_1acf49c0081232ba6e136da8891d861d42" prot="private" virt="non-virtual"><scope>Circle</scope><name>_E</name></member>
      <member refid="classSurface_1a4c1bcbdba5c4e1e8772b4d4b28f95e39" prot="protected" virt="non-virtual"><scope>Circle</scope><name>_id</name></member>
      <member refid="classSurface_1a259bc52e2a2788727593176a8896754e" prot="protected" virt="non-virtual"><scope>Circle</scope><name>_n</name></member>
      <member refid="classCircle_1a03d628cef1bde5936b1fc1ab4412dbe6" prot="private" virt="non-virtual"><scope>Circle</scope><name>_radius</name></member>
      <member refid="classSurface_1a2b8655eb5a953ea4b45abe5fab7831d0" prot="protected" virt="non-virtual"><scope>Circle</scope><name>_surface_type</name></member>
      <member refid="classSurface_1a8995d86060c1a792988c707abbb56ea8" prot="protected" virt="non-virtual"><scope>Circle</scope><name>_uid</name></member>
      <member refid="classCircle_1a2e16fb81ce028fc541fe3a7666cd166a" prot="public" virt="non-virtual"><scope>Circle</scope><name>Circle</name></member>
      <member refid="classCircle_1a18f49b1f94c29760cd62d10b7e908fa9" prot="public" virt="virtual"><scope>Circle</scope><name>evaluate</name></member>
      <member refid="classSurface_1afa3ef1b6a8b18d04240ee1a3bc908780" prot="public" virt="non-virtual"><scope>Circle</scope><name>getBoundaryType</name></member>
      <member refid="classSurface_1a77ba5d7532f411134107c777861d23b2" prot="public" virt="non-virtual"><scope>Circle</scope><name>getId</name></member>
      <member refid="classSurface_1a38d24a561dd8d1e3e3a0dabc3a472634" prot="public" virt="non-virtual"><scope>Circle</scope><name>getMinDistance</name></member>
      <member refid="classCircle_1af9fccec77d3a15d63594666dc8501437" prot="public" virt="non-virtual"><scope>Circle</scope><name>getRadius</name></member>
      <member refid="classSurface_1a0e9228606069f0540ba43960ca192327" prot="public" virt="non-virtual"><scope>Circle</scope><name>getSurfaceType</name></member>
      <member refid="classSurface_1a1b8e7a0a79ee5b21ad5006ec7a1380a5" prot="public" virt="non-virtual"><scope>Circle</scope><name>getUid</name></member>
      <member refid="classCircle_1ad4e43556962fd45f3f45d4e2d378c7bf" prot="public" virt="non-virtual"><scope>Circle</scope><name>getX0</name></member>
      <member refid="classCircle_1a85c4fc93fe17f6ec4b5255c07315400c" prot="public" virt="virtual"><scope>Circle</scope><name>getXMax</name></member>
      <member refid="classCircle_1a237978476592c9e3a51408e1b9983175" prot="public" virt="virtual"><scope>Circle</scope><name>getXMin</name></member>
      <member refid="classCircle_1ad186209f266b47ad1136a736c8fa75fc" prot="public" virt="non-virtual"><scope>Circle</scope><name>getY0</name></member>
      <member refid="classCircle_1ac468c428499a1e10ace7c16260060da9" prot="public" virt="virtual"><scope>Circle</scope><name>getYMax</name></member>
      <member refid="classCircle_1a15a934ccb615ddf1e3b87d80a65d14c8" prot="public" virt="virtual"><scope>Circle</scope><name>getYMin</name></member>
      <member refid="classCircle_1a49e3967db73a8f068dbe6302a84370f6" prot="public" virt="virtual"><scope>Circle</scope><name>intersection</name></member>
      <member refid="classSurface_1a1263b1b61154ed6f75e7079a5832d853" prot="public" virt="non-virtual"><scope>Circle</scope><name>isCoordOnSurface</name></member>
      <member refid="classSurface_1ad996b11e3af07e6dea8081cb11ccfe0c" prot="public" virt="non-virtual"><scope>Circle</scope><name>isPointOnSurface</name></member>
      <member refid="classCircle_1a89c71bac3ec153ca700e1cd69900b6ce" prot="private" virt="non-virtual"><scope>Circle</scope><name>Plane</name></member>
      <member refid="classCircle_1a194de784b65de551eb4a05ff6bfd443b" prot="public" virt="virtual"><scope>Circle</scope><name>printString</name></member>
      <member refid="classSurface_1af8921636e9779854a377f412817c3a32" prot="public" virt="non-virtual"><scope>Circle</scope><name>setBoundaryType</name></member>
      <member refid="classCircle_1a432070efb8401735ea64bc0e98feebe5" prot="private" virt="non-virtual"><scope>Circle</scope><name>Surface</name></member>
      <member refid="classSurface_1ad29d02e18bad0fe49e5a18d9f0cab7a2" prot="public" virt="non-virtual" ambiguityscope="Surface::"><scope>Circle</scope><name>Surface</name></member>
      <member refid="classCircle_1aea2207f792f532c1a92bfba37adcee5e" prot="public" virt="virtual"><scope>Circle</scope><name>toString</name></member>
      <member refid="classSurface_1a89de75c95cb550d432f3ea4ed1429db0" prot="public" virt="virtual"><scope>Circle</scope><name>~Surface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
