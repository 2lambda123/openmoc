<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="Cell_8h" kind="file">
    <compoundname>Cell.h</compoundname>
    <includedby refid="Cell_8cpp" local="yes">/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Cell.cpp</includedby>
    <innerclass refid="classCell" prot="public">Cell</innerclass>
    <innerclass refid="classCellBasic" prot="public">CellBasic</innerclass>
    <innerclass refid="classCellFill" prot="public">CellFill</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="Cell_8h_1a274ceed3b07859c48505f65b1fe42328" prot="public" static="no">
        <name>cellType</name>
        <enumvalue id="Cell_8h_1a274ceed3b07859c48505f65b1fe42328a23f8f5e62324af5f4d8f899cee8fb70d" prot="public">
          <name>MATERIAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A cell filled by a material </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="Cell_8h_1a274ceed3b07859c48505f65b1fe42328a1d3754a297a681486f8cb3138a27c28b" prot="public">
          <name>FILL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A cell filled by a universe </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The type of cell. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Cell.h" line="29" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Cell.h" bodystart="29" bodyend="34"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="Cell_8h_1abb9096ea25c5bc90958fe62105192ec7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cell_id</definition>
        <argsstring>()</argsstring>
        <name>cell_id</name>
        <briefdescription>
<para>Returns an auto-generated unique cell ID. </para>        </briefdescription>
        <detaileddescription>
<para>This method is intended as a utility mehtod for user&apos;s writing OpenMOC input files. The method makes use of a static cell ID which is incremented each time the method is called to enable unique generation of monotonically increasing IDs. The method&apos;s first ID begins at 10000. Hence, user-defined cell IDs greater than or equal to 10000 is prohibited. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Cell.h" line="22" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Cell.cpp" bodystart="18" bodyend="22"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classCell" kindref="compound">Cell</ref> class. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="date"><para>January 18, 2012 </para></simplesect>
<simplesect kind="author"><para>William Boyd, MIT, Course 22 (<ulink url="mailto:wboyd@mit.edu">wboyd@mit.edu</ulink>) </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="9"><highlight class="preprocessor">#ifndef<sp/>CELL_H_</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CELL_H_</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Surface_8h" kindref="compound">Surface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Point_8h" kindref="compound" tooltip="The Point class.">Point.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="LocalCoords_8h" kindref="compound" tooltip="The LocalCoords class.">LocalCoords.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classUniverse" kindref="compound" tooltip="A universe represents an unbounded space in the 2D xy-plane.">Universe</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classSurface" kindref="compound" tooltip="Represents a general surface in the 2D xy-plane.">Surface</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classLocalCoords" kindref="compound" tooltip="The localcoords represents a set of local coordinates on some level of nested universes making up the...">LocalCoords</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cell_id();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="Cell_8h_1a274ceed3b07859c48505f65b1fe42328" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="Cell_8h_1a274ceed3b07859c48505f65b1fe42328" kindref="member" tooltip="The type of cell.">cellType</ref><sp/>{</highlight></codeline>
<codeline lineno="31" refid="Cell_8h_1a274ceed3b07859c48505f65b1fe42328a23f8f5e62324af5f4d8f899cee8fb70d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cell_8h_1a274ceed3b07859c48505f65b1fe42328a23f8f5e62324af5f4d8f899cee8fb70d" kindref="member">MATERIAL</ref>,</highlight></codeline>
<codeline lineno="33" refid="Cell_8h_1a274ceed3b07859c48505f65b1fe42328a1d3754a297a681486f8cb3138a27c28b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cell_8h_1a274ceed3b07859c48505f65b1fe42328a1d3754a297a681486f8cb3138a27c28b" kindref="member">FILL</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal">};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classCell" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classCell" kindref="compound" tooltip="Represents a cell inside of a universe.">Cell</ref><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44" refid="classCell_1a73b3f587dfefe93c9764b9fdcc772710" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCell_1a73b3f587dfefe93c9764b9fdcc772710" kindref="member">_n</ref>;</highlight></codeline>
<codeline lineno="46" refid="classCell_1aa028169032e0edead76bde80f7ff3c1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCell_1aa028169032e0edead76bde80f7ff3c1f" kindref="member">_clone_n</ref>;</highlight></codeline>
<codeline lineno="48" refid="classCell_1aba78515e347a8dad627832c71b8bc2fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCell_1aba78515e347a8dad627832c71b8bc2fa" kindref="member">_uid</ref>;</highlight></codeline>
<codeline lineno="50" refid="classCell_1af45cbf64248efeb49f5df298a8abaabc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCell_1af45cbf64248efeb49f5df298a8abaabc" kindref="member">_id</ref>;</highlight></codeline>
<codeline lineno="52" refid="classCell_1a479098cae5775f5070b63b9ef7abbb04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cell_8h_1a274ceed3b07859c48505f65b1fe42328" kindref="member" tooltip="The type of cell.">cellType</ref><sp/><ref refid="classCell_1a479098cae5775f5070b63b9ef7abbb04" kindref="member">_cell_type</ref>;</highlight></codeline>
<codeline lineno="54" refid="classCell_1a1672521c43143394c114df1ca5e52dbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCell_1a1672521c43143394c114df1ca5e52dbc" kindref="member">_universe</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classCell_1ac43ed5fa7607eb5ca51b71c519dc67bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;short<sp/>int,<sp/>Surface*&gt;<sp/><ref refid="classCell_1ac43ed5fa7607eb5ca51b71c519dc67bf" kindref="member">_surfaces</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCell_1a394510643e8664cf12b5efaf5cb99f71" kindref="member" tooltip="Default constructor used in rings/sectors subdivision of cells.">Cell</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCell_1a394510643e8664cf12b5efaf5cb99f71" kindref="member" tooltip="Default constructor used in rings/sectors subdivision of cells.">Cell</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>universe,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">=0);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classCell_1a9fa559f7a28e2b4336c6879ca09304d8" kindref="member" tooltip="Destructor frees all surfaces making up cell.">~Cell</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCell_1a27be5077c04eaf21747b1e6101495ba4" kindref="member" tooltip="Return the cell&amp;#39;s unique ID.">getUid</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCell_1a5ee7d2b6a1ed18804d207f937e3defaf" kindref="member" tooltip="Return the cell&amp;#39;s user-specified ID.">getId</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Cell_8h_1a274ceed3b07859c48505f65b1fe42328" kindref="member" tooltip="The type of cell.">cellType</ref><sp/><ref refid="classCell_1af0421cc4cbb034947b2b7ec18c6df7d0" kindref="member" tooltip="Return the cell type (FILL or MATERIAL).">getType</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCell_1af4af1af3638b0c9a64d0b8f3f12f0e30" kindref="member" tooltip="Return the ID of the universe within which this cell resides.">getUniverse</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCell_1a7c3defd6e47e454df12891d2f9c90405" kindref="member" tooltip="Return the number of surfaces in the cell.">getNumSurfaces</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;short<sp/>int,<sp/>Surface*&gt;<sp/><ref refid="classCell_1a212ae4536a8da3258fcdb5b3ab36a3a0" kindref="member" tooltip="Return the hashtable of surfaces IDs and surface pointers for all surfaces making up the cell...">getSurfaces</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCell_1a7e47c4f454dc5ee6689e48a5f3770f43" kindref="member" tooltip="Return the number of flat source regions in this cell.">getNumFSRs</ref>()<sp/>=0;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCell_1aaf4b5dcb6f7e1dc7121f6bdf5f69aa09" kindref="member" tooltip="Set the ID for teh universe within whic this cell resides.">setUniverse</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>universe);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCell_1aa3dc5df3090ba776ea817b5a8385616b" kindref="member" tooltip="Insert the a surface into this cell&amp;#39;s container.">addSurface</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>halfspace,<sp/><ref refid="classSurface" kindref="compound" tooltip="Represents a general surface in the 2D xy-plane.">Surface</ref>*<sp/>surface);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCell_1ad6a1e2e87f6708663dddb370d670a067" kindref="member" tooltip="Registers a surface pointer with the Cell&amp;#39;s surfaces map.">setSurfacePointer</ref>(<ref refid="classSurface" kindref="compound" tooltip="Represents a general surface in the 2D xy-plane.">Surface</ref>*<sp/>surface);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCell_1a7ccb9a3084719a36a170bed2cd48a593" kindref="member" tooltip="Determines whether a point is contained inside a cell.">cellContainsPoint</ref>(<ref refid="classPoint" kindref="compound" tooltip="Class to represent a 2D point in space.">Point</ref>*<sp/>point);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCell_1a89c95a180daff341176d78c5d573da53" kindref="member" tooltip="Determines whether a point is contained inside a cell.">cellContainsCoords</ref>(<ref refid="classLocalCoords" kindref="compound" tooltip="The localcoords represents a set of local coordinates on some level of nested universes making up the...">LocalCoords</ref>*<sp/>coords);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classCell_1adf41aafa99278a759d8d6ae826c7330e" kindref="member" tooltip="Computes the minimum distance to a surface from a point with a given trajectory at a certain angle...">minSurfaceDist</ref>(<ref refid="classPoint" kindref="compound" tooltip="Class to represent a 2D point in space.">Point</ref>*<sp/>point,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle,<sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPoint" kindref="compound" tooltip="Class to represent a 2D point in space.">Point</ref>*<sp/>min_intersection);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classCell_1a4a84efc6a82f7abe42d9a6dc990c70e6" kindref="member" tooltip="Convert this cellfill&amp;#39;s attributes to a string format.">toString</ref>()<sp/>=0;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCell_1af53a3407201aaaebf593939e1b7a69fb" kindref="member" tooltip="Prints a string representation of all of the cells&amp;#39;s objects to the console.">printString</ref>()<sp/>=0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classCellBasic" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classCellBasic" kindref="compound" tooltip="Represents a cell filled with a material.">CellBasic</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classCell" kindref="compound" tooltip="Represents a cell inside of a universe.">Cell</ref><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_material;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_num_rings;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_num_sectors;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CellBasic*&gt;<sp/>_rings;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CellBasic*&gt;<sp/>_sectors;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CellBasic*&gt;<sp/>_subcells;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ringify();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sectorize();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCellBasic_1ad670ef7ec7bece7b8a057f7e3e511919" kindref="member">CellBasic</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>universe,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>material,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rings=0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sectors=0,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">=0);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCellBasic_1a72c5170a7a99499874bf96eea3da4148" kindref="member" tooltip="Return the ID of the material filling the cellbasic.">getMaterial</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCellBasic_1afb947abd7222748cee6af104845506c3" kindref="member" tooltip="Return the number of rings in the cell.">getNumRings</ref>();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCellBasic_1a34740bd6ab41262ce6cf929e05ea9027" kindref="member" tooltip="Return the number of sectors in the cell.">getNumSectors</ref>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCellBasic_1a20995e53c5742d2e27a9ee32d78f7302" kindref="member" tooltip="Return the number of flat source regions in this cellbasic.">getNumFSRs</ref>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCellBasic_1a28315145c6f60f50b2fae3c69b0a04ac" kindref="member" tooltip="Set the cell&amp;#39;s number of rings.">setNumRings</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_rings);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCellBasic_1af54bd9a6800172fc1da9d1d948e8d1e4" kindref="member" tooltip="Set the cell&amp;#39;s number of sectors.">setNumSectors</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_sectors);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCellBasic" kindref="compound" tooltip="Represents a cell filled with a material.">CellBasic</ref>*<sp/><ref refid="classCellBasic_1a11467ff4cc874cb9688ff12feef184a6" kindref="member" tooltip="Create a duplicate of the cellbasic.">clone</ref>();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CellBasic*&gt;<sp/><ref refid="classCellBasic_1a68bcdce0e270b6b439ba878a0694d5b1" kindref="member" tooltip="Subdivides a cells into rings and sectors.">subdivideCell</ref>();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classCellBasic_1a7c9a65e73c5c9004c2b75f40ab19e4b3" kindref="member" tooltip="Convert this cellbasic&amp;#39;s attributes to a string format.">toString</ref>();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCellBasic_1a8a4daeca3487c62cfd7251ccb9e22847" kindref="member" tooltip="Prints a string representation of all of the cellbasic&amp;#39;s objects to the console.">printString</ref>();</highlight></codeline>
<codeline lineno="137"><highlight class="normal">};</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="classCellFill" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classCellFill" kindref="compound" tooltip="Represents a cell filled with a universe.">CellFill</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classCell" kindref="compound" tooltip="Represents a cell inside of a universe.">Cell</ref><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;short<sp/>int,<sp/>Universe*&gt;<sp/>_universe_fill;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCellFill_1a5eeaa4ae913f761771c893c6da1e794a" kindref="member" tooltip="CellFill constructor.">CellFill</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>universe,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>universe_fill,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">=0);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCellFill_1ae657ae09fe0b6532f20d214e4b774228" kindref="member" tooltip="Return the ID of the universe filling this cell.">getUniverseFillId</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classUniverse" kindref="compound" tooltip="A universe represents an unbounded space in the 2D xy-plane.">Universe</ref>*<sp/><ref refid="classCellFill_1af5debd1e98494583d628641cb5321a8c" kindref="member" tooltip="Return a pointer to the universe filling this cell.">getUniverseFill</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCellFill_1a42d8ee528341de4ec858731f0c35b649" kindref="member" tooltip="Return the number of flat source regions in this cellfill.">getNumFSRs</ref>();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCellFill_1a025f1ecb0581956ef8dbb51e9c006f87" kindref="member" tooltip="Set the ID of the universe filling this cellfill.">setUniverseFill</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>universe_Fill);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCellFill_1a557f647cc02f782866db15f5f7f04104" kindref="member" tooltip="Set a pointer to the universe filling this cellfill.">setUniverseFillPointer</ref>(<ref refid="classUniverse" kindref="compound" tooltip="A universe represents an unbounded space in the 2D xy-plane.">Universe</ref>*<sp/>universe_fill);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classCellFill_1ac37b3795b89ffdd71315610e99100f8b" kindref="member" tooltip="Convert this cellfill&amp;#39;s attributes to a string format.">toString</ref>();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCellFill_1a26e6c0b4accfa1aa4926dfdc47b2d985" kindref="member" tooltip="Prints a string representation of all of the cellfill&amp;#39;s objects to the console.">printString</ref>();</highlight></codeline>
<codeline lineno="162"><highlight class="normal">};</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CELL_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Cell.h"/>
  </compounddef>
</doxygen>
