<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="classTimer" kind="class" prot="public">
    <compoundname>Timer</compoundname>
    <includes refid="Timer_8h" local="yes">openmoc/src/host/Timer.cpp</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classTimer_1a496c3274ed6ee2599b5f30aa1dad69a9" prot="private" static="yes" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; Timer::_start_times</definition>
        <argsstring></argsstring>
        <name>_start_times</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A vector of timespec struct pointers for the start time at each recursive level at which we are timing </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" line="35" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTimer_1ad08dbc3e99a6701d81a2e229238c80da" prot="private" static="yes" mutable="no">
        <type>std::map&lt; std::string, double &gt;</type>
        <definition>std::map&lt; std::string, double &gt; Timer::_timer_splits</definition>
        <argsstring></argsstring>
        <name>_timer_splits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A vector of the times and messages for each split </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" line="44" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classTimer_1a66c4fe8fa616be47b4d0c4ab27e69b75" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Timer::_elapsed_time</definition>
        <argsstring></argsstring>
        <name>_elapsed_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The time elapsed (seconds) for the current split </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" line="38" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTimer_1a0e92367e8b9f4fe50e7395d01db259af" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Timer::_running</definition>
        <argsstring></argsstring>
        <name>_running</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether or not the timer is running for the current split </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" line="41" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classTimer_1a5265981127eeff609f84bf4429e5d19a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classTimer" kindref="compound">Timer</ref> &amp;</type>
        <definition>Timer&amp; Timer::operator=</definition>
        <argsstring>(const Timer &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classTimer" kindref="compound">Timer</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Assignment operator for static referencing of the <ref refid="classTimer" kindref="compound">Timer</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&amp;</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classTimer" kindref="compound">Timer</ref> static class object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the <ref refid="classTimer" kindref="compound">Timer</ref> static class object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" line="51" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classTimer_1aa56807b86a1b9e4a468ed40679fc92e0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Timer::Timer</definition>
        <argsstring>(const Timer &amp;)</argsstring>
        <name>Timer</name>
        <param>
          <type>const <ref refid="classTimer" kindref="compound">Timer</ref> &amp;</type>
        </param>
        <briefdescription>
<para><ref refid="classTimer" kindref="compound">Timer</ref> constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&amp;</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classTimer" kindref="compound">Timer</ref> static reference pointer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" line="57" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" bodystart="57" bodyend="57"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classTimer_1a5f16e8da27d2a5a5242dead46de05d97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Timer::Timer</definition>
        <argsstring>()</argsstring>
        <name>Timer</name>
        <briefdescription>
<para>Constructor sets the current split elapsed time to zero. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" line="63" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classTimer_1ad3c95ce902fce977d280256256856d64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual Timer::~Timer</definition>
        <argsstring>()</argsstring>
        <name>~Timer</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" line="71" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classTimer_1aa8c887576ec3b0d68c10ebf4097c367c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Timer::startTimer</definition>
        <argsstring>()</argsstring>
        <name>startTimer</name>
        <briefdescription>
<para>Starts the timer. </para>        </briefdescription>
        <detaileddescription>
<para>This method is similar to starting a stopwatch. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" line="82" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.cpp" bodystart="12" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classTimer_1a27f97da1b1d19ad74a847703ca25c455" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Timer::stopTimer</definition>
        <argsstring>()</argsstring>
        <name>stopTimer</name>
        <briefdescription>
<para>Stops the timer. </para>        </briefdescription>
        <detaileddescription>
<para>This method is similar to stopping a stopwatch. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" line="83" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.cpp" bodystart="26" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classTimer_1a613c775ca0b0b08f7cf1a6c165a6b6f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Timer::recordSplit</definition>
        <argsstring>(const char *msg)</argsstring>
        <name>recordSplit</name>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Records a message corresponding to a time for the current split. </para>        </briefdescription>
        <detaileddescription>
<para>When this method is called it assumes that the timer has been stopped and has the current time for the process corresponding to the message. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>a msg corresponding to this time split </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" line="84" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.cpp" bodystart="52" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classTimer_1a490604efc23a4ff9bef8d1f9f418ecb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Timer::getTime</definition>
        <argsstring>()</argsstring>
        <name>getTime</name>
        <briefdescription>
<para>Returns the amount of time elapsed from startTimer to stopTimer. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the elapsed time in seconds </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" line="85" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.cpp" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classTimer_1aa56c74daecc44c72c434db6c98e69178" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Timer::getSplit</definition>
        <argsstring>(const char *msg)</argsstring>
        <name>getSplit</name>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Returns the time associated with a particular split. </para>        </briefdescription>
        <detaileddescription>
<para>If the split does not exist, returns 0. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message tag for the split </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the time recorded for the split (seconds) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" line="86" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.cpp" bodystart="79" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classTimer_1a38dd3a8f7acae35cc31490173c8c27f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Timer::printSplits</definition>
        <argsstring>()</argsstring>
        <name>printSplits</name>
        <briefdescription>
<para>Prints the times and messages for each split to the console. </para>        </briefdescription>
        <detaileddescription>
<para>This method will loop through all of the <ref refid="classTimer" kindref="compound">Timer</ref>&apos;s splits and print a formatted message string (80 characters in length) to the console with the message and the time corresponding to that message. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" line="87" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.cpp" bodystart="96" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classTimer_1a11700956fe9bcbfefc0812e84c483764" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Timer::clearSplit</definition>
        <argsstring>(const char *msg)</argsstring>
        <name>clearSplit</name>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Clears the time split for this message and deletes the message&apos;s entry in the <ref refid="classTimer" kindref="compound">Timer</ref>&apos;s splits log. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message tag for the split </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" line="88" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.cpp" bodystart="123" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classTimer_1a7ddf22ce90eaee9c34724133300d773c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Timer::clearSplits</definition>
        <argsstring>()</argsstring>
        <name>clearSplits</name>
        <briefdescription>
<para>Clears all times split messages from the <ref refid="classTimer" kindref="compound">Timer</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" line="89" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.cpp" bodystart="137" bodyend="139"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classTimer_1a6061d2b3296f86e722c8419206681e9a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classTimer" kindref="compound">Timer</ref> *</type>
        <definition>static Timer* Timer::Get</definition>
        <argsstring>()</argsstring>
        <name>Get</name>
        <briefdescription>
<para>Returns a static instance of the <ref refid="classTimer" kindref="compound">Timer</ref> class. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a pointer to the static <ref refid="classTimer" kindref="compound">Timer</ref> class </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" line="77" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" bodystart="77" bodyend="80"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The timer class is for timing and profiling regions of code. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="104">
        <label>Timer</label>
        <link refid="classTimer"/>
      </node>
    </collaborationgraph>
    <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" line="29" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Timer.h" bodystart="29" bodyend="90"/>
    <listofallmembers>
      <member refid="classTimer_1a66c4fe8fa616be47b4d0c4ab27e69b75" prot="private" virt="non-virtual"><scope>Timer</scope><name>_elapsed_time</name></member>
      <member refid="classTimer_1a0e92367e8b9f4fe50e7395d01db259af" prot="private" virt="non-virtual"><scope>Timer</scope><name>_running</name></member>
      <member refid="classTimer_1a496c3274ed6ee2599b5f30aa1dad69a9" prot="private" virt="non-virtual"><scope>Timer</scope><name>_start_times</name></member>
      <member refid="classTimer_1ad08dbc3e99a6701d81a2e229238c80da" prot="private" virt="non-virtual"><scope>Timer</scope><name>_timer_splits</name></member>
      <member refid="classTimer_1a11700956fe9bcbfefc0812e84c483764" prot="public" virt="non-virtual"><scope>Timer</scope><name>clearSplit</name></member>
      <member refid="classTimer_1a7ddf22ce90eaee9c34724133300d773c" prot="public" virt="non-virtual"><scope>Timer</scope><name>clearSplits</name></member>
      <member refid="classTimer_1a6061d2b3296f86e722c8419206681e9a" prot="public" virt="non-virtual"><scope>Timer</scope><name>Get</name></member>
      <member refid="classTimer_1aa56c74daecc44c72c434db6c98e69178" prot="public" virt="non-virtual"><scope>Timer</scope><name>getSplit</name></member>
      <member refid="classTimer_1a490604efc23a4ff9bef8d1f9f418ecb2" prot="public" virt="non-virtual"><scope>Timer</scope><name>getTime</name></member>
      <member refid="classTimer_1a5265981127eeff609f84bf4429e5d19a" prot="private" virt="non-virtual"><scope>Timer</scope><name>operator=</name></member>
      <member refid="classTimer_1a38dd3a8f7acae35cc31490173c8c27f0" prot="public" virt="non-virtual"><scope>Timer</scope><name>printSplits</name></member>
      <member refid="classTimer_1a613c775ca0b0b08f7cf1a6c165a6b6f7" prot="public" virt="non-virtual"><scope>Timer</scope><name>recordSplit</name></member>
      <member refid="classTimer_1aa8c887576ec3b0d68c10ebf4097c367c" prot="public" virt="non-virtual"><scope>Timer</scope><name>startTimer</name></member>
      <member refid="classTimer_1a27f97da1b1d19ad74a847703ca25c455" prot="public" virt="non-virtual"><scope>Timer</scope><name>stopTimer</name></member>
      <member refid="classTimer_1aa56807b86a1b9e4a468ed40679fc92e0" prot="private" virt="non-virtual"><scope>Timer</scope><name>Timer</name></member>
      <member refid="classTimer_1a5f16e8da27d2a5a5242dead46de05d97" prot="public" virt="non-virtual"><scope>Timer</scope><name>Timer</name></member>
      <member refid="classTimer_1ad3c95ce902fce977d280256256856d64" prot="public" virt="virtual"><scope>Timer</scope><name>~Timer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
