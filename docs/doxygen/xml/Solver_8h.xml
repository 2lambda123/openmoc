<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="Solver_8h" kind="file">
    <compoundname>Solver.h</compoundname>
    <includedby refid="Solver_8cpp" local="yes">/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.cpp</includedby>
    <innerclass refid="classSolver" prot="public">Solver</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="Solver_8h_1a3d16df105bf900bad9d2b5a6061aa06d" prot="public" static="no">
        <name>_scalar_flux</name>
        <param><defname>r</defname></param>
        <param><defname>e</defname></param>
        <initializer>(_scalar_flux[(r)*_num_groups + (e)])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Indexing macro for the scalar flux in each flat source region and in each energy group </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="22" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Solver_8h_1aefc524ce5b072d1f3c928afba0a6089f" prot="public" static="no">
        <name>_source</name>
        <param><defname>r</defname></param>
        <param><defname>e</defname></param>
        <initializer>(_source[(r)*_num_groups + (e)])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Indexing macro for the total source in each flat source region and in each energy group </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="26" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Solver_8h_1adf95dbf2b22130c73aeb1b65f7c9194c" prot="public" static="no">
        <name>_old_source</name>
        <param><defname>r</defname></param>
        <param><defname>e</defname></param>
        <initializer>(_old_source[(r)*_num_groups + (e)])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Indexing macro for the total source from the previous source iteration in each flat source region and in each energy group </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="30" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Solver_8h_1a4ca9d8d56fbe0969b9158a51a91e3ea9" prot="public" static="no">
        <name>_reduced_source</name>
        <param><defname>r</defname></param>
        <param><defname>e</defname></param>
        <initializer>(_reduced_source[(r)*_num_groups + (e)])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Indexing macro for the total source divided by the total cross-section ( <formula id="2">$ \frac{Q}{\Sigma_t} $</formula>) in each flat source region and in each energy group </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="35" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Solver_8h_1a82337e9687f8a593b4b68772853353c6" prot="public" static="no">
        <name>_polar_weights</name>
        <param><defname>i</defname></param>
        <param><defname>p</defname></param>
        <initializer>(_polar_weights[(i)*_num_polar + (p)])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Indexing macro for the polar quadrature weights multiplied by the azimuthal angle quadrature weights </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="39" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Solver_8h_1a15b0f5dc814186a0e514b36f753d3bf6" prot="public" static="no">
        <name>_boundary_flux</name>
        <param><defname>i</defname></param>
        <param><defname>j</defname></param>
        <param><defname>p</defname></param>
        <param><defname>e</defname></param>
        <initializer>(_boundary_flux[(i)*2*_polar_times_groups + (j)*_polar_times_groups + (p)*_num_groups + (e)])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Indexing macro for the angular fluxes for each polar angle and energy group for the outgoing reflective track for both the forward and reverse direction for a given track </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="44" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Solver_8h_1a6c166546861725df33b4e3eea491dab5" prot="public" static="no">
        <name>_boundary_leakage</name>
        <param><defname>i</defname></param>
        <param><defname>pe2</defname></param>
        <initializer>(_boundary_leakage[2*(i)*_polar_times_groups+(pe2)])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Indexing macro for the leakage for each polar angle and energy group for both the forward and reverse direction for each track </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="48" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Solver_8h_1aa39e20548bfb214c9f1bb294da829fd7" prot="public" static="no">
        <name>_fission_sources</name>
        <param><defname>r</defname></param>
        <param><defname>e</defname></param>
        <initializer>(_fission_sources[(r)*_num_groups + (e)])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Indexing scheme for the total fission source ( <formula id="16">$ \nu\Sigma_f\Phi $</formula>) for each flat source region in each energy group </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="52" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Solver_8h_1a39e01aad71440f7e74d0bdfa70fc20fa" prot="public" static="no">
        <name>_scatter_sources</name>
        <param><defname>r</defname></param>
        <param><defname>e</defname></param>
        <initializer>(_scatter_sources[(r)*_num_groups + (e)])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Indexing scheme for the total in-scatter source ( <formula id="17">$ \Sigma_s\Phi $</formula>) for each flat source region in each energy group </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="56" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Solver_8h_1ac961447e4479429db803b1c6f77fdb99" prot="public" static="no">
        <name>_source_residuals</name>
        <param><defname>r</defname></param>
        <param><defname>e</defname></param>
        <initializer>(_source_residuals[(r)*_num_groups + (e)])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Indexing scheme for the residual between sources from this iteration and the previous iteration in each flat source region and energy group </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="60" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Solver_8h_1ac6b39b7a27b735f3a62be33f38041985" prot="public" static="no">
        <name>FOUR_PI</name>
        <initializer>12.5663706143</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The value of 4pi: <formula id="3">$ 4\pi $</formula> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="63" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Solver_8h_1a662cb71fde841f2762641d9f82e1fbb5" prot="public" static="no">
        <name>ONE_OVER_FOUR_PI</name>
        <initializer>0.0795774715</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The values of 1 divided by 4pi: <formula id="4">$ \frac{1}{4\pi} $</formula> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="66" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classSolver" kindref="compound">Solver</ref> class. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="date"><para>February 7, 2012 </para></simplesect>
<simplesect kind="author"><para>William Boyd, MIT, Course 22 (<ulink url="mailto:wboyd@mit.edu">wboyd@mit.edu</ulink>) </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="8"><highlight class="preprocessor">#ifndef<sp/>SOLVER_H_</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SOLVER_H_</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_USE_MATH_DEFINES</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Timer_8h" kindref="compound" tooltip="The Timer class.">Timer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Quadrature_8h" kindref="compound" tooltip="The Quadrature class.">Quadrature.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="TrackGenerator_8h" kindref="compound" tooltip="The TrackGenerator class.">TrackGenerator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pairwise__sum_8h" kindref="compound" tooltip="Utility function for the accurate pairwise sum of a list of floating point numbers.">pairwise_sum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="22" refid="Solver_8h_1a3d16df105bf900bad9d2b5a6061aa06d" refkind="member"><highlight class="preprocessor">#define<sp/>_scalar_flux(r,e)<sp/>(_scalar_flux[(r)*_num_groups<sp/>+<sp/>(e)])</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="26" refid="Solver_8h_1aefc524ce5b072d1f3c928afba0a6089f" refkind="member"><highlight class="preprocessor">#define<sp/>_source(r,e)<sp/>(_source[(r)*_num_groups<sp/>+<sp/>(e)])</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="30" refid="Solver_8h_1adf95dbf2b22130c73aeb1b65f7c9194c" refkind="member"><highlight class="preprocessor">#define<sp/>_old_source(r,e)<sp/>(_old_source[(r)*_num_groups<sp/>+<sp/>(e)])</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="35" refid="Solver_8h_1a4ca9d8d56fbe0969b9158a51a91e3ea9" refkind="member"><highlight class="preprocessor">#define<sp/>_reduced_source(r,e)<sp/>(_reduced_source[(r)*_num_groups<sp/>+<sp/>(e)])</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="39" refid="Solver_8h_1a82337e9687f8a593b4b68772853353c6" refkind="member"><highlight class="preprocessor">#define<sp/>_polar_weights(i,p)<sp/>(_polar_weights[(i)*_num_polar<sp/>+<sp/>(p)])</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="44" refid="Solver_8h_1a15b0f5dc814186a0e514b36f753d3bf6" refkind="member"><highlight class="preprocessor">#define<sp/>_boundary_flux(i,j,p,e)<sp/>(_boundary_flux[(i)*2*_polar_times_groups<sp/>+<sp/>(j)*_polar_times_groups<sp/>+<sp/>(p)*_num_groups<sp/>+<sp/>(e)])</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="48" refid="Solver_8h_1a6c166546861725df33b4e3eea491dab5" refkind="member"><highlight class="preprocessor">#define<sp/>_boundary_leakage(i,pe2)<sp/>(_boundary_leakage[2*(i)*_polar_times_groups+(pe2)])</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="52" refid="Solver_8h_1aa39e20548bfb214c9f1bb294da829fd7" refkind="member"><highlight class="preprocessor">#define<sp/>_fission_sources(r,e)<sp/>(_fission_sources[(r)*_num_groups<sp/>+<sp/>(e)])</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="56" refid="Solver_8h_1a39e01aad71440f7e74d0bdfa70fc20fa" refkind="member"><highlight class="preprocessor">#define<sp/>_scatter_sources(r,e)<sp/>(_scatter_sources[(r)*_num_groups<sp/>+<sp/>(e)])</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="60" refid="Solver_8h_1ac961447e4479429db803b1c6f77fdb99" refkind="member"><highlight class="preprocessor">#define<sp/>_source_residuals(r,e)<sp/>(_source_residuals[(r)*_num_groups<sp/>+<sp/>(e)])</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="63" refid="Solver_8h_1ac6b39b7a27b735f3a62be33f38041985" refkind="member"><highlight class="preprocessor">#define<sp/>FOUR_PI<sp/>12.5663706143</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="66" refid="Solver_8h_1a662cb71fde841f2762641d9f82e1fbb5" refkind="member"><highlight class="preprocessor">#define<sp/>ONE_OVER_FOUR_PI<sp/>0.0795774715</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classSolver" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classSolver" kindref="compound" tooltip="This is an abstract base class from which different types of Solvers subclass for different architect...">Solver</ref><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classSolver_1a9f0fd3a842870803f27c47ed51a83039" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a9f0fd3a842870803f27c47ed51a83039" kindref="member">_num_azim</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classSolver_1ab18db0ed64afb0dade6054a7a08ae3c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classSolver_1ab18db0ed64afb0dade6054a7a08ae3c4" kindref="member">_num_groups</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="classSolver_1a2e17e8aa8a11d4300e89179984ca4347" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a2e17e8aa8a11d4300e89179984ca4347" kindref="member">_num_FSRs</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="classSolver_1a84372339d7c2b5da3f07bc8b0822f42f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FP_PRECISION*<sp/><ref refid="classSolver_1a84372339d7c2b5da3f07bc8b0822f42f" kindref="member">_FSR_volumes</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="classSolver_1a9c124fee8429fc5e44649fbb22f930b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMaterial" kindref="compound" tooltip="The material class represents a unique material and its relevant nuclear data (ie, multigroup cross-sections) for neutron transport.">Material</ref>**<sp/><ref refid="classSolver_1a9c124fee8429fc5e44649fbb22f930b4" kindref="member">_FSR_materials</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classSolver_1a7f7349dc153dd9e728697c922cf7c052" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTrackGenerator" kindref="compound" tooltip="The track generator is dedicated to generating tracks which cyclically wrap across the geometry...">TrackGenerator</ref>*<sp/><ref refid="classSolver_1a7f7349dc153dd9e728697c922cf7c052" kindref="member">_track_generator</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classSolver_1ae323198b6be6ddc402c53784c5a89b7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGeometry" kindref="compound" tooltip="The master class containing references to all geometry-related objects (surfaces, cells...">Geometry</ref>*<sp/><ref refid="classSolver_1ae323198b6be6ddc402c53784c5a89b7f" kindref="member">_geometry</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="classSolver_1a5b17e508bd721f49a382673efcd8ae1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a5b17e508bd721f49a382673efcd8ae1b" kindref="member">_num_materials</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="classSolver_1a4cf19c17278e367f44c6e735e437103d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuadrature" kindref="compound" tooltip="Stores values for a variety of polar quadratures which may be used.">Quadrature</ref>*<sp/><ref refid="classSolver_1a4cf19c17278e367f44c6e735e437103d" kindref="member">_quad</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classSolver_1a49cc179a9f47c5ca5f6d19c954d680ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a49cc179a9f47c5ca5f6d19c954d680ad" kindref="member">_num_polar</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classSolver_1a5f9e45e5d2a93bc3b18ca2659b95ac6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a5f9e45e5d2a93bc3b18ca2659b95ac6a" kindref="member">_two_times_num_polar</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classSolver_1a84ce3dbf9e3c4a86773161e7c92b1da1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a84ce3dbf9e3c4a86773161e7c92b1da1" kindref="member">_polar_times_groups</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="classSolver_1a3c8910d870254066e9ba89c75c3a1003" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Quadrature_8h_1abaf5f877e7f8a13548058dcb876c4de1" kindref="member" tooltip="The type of polar quadrature.">quadratureType</ref><sp/><ref refid="classSolver_1a3c8910d870254066e9ba89c75c3a1003" kindref="member">_quadrature_type</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="classSolver_1a775ed41fc1268312c8fb25ec994e1351" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTrack" kindref="compound" tooltip="A track represents a characteristic line across the geometry.">Track</ref>**<sp/><ref refid="classSolver_1a775ed41fc1268312c8fb25ec994e1351" kindref="member">_tracks</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classSolver_1a564e918dc20cdc12f40e15a86fffefc2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="classSolver_1a564e918dc20cdc12f40e15a86fffefc2" kindref="member">_num_tracks</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="classSolver_1a817518832fb051823de9e8855319f02e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a817518832fb051823de9e8855319f02e" kindref="member">_tot_num_tracks</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="classSolver_1a02f013a25d984fa74aabc4c34f829960" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="classSolver_1a02f013a25d984fa74aabc4c34f829960" kindref="member">_azim_weights</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="classSolver_1a8407ebcfee31a54a67e6d5ca2e3d4e6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FP_PRECISION*<sp/><ref refid="classSolver_1a8407ebcfee31a54a67e6d5ca2e3d4e6b" kindref="member">_polar_weights</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="classSolver_1adcfcfe1758affc74780907584fc7beaf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FP_PRECISION*<sp/><ref refid="classSolver_1adcfcfe1758affc74780907584fc7beaf" kindref="member">_boundary_flux</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classSolver_1ace3972879027f76a99f24fd01618d123" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FP_PRECISION*<sp/><ref refid="classSolver_1ace3972879027f76a99f24fd01618d123" kindref="member">_boundary_leakage</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flat<sp/>source<sp/>regions<sp/>*/</highlight></codeline>
<codeline lineno="144" refid="classSolver_1a60df3fd1a13667c294b1519d59a00b87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FP_PRECISION*<sp/><ref refid="classSolver_1a60df3fd1a13667c294b1519d59a00b87" kindref="member">_scalar_flux</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="classSolver_1a63b1f8d78d02dc5a0f2dc392597cc5af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FP_PRECISION*<sp/><ref refid="classSolver_1a63b1f8d78d02dc5a0f2dc392597cc5af" kindref="member">_fission_sources</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="classSolver_1a524973fbca3ad3ace58b122c01b404f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FP_PRECISION*<sp/><ref refid="classSolver_1a524973fbca3ad3ace58b122c01b404f0" kindref="member">_scatter_sources</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="classSolver_1a935ab1926ea3d625d0c549c5f8595c07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FP_PRECISION*<sp/><ref refid="classSolver_1a935ab1926ea3d625d0c549c5f8595c07" kindref="member">_source</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="classSolver_1ad7d3233142b6798f9aea7330b221754c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FP_PRECISION*<sp/><ref refid="classSolver_1ad7d3233142b6798f9aea7330b221754c" kindref="member">_old_source</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="classSolver_1aff69bb3f354f5c598e1117e2a3515f1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FP_PRECISION*<sp/><ref refid="classSolver_1aff69bb3f354f5c598e1117e2a3515f1b" kindref="member">_reduced_source</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="classSolver_1af2285a2a6361ea1d351e3b8c55858c92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FP_PRECISION*<sp/><ref refid="classSolver_1af2285a2a6361ea1d351e3b8c55858c92" kindref="member">_source_residuals</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="classSolver_1ac6de9ad9091dae955848d83a91b0f3b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FP_PRECISION*<sp/><ref refid="classSolver_1ac6de9ad9091dae955848d83a91b0f3b5" kindref="member">_FSRs_to_powers</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="classSolver_1a2ae997684ddbc16e2c8575cb6dcad788" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FP_PRECISION*<sp/><ref refid="classSolver_1a2ae997684ddbc16e2c8575cb6dcad788" kindref="member">_FSRs_to_pin_powers</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="classSolver_1a3c52f5e2ecbe44ebca20e6696a09e447" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FP_PRECISION<sp/><ref refid="classSolver_1a3c52f5e2ecbe44ebca20e6696a09e447" kindref="member">_k_eff</ref>;<sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="classSolver_1ab1d00b7a1ac0cddd6e0d88cc309a97aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FP_PRECISION<sp/><ref refid="classSolver_1ab1d00b7a1ac0cddd6e0d88cc309a97aa" kindref="member">_leakage</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="classSolver_1a06f3fd380731eb988cb2fc5232cb94b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a06f3fd380731eb988cb2fc5232cb94b3" kindref="member">_num_iterations</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="classSolver_1a1ce60126ba4fa0b05b08943ddd7cf295" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a1ce60126ba4fa0b05b08943ddd7cf295" kindref="member">_converged_source</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="classSolver_1a4aa4d18f980bbb098f839835e5e2f35d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FP_PRECISION<sp/><ref refid="classSolver_1a4aa4d18f980bbb098f839835e5e2f35d" kindref="member">_source_convergence_thresh</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="classSolver_1a1263a3948d7fe87874854460a3701d82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a1263a3948d7fe87874854460a3701d82" kindref="member">_interpolate_exponential</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Exponential<sp/>pre-factor<sp/>hash<sp/>table<sp/>*/</highlight></codeline>
<codeline lineno="195" refid="classSolver_1a64ce3d9a61c55fa470b91b68497dd9d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FP_PRECISION*<sp/><ref refid="classSolver_1a64ce3d9a61c55fa470b91b68497dd9d6" kindref="member">_prefactor_array</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="classSolver_1a43ee296db0a4d4cc695be82fea2e2ee5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a43ee296db0a4d4cc695be82fea2e2ee5" kindref="member">_prefactor_array_size</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="classSolver_1a1a18b47465922034d8669238fedbe176" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a1a18b47465922034d8669238fedbe176" kindref="member">_prefactor_max_index</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="classSolver_1a354a2964b53e89ffb03d256eaccdeb47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FP_PRECISION<sp/><ref refid="classSolver_1a354a2964b53e89ffb03d256eaccdeb47" kindref="member">_prefactor_spacing</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="classSolver_1a4ed58ea28163beec97a5efe1c1874c02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FP_PRECISION<sp/><ref refid="classSolver_1a4ed58ea28163beec97a5efe1c1874c02" kindref="member">_inverse_prefactor_spacing</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="classSolver_1a3cab54ec3cb374d796180b94201276ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTimer" kindref="compound" tooltip="The timer class is for timing and profiling regions of code.">Timer</ref>*<sp/><ref refid="classSolver_1a3cab54ec3cb374d796180b94201276ec" kindref="member">_timer</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a6591b996eb837e0c4184424e48e191a3" kindref="member" tooltip="Creates a polar quadrature object for the solver.">initializePolarQuadrature</ref>()<sp/>=0;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a512ac25e056b3e2d77ae9159e793babf" kindref="member" tooltip="Initializes the volumes and material arrays for each flat source region.">initializeFSRs</ref>()<sp/>=0;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a916eb7ef96140e1ea2d22bb9d1c86240" kindref="member" tooltip="Allocates memory for track boundary angular fluxes and leakages flat source region scalar fluxes...">initializeFluxArrays</ref>()<sp/>=0;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a8592d819738b24a5b983e54c0a635d30" kindref="member" tooltip="Allocates memory for flat source region source arrays.">initializeSourceArrays</ref>()<sp/>=0;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a4d5a5373ca8cb3e04e745eace85115b0" kindref="member" tooltip="Allocates memory for flat source region power arrays.">initializePowerArrays</ref>()<sp/>=0;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a5a9d6fc967c1f8ba7eb6b34094f8fd25" kindref="member" tooltip="Builds an interpolation table for the exponential prefactors referenced for each segment in the trans...">precomputePrefactors</ref>()<sp/>=0;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a4ab290c6ca1d74230bf885cfc7f58b7a" kindref="member" tooltip="Checks that each flat source region has at least one segment within it and if not, throws an exception and prints an error message.">checkTrackSpacing</ref>();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1ac9960f6987c85a3d8e670beb10a9fbb2" kindref="member" tooltip="Zero each track&amp;#39;s boundary fluxes for each energy group and polar angle in the &amp;quot;forward&amp;quot; and &amp;quot;reverse...">zeroTrackFluxes</ref>()<sp/>=0;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a148137c97310ee2df94a4fd3fe35456f" kindref="member" tooltip="Set the scalar flux for each energy group inside each flat source region to a constant value...">flattenFSRFluxes</ref>(FP_PRECISION<sp/>value)<sp/>=0;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a906c202ff2b3e38443f333964efa2342" kindref="member" tooltip="Set the source for each energy group in each flat source region to a constant value.">flattenFSRSources</ref>(FP_PRECISION<sp/>value)<sp/>=0;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1aeb89db6a6b624b222494625613b2ed57" kindref="member" tooltip="Normalizes all flat source region scalar fluxes and track boundary angular fluxes to the total fissio...">normalizeFluxes</ref>()<sp/>=0;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>FP_PRECISION<sp/><ref refid="classSolver_1af3265d25938ee473633e193bc59202c8" kindref="member" tooltip="Computes the total source (fission and scattering) in each flat source region.">computeFSRSources</ref>()<sp/>=0;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a7d0c4632edff104979002eb21d38d794" kindref="member" tooltip="Compute  from total fission and absorption rates.">computeKeff</ref>()<sp/>=0;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a431c793e0164e134d35fecf9e1e56434" kindref="member" tooltip="Add the source term contribution in the transport equation to the flat source region scalar flux...">addSourceToScalarFlux</ref>()<sp/>=0;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1ab029744c3532b239fab583c4f8d8ea98" kindref="member" tooltip="This method performs one transport sweep of all azimuthal angles, tracks, segments, polar angles and energy groups.">transportSweep</ref>()<sp/>=0;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a4f6e2e3069aa9404fefd62be376e8390" kindref="member" tooltip="Deletes the Timer&amp;#39;s timing entries for each timed code section code in the source convergence loop...">clearTimerSplits</ref>();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a950a0ef510e9eb4a92984473c668c198" kindref="member" tooltip="Constructor initializes array pointers for tracks and materials.">Solver</ref>(<ref refid="classGeometry" kindref="compound" tooltip="The master class containing references to all geometry-related objects (surfaces, cells...">Geometry</ref>*<sp/>geom=NULL,<sp/><ref refid="classTrackGenerator" kindref="compound" tooltip="The track generator is dedicated to generating tracks which cyclically wrap across the geometry...">TrackGenerator</ref>*<sp/>track_generator=NULL);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classSolver_1aba52d3c92fafceb6fe39f937f2d73db3" kindref="member" tooltip="Destructor deletes arrays of boundary angular fluxes, scalar fluxes and sources for each flat source ...">~Solver</ref>();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGeometry" kindref="compound" tooltip="The master class containing references to all geometry-related objects (surfaces, cells...">Geometry</ref>*<sp/><ref refid="classSolver_1afd394d9603d0ceba175d96a53f54d7fa" kindref="member" tooltip="Returns a pointer to the geometry.">getGeometry</ref>();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTrackGenerator" kindref="compound" tooltip="The track generator is dedicated to generating tracks which cyclically wrap across the geometry...">TrackGenerator</ref>*<sp/><ref refid="classSolver_1ac47a004e88d7fde15880ab8c2b08e754" kindref="member" tooltip="Returns a pointer to the track generator.">getTrackGenerator</ref>();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classSolver_1ae3012e43ec82aea38b7ff0c26a6e5003" kindref="member" tooltip="Returns the number of angles used for the polar quadrature.">getNumPolarAngles</ref>();</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Quadrature_8h_1abaf5f877e7f8a13548058dcb876c4de1" kindref="member" tooltip="The type of polar quadrature.">quadratureType</ref><sp/><ref refid="classSolver_1a8810de68de50b5f4881e89e68733960a" kindref="member" tooltip="Returns the type of polar quadrature in use (TABUCHI or LEONARD).">getPolarQuadratureType</ref>();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a4e2f2f30ca4bae8871b30bb188a29b38" kindref="member" tooltip="Returns the number of transport sweeps to converge the source.">getNumIterations</ref>();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>FP_PRECISION<sp/><ref refid="classSolver_1af3ec5e2776910329b6502e9fc06d533b" kindref="member" tooltip="Returns the threshold for source convergence.">getSourceConvergenceThreshold</ref>();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>FP_PRECISION<sp/><ref refid="classSolver_1a14aa82ed26bb664d3dc89a19b9f13c63" kindref="member" tooltip="Returns the scalar flux for a flat source region.">getFSRScalarFlux</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fsr_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>energy_group)<sp/>=0;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>FP_PRECISION*<sp/><ref refid="classSolver_1ac1981f25afb9ada5cc1e6c40067bc479" kindref="member" tooltip="Returns an array of the scalar flux in each flat source region in each energy group.">getFSRScalarFluxes</ref>()<sp/>=0;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>FP_PRECISION*<sp/><ref refid="classSolver_1a971144e2d1207ca63abdd2b16db3afa0" kindref="member" tooltip="Returns an array indexed by flat source region IDs with the corresponding flat source region power...">getFSRPowers</ref>()<sp/>=0;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>FP_PRECISION*<sp/><ref refid="classSolver_1ab343527c6bdb72f13080c0df79e6bbea" kindref="member" tooltip="Return an array indexed by flat source region IDs with the corresponding pin cell power...">getFSRPinPowers</ref>()<sp/>=0;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a117012c7ecaf59b70fa6b489562acc65" kindref="member" tooltip="Sets the geometry for the solver.">setGeometry</ref>(<ref refid="classGeometry" kindref="compound" tooltip="The master class containing references to all geometry-related objects (surfaces, cells...">Geometry</ref>*<sp/>geometry);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1ac07cee2fe04515dc8e4d2980d567c4c5" kindref="member" tooltip="Sets the track generator with characteristic tracks for the solver.">setTrackGenerator</ref>(<ref refid="classTrackGenerator" kindref="compound" tooltip="The track generator is dedicated to generating tracks which cyclically wrap across the geometry...">TrackGenerator</ref>*<sp/>track_generator);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1aa602cd57f7b72f13050920f2c752815e" kindref="member" tooltip="Sets the type of polar angle quadrature set to use (ie, TABUCHI or LEONARD).">setPolarQuadratureType</ref>(<ref refid="Quadrature_8h_1abaf5f877e7f8a13548058dcb876c4de1" kindref="member" tooltip="The type of polar quadrature.">quadratureType</ref><sp/>quadrature_type);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a069e8bf490a2f5de391f57cd9e7224ed" kindref="member" tooltip="Sets the number of polar angles to use (only 1, 2, or 3 currently supported).">setNumPolarAngles</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_polar);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1aaace17535420183bd7c699b0a10c1e01" kindref="member" tooltip="Sets the threshold for source convergence (&amp;gt;0)">setSourceConvergenceThreshold</ref>(FP_PRECISION<sp/>source_thresh);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a627f677bdb8a621a632b581bc976b2a5" kindref="member" tooltip="Sets the solver to use linear interpolation to compute the exponential in the transport equation...">useExponentialInterpolation</ref>();</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a5400c11874dac7f00ade6e7c2d573aee" kindref="member" tooltip="Sets the solver to use the exponential intrinsic function to compute the exponential in the transport...">useExponentialIntrinsic</ref>();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>FP_PRECISION<sp/><ref refid="classSolver_1af8358a66a7cbd56339211f80a2365678" kindref="member" tooltip="Computes keff by performing a series of transport sweep and source updates.">convergeSource</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_iterations);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a1a76bce692d3f35e880832234ae3c4b5" kindref="member" tooltip="Compute the fission rates in each flat source region and stores them in an array indexed by flat sour...">computePinPowers</ref>()<sp/>=0;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1aeec2b08ba9d6be88cf08f1fc02658500" kindref="member" tooltip="Prints a report of the timing statistics to the console.">printTimerReport</ref>();</highlight></codeline>
<codeline lineno="360"><highlight class="normal">};</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SOLVER_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h"/>
  </compounddef>
</doxygen>
