<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="namespaceopenmoc_1_1plotter" kind="namespace">
    <compoundname>openmoc::plotter</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceopenmoc_1_1plotter_1a73f3d44767f961058c38ba1daab1037b" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string openmoc::plotter.subdirectory</definition>
        <argsstring></argsstring>
        <name>subdirectory</name>
        <initializer>&quot;/plots/&quot;</initializer>
        <briefdescription>
<para>A static variable for the output directory in which to save plots. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/openmoc/plotter.py" line="22" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/openmoc/plotter.py" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceopenmoc_1_1plotter_1aa0c0f853f1454f5724f25450b376168b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int openmoc::plotter.num_colors</definition>
        <argsstring></argsstring>
        <name>num_colors</name>
        <initializer>50</initializer>
        <briefdescription>
<para>The number of colors to use when creating a random color map for plots. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/openmoc/plotter.py" line="25" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/openmoc/plotter.py" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceopenmoc_1_1plotter_1ab4cddaf8a44b4d1d6a0b8eda9639c713" prot="public" static="no" mutable="no">
        <type>tuple</type>
        <definition>tuple openmoc::plotter.color_map</definition>
        <argsstring></argsstring>
        <name>color_map</name>
        <initializer>np.random.random_sample((<ref refid="namespaceopenmoc_1_1plotter_1aa0c0f853f1454f5724f25450b376168b" kindref="member">num_colors</ref>,))</initializer>
        <briefdescription>
<para>An array of random floats that represents a random color map for plots. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/openmoc/plotter.py" line="28" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/openmoc/plotter.py" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceopenmoc_1_1plotter_1a8a04957c56320983285e9e56be4144b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def openmoc.plotter.plotTracks</definition>
        <argsstring></argsstring>
        <name>plotTracks</name>
        <briefdescription>
<para>Plots the characteristic tracks from an OpenMOC simulation. </para>        </briefdescription>
        <detaileddescription>
<para>This method requires that tracks have been generated by a <ref refid="classTrackGenerator" kindref="compound">TrackGenerator</ref> object. A user may invoke this function from an OpenMOC Python file as follows:</para><para><programlisting><codeline><highlight class="normal">openmoc.plotter.plotTracks(my_track_generator)</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>track_generator</parametername>
</parameternamelist>
<parameterdescription>
<para>the track generator which has generated tracks </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/openmoc/plotter.py" line="42" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/openmoc/plotter.py" bodystart="42" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopenmoc_1_1plotter_1ab414c4473fb5e278fbd0361d9b1891d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def openmoc.plotter.plotSegments</definition>
        <argsstring></argsstring>
        <name>plotSegments</name>
        <briefdescription>
<para>Plots the characteristic track segments from an OpenMOC simulation. </para>        </briefdescription>
        <detaileddescription>
<para>This method requires that tracks have been generated by a <ref refid="classTrackGenerator" kindref="compound">TrackGenerator</ref> object. Each segment is colored by the ID of the unique flat flat source region it is within. A user may invoke this function from an OpenMOC Python file as follows:</para><para><programlisting><codeline><highlight class="normal">openmoc.plotter.plotSegments(my_track_generator)</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>track_generator</parametername>
</parameternamelist>
<parameterdescription>
<para>the track generator which has generated tracks </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/openmoc/plotter.py" line="103" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/openmoc/plotter.py" bodystart="103" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopenmoc_1_1plotter_1ad7120272536f7341576a6ca6b8d4f9dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def openmoc.plotter.plotMaterials</definition>
        <argsstring></argsstring>
        <name>plotMaterials</name>
        <briefdescription>
<para>This method takes in a geometry object and plots a color-coded 2D surface # plot representing the materials in the geometry. </para>        </briefdescription>
        <detaileddescription>
<para>The geometry object must be initialized with materials, cells, universes and lattices before being passed into this method. A user may invoke this function from an OpenMOC Python file as follows:</para><para><programlisting><codeline><highlight class="normal">openmoc.plotter.plotMaterials(my_geometry)</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>a geometry object which has been initialized with materials, cells, universes and lattices </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gridsize</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional number of grid cells for the plot </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/openmoc/plotter.py" line="180" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/openmoc/plotter.py" bodystart="180" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopenmoc_1_1plotter_1ae06bcd2b75c33dd4b97b4b203e0e5635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def openmoc.plotter.plotCells</definition>
        <argsstring></argsstring>
        <name>plotCells</name>
        <briefdescription>
<para>This method takes in a geometry object and plots a color-coded 2D surface # plot representing the cells in the geometry. </para>        </briefdescription>
        <detaileddescription>
<para>The geometry object must be initialized with materials, cells, universes and lattices before being passed into this method. A user may invoke this function from an OpenMOC Python file as follows:</para><para><programlisting><codeline><highlight class="normal">openmoc.plotter.plotCells(my_geometry)</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>a geometry object which has been initialized with materials, cells, universes and lattices </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gridsize</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional number of grid cells for the plot </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/openmoc/plotter.py" line="253" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/openmoc/plotter.py" bodystart="253" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopenmoc_1_1plotter_1aae32e62e2988ab7d5db716f2416496f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def openmoc.plotter.plotFlatSourceRegions</definition>
        <argsstring></argsstring>
        <name>plotFlatSourceRegions</name>
        <briefdescription>
<para>This method takes in a geometry object and plots a color-coded 2D surface # plot representing the flat source regions in the geometry. </para>        </briefdescription>
        <detaileddescription>
<para>The geometry object must be initialized with materials, cells, universes and lattices before being passed into this method. A user may invoke this function from an OpenMOC Python file as follows:</para><para><programlisting><codeline><highlight class="normal">openmoc.plotter.plotFlatSourceRegions(my_geometry)</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>a geometry object which has been initialized with materials, cells, universes and lattices </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gridsize</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional number of grid cells for the plot </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/openmoc/plotter.py" line="328" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/openmoc/plotter.py" bodystart="328" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopenmoc_1_1plotter_1ac3fcbc9e21c9fa061f4b424c691c2216" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def openmoc.plotter.plotFluxes</definition>
        <argsstring></argsstring>
        <name>plotFluxes</name>
        <briefdescription>
<para>This method takes in a geometry object and plots a color-coded 2D surface # plot representing the flat source regions in the geometry. </para>        </briefdescription>
        <detaileddescription>
<para>The geometry object must be initialized with materials, cells, universes and lattices before being passed into this method. A user may invoke this function from an OpenMOC Python file as follows:</para><para><programlisting><codeline><highlight class="normal">openmoc.plotter.plotFlatSourceRegions(my_geometry)</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>a geometry object which has been initialized with materials, cells, universes and lattices </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gridsize</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional number of grid cells for the plot </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/openmoc/plotter.py" line="401" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/openmoc/plotter.py" bodystart="401" bodyend="505"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The plotter module provides utility functions to plot data from OpenMOCs C++ classes, in particular, the geomery, including material, cells and flat source regions, and fluxes and pin powers. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>William Boyd (<ulink url="mailto:wboyd@mit.edu">wboyd@mit.edu</ulink>) </para></simplesect>
<simplesect kind="date"><para>March 10, 2013 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/openmoc/plotter.py" line="1"/>
  </compounddef>
</doxygen>
