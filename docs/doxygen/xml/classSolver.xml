<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="classSolver" kind="class" prot="public">
    <compoundname>Solver</compoundname>
    <derivedcompoundref refid="classCPUSolver" prot="public" virt="non-virtual">CPUSolver</derivedcompoundref>
    <derivedcompoundref refid="classGPUSolver" prot="public" virt="non-virtual">GPUSolver</derivedcompoundref>
    <includes refid="Solver_8h" local="yes">openmoc/src/host/Solver.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classSolver_1a9f0fd3a842870803f27c47ed51a83039" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Solver::_num_azim</definition>
        <argsstring></argsstring>
        <name>_num_azim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of azimuthal angles </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="79" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1ab18db0ed64afb0dade6054a7a08ae3c4" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Solver::_num_groups</definition>
        <argsstring></argsstring>
        <name>_num_groups</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of energy groups </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="82" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a2e17e8aa8a11d4300e89179984ca4347" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Solver::_num_FSRs</definition>
        <argsstring></argsstring>
        <name>_num_FSRs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of flat source regions </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="85" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a84372339d7c2b5da3f07bc8b0822f42f" prot="protected" static="no" mutable="no">
        <type>FP_PRECISION *</type>
        <definition>FP_PRECISION* Solver::_FSR_volumes</definition>
        <argsstring></argsstring>
        <name>_FSR_volumes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The flat source region &quot;volumes&quot; (ie, areas) index by FSR UID </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="88" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a9c124fee8429fc5e44649fbb22f930b4" prot="protected" static="no" mutable="no">
        <type><ref refid="classMaterial" kindref="compound">Material</ref> **</type>
        <definition>Material** Solver::_FSR_materials</definition>
        <argsstring></argsstring>
        <name>_FSR_materials</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The flat source region material pointers index by FSR UID </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="91" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a7f7349dc153dd9e728697c922cf7c052" prot="protected" static="no" mutable="no">
        <type><ref refid="classTrackGenerator" kindref="compound">TrackGenerator</ref> *</type>
        <definition>TrackGenerator* Solver::_track_generator</definition>
        <argsstring></argsstring>
        <name>_track_generator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to a trackgenerator which contains tracks </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="94" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1ae323198b6be6ddc402c53784c5a89b7f" prot="protected" static="no" mutable="no">
        <type><ref refid="classGeometry" kindref="compound">Geometry</ref> *</type>
        <definition>Geometry* Solver::_geometry</definition>
        <argsstring></argsstring>
        <name>_geometry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to a geometry with initialized flat source region maps </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="97" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a5b17e508bd721f49a382673efcd8ae1b" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Solver::_num_materials</definition>
        <argsstring></argsstring>
        <name>_num_materials</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of materials </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="100" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a4cf19c17278e367f44c6e735e437103d" prot="protected" static="no" mutable="no">
        <type><ref refid="classQuadrature" kindref="compound">Quadrature</ref> *</type>
        <definition>Quadrature* Solver::_quad</definition>
        <argsstring></argsstring>
        <name>_quad</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to a polar quadrature </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="103" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a49cc179a9f47c5ca5f6d19c954d680ad" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Solver::_num_polar</definition>
        <argsstring></argsstring>
        <name>_num_polar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of polar angles </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="106" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a5f9e45e5d2a93bc3b18ca2659b95ac6a" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Solver::_two_times_num_polar</definition>
        <argsstring></argsstring>
        <name>_two_times_num_polar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Twice the number of polar angles </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="109" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a84ce3dbf9e3c4a86773161e7c92b1da1" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Solver::_polar_times_groups</definition>
        <argsstring></argsstring>
        <name>_polar_times_groups</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of polar angles times energy groups </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="112" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a3c8910d870254066e9ba89c75c3a1003" prot="protected" static="no" mutable="no">
        <type><ref refid="Quadrature_8h_1abaf5f877e7f8a13548058dcb876c4de1" kindref="member">quadratureType</ref></type>
        <definition>quadratureType Solver::_quadrature_type</definition>
        <argsstring></argsstring>
        <name>_quadrature_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The type of polar quadrature (TABUCHI or LEONARD) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="115" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a775ed41fc1268312c8fb25ec994e1351" prot="protected" static="no" mutable="no">
        <type><ref refid="classTrack" kindref="compound">Track</ref> **</type>
        <definition>Track** Solver::_tracks</definition>
        <argsstring></argsstring>
        <name>_tracks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to the 2D ragged array of tracks </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="118" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a564e918dc20cdc12f40e15a86fffefc2" prot="protected" static="no" mutable="no">
        <type>int *</type>
        <definition>int* Solver::_num_tracks</definition>
        <argsstring></argsstring>
        <name>_num_tracks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to an array with the number of tracks per azimuthal angle </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="121" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a817518832fb051823de9e8855319f02e" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Solver::_tot_num_tracks</definition>
        <argsstring></argsstring>
        <name>_tot_num_tracks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The total number of tracks </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="124" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a02f013a25d984fa74aabc4c34f829960" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Solver::_azim_weights</definition>
        <argsstring></argsstring>
        <name>_azim_weights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The weights for each azimuthal angle </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="127" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a8407ebcfee31a54a67e6d5ca2e3d4e6b" prot="protected" static="no" mutable="no">
        <type>FP_PRECISION *</type>
        <definition>FP_PRECISION* Solver::_polar_weights</definition>
        <argsstring></argsstring>
        <name>_polar_weights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The weights for each polar angle in the polar angle quadrature </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="130" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1adcfcfe1758affc74780907584fc7beaf" prot="protected" static="no" mutable="no">
        <type>FP_PRECISION *</type>
        <definition>FP_PRECISION* Solver::_boundary_flux</definition>
        <argsstring></argsstring>
        <name>_boundary_flux</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The angular fluxes for each track for all energy groups, polar angles, and azimuthal angles. This array stores the boundary fluxes for a a track along both &quot;forward&quot; and &quot;reverse&quot; directions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="135" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1ace3972879027f76a99f24fd01618d123" prot="protected" static="no" mutable="no">
        <type>FP_PRECISION *</type>
        <definition>FP_PRECISION* Solver::_boundary_leakage</definition>
        <argsstring></argsstring>
        <name>_boundary_leakage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The angular leakages for each track for all energy groups, polar angles, and azimuthal angles. This array stores the weighted outgoing fluxes for a track along both &quot;forward&quot; and &quot;reverse&quot; directions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="140" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a60df3fd1a13667c294b1519d59a00b87" prot="protected" static="no" mutable="no">
        <type>FP_PRECISION *</type>
        <definition>FP_PRECISION* Solver::_scalar_flux</definition>
        <argsstring></argsstring>
        <name>_scalar_flux</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The scalar flux for each energy group in each flat source region </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="144" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a63b1f8d78d02dc5a0f2dc392597cc5af" prot="protected" static="no" mutable="no">
        <type>FP_PRECISION *</type>
        <definition>FP_PRECISION* Solver::_fission_sources</definition>
        <argsstring></argsstring>
        <name>_fission_sources</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The fission source in each energy group in each flat source region </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="147" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a524973fbca3ad3ace58b122c01b404f0" prot="protected" static="no" mutable="no">
        <type>FP_PRECISION *</type>
        <definition>FP_PRECISION* Solver::_scatter_sources</definition>
        <argsstring></argsstring>
        <name>_scatter_sources</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The in-scatter source in each energy group in each flat source region </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="150" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a935ab1926ea3d625d0c549c5f8595c07" prot="protected" static="no" mutable="no">
        <type>FP_PRECISION *</type>
        <definition>FP_PRECISION* Solver::_source</definition>
        <argsstring></argsstring>
        <name>_source</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The source in each energy group in each flat source region </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="153" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1ad7d3233142b6798f9aea7330b221754c" prot="protected" static="no" mutable="no">
        <type>FP_PRECISION *</type>
        <definition>FP_PRECISION* Solver::_old_source</definition>
        <argsstring></argsstring>
        <name>_old_source</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The source in each energy group in each flat source region from the previous iteration </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="157" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1aff69bb3f354f5c598e1117e2a3515f1b" prot="protected" static="no" mutable="no">
        <type>FP_PRECISION *</type>
        <definition>FP_PRECISION* Solver::_reduced_source</definition>
        <argsstring></argsstring>
        <name>_reduced_source</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pre-computed ratio of source / sigma_t for each energy group in each flat source region </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="161" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1af2285a2a6361ea1d351e3b8c55858c92" prot="protected" static="no" mutable="no">
        <type>FP_PRECISION *</type>
        <definition>FP_PRECISION* Solver::_source_residuals</definition>
        <argsstring></argsstring>
        <name>_source_residuals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An array of the residuals between the old source and the new source on each iteration in each flat source region and energy group </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="165" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1ac6de9ad9091dae955848d83a91b0f3b5" prot="protected" static="no" mutable="no">
        <type>FP_PRECISION *</type>
        <definition>FP_PRECISION* Solver::_FSRs_to_powers</definition>
        <argsstring></argsstring>
        <name>_FSRs_to_powers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The normalized power in each flat source region </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="168" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a2ae997684ddbc16e2c8575cb6dcad788" prot="protected" static="no" mutable="no">
        <type>FP_PRECISION *</type>
        <definition>FP_PRECISION* Solver::_FSRs_to_pin_powers</definition>
        <argsstring></argsstring>
        <name>_FSRs_to_pin_powers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The normalized power corresponding to the pin which each flat source region is within (0 for all moderator cells) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="172" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a3c52f5e2ecbe44ebca20e6696a09e447" prot="protected" static="no" mutable="no">
        <type>FP_PRECISION</type>
        <definition>FP_PRECISION Solver::_k_eff</definition>
        <argsstring></argsstring>
        <name>_k_eff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The current iteration&apos;s approximation to k-effective </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="175" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1ab1d00b7a1ac0cddd6e0d88cc309a97aa" prot="protected" static="no" mutable="no">
        <type>FP_PRECISION</type>
        <definition>FP_PRECISION Solver::_leakage</definition>
        <argsstring></argsstring>
        <name>_leakage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The total leakage across vacuum boundaries </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="178" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a06f3fd380731eb988cb2fc5232cb94b3" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Solver::_num_iterations</definition>
        <argsstring></argsstring>
        <name>_num_iterations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of transport sweeps to convergence </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="181" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a1ce60126ba4fa0b05b08943ddd7cf295" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Solver::_converged_source</definition>
        <argsstring></argsstring>
        <name>_converged_source</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether or not the <ref refid="classSolver" kindref="compound">Solver</ref> has converged the source </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="184" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a4aa4d18f980bbb098f839835e5e2f35d" prot="protected" static="no" mutable="no">
        <type>FP_PRECISION</type>
        <definition>FP_PRECISION Solver::_source_convergence_thresh</definition>
        <argsstring></argsstring>
        <name>_source_convergence_thresh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The tolerance for converging the source </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="187" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a1263a3948d7fe87874854460a3701d82" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Solver::_interpolate_exponential</definition>
        <argsstring></argsstring>
        <name>_interpolate_exponential</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A boolean indicating whether or not to use linear interpolation to comptue the exponential in the transport equation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="191" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a64ce3d9a61c55fa470b91b68497dd9d6" prot="protected" static="no" mutable="no">
        <type>FP_PRECISION *</type>
        <definition>FP_PRECISION* Solver::_prefactor_array</definition>
        <argsstring></argsstring>
        <name>_prefactor_array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The hashtable of exponential prefactors from the transport equation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="195" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a43ee296db0a4d4cc695be82fea2e2ee5" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Solver::_prefactor_array_size</definition>
        <argsstring></argsstring>
        <name>_prefactor_array_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The size of the exponential prefactor array </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="198" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a1a18b47465922034d8669238fedbe176" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Solver::_prefactor_max_index</definition>
        <argsstring></argsstring>
        <name>_prefactor_max_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The maximum index of the exponential prefactor array </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="201" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a354a2964b53e89ffb03d256eaccdeb47" prot="protected" static="no" mutable="no">
        <type>FP_PRECISION</type>
        <definition>FP_PRECISION Solver::_prefactor_spacing</definition>
        <argsstring></argsstring>
        <name>_prefactor_spacing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The spacing for the exponential prefactor array </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="204" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a4ed58ea28163beec97a5efe1c1874c02" prot="protected" static="no" mutable="no">
        <type>FP_PRECISION</type>
        <definition>FP_PRECISION Solver::_inverse_prefactor_spacing</definition>
        <argsstring></argsstring>
        <name>_inverse_prefactor_spacing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The inverse spacing for the exponential prefactor array </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="207" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSolver_1a3cab54ec3cb374d796180b94201276ec" prot="protected" static="no" mutable="no">
        <type><ref refid="classTimer" kindref="compound">Timer</ref> *</type>
        <definition>Timer* Solver::_timer</definition>
        <argsstring></argsstring>
        <name>_timer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A timer to record timing data for a simulation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="210" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classSolver_1a6591b996eb837e0c4184424e48e191a3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Solver::initializePolarQuadrature</definition>
        <argsstring>()=0</argsstring>
        <name>initializePolarQuadrature</name>
        <reimplementedby refid="classCPUSolver_1a061a09ddde28c55cda28a8734eac4c1a">initializePolarQuadrature</reimplementedby>
        <briefdescription>
<para>Creates a polar quadrature object for the solver. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="215"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1a512ac25e056b3e2d77ae9159e793babf" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Solver::initializeFSRs</definition>
        <argsstring>()=0</argsstring>
        <name>initializeFSRs</name>
        <reimplementedby refid="classCPUSolver_1aafc9bf9eb416a12cbe21ddde4b5f9f1c">initializeFSRs</reimplementedby>
        <briefdescription>
<para>Initializes the volumes and material arrays for each flat source region. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="221"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1a916eb7ef96140e1ea2d22bb9d1c86240" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Solver::initializeFluxArrays</definition>
        <argsstring>()=0</argsstring>
        <name>initializeFluxArrays</name>
        <reimplementedby refid="classThreadPrivateSolver_1a916aa2e259b03848d5a35c9e3c29ac4b">initializeFluxArrays</reimplementedby>
        <reimplementedby refid="classVectorizedSolver_1a6d5bac107495fe429839826859b7dfa1">initializeFluxArrays</reimplementedby>
        <reimplementedby refid="classCPUSolver_1a8eac5804397c5e5f95d73b19a6e4cbfd">initializeFluxArrays</reimplementedby>
        <briefdescription>
<para>Allocates memory for track boundary angular fluxes and leakages flat source region scalar fluxes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="227"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1a8592d819738b24a5b983e54c0a635d30" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Solver::initializeSourceArrays</definition>
        <argsstring>()=0</argsstring>
        <name>initializeSourceArrays</name>
        <reimplementedby refid="classVectorizedSolver_1a7287329d44d695ca91181e9484e32bca">initializeSourceArrays</reimplementedby>
        <reimplementedby refid="classCPUSolver_1a51419d540c7eea9d29c3df963cc80784">initializeSourceArrays</reimplementedby>
        <briefdescription>
<para>Allocates memory for flat source region source arrays. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="232"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1a4d5a5373ca8cb3e04e745eace85115b0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Solver::initializePowerArrays</definition>
        <argsstring>()=0</argsstring>
        <name>initializePowerArrays</name>
        <reimplementedby refid="classCPUSolver_1aea001e3d177ce6eec0d650025ec821bc">initializePowerArrays</reimplementedby>
        <briefdescription>
<para>Allocates memory for flat source region power arrays. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="237"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1a5a9d6fc967c1f8ba7eb6b34094f8fd25" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Solver::precomputePrefactors</definition>
        <argsstring>()=0</argsstring>
        <name>precomputePrefactors</name>
        <reimplementedby refid="classVectorizedSolver_1a1a834bd814813507db91da90de08a0d0">precomputePrefactors</reimplementedby>
        <reimplementedby refid="classCPUSolver_1ad7622d98f9b5664bcfdef86762b32f86">precomputePrefactors</reimplementedby>
        <briefdescription>
<para>Builds an interpolation table for the exponential prefactors referenced for each segment in the transport equation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="244"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1a4ab290c6ca1d74230bf885cfc7f58b7a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Solver::checkTrackSpacing</definition>
        <argsstring>()</argsstring>
        <name>checkTrackSpacing</name>
        <briefdescription>
<para>Checks that each flat source region has at least one segment within it and if not, throws an exception and prints an error message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="246" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.cpp" bodystart="313" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1ac9960f6987c85a3d8e670beb10a9fbb2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Solver::zeroTrackFluxes</definition>
        <argsstring>()=0</argsstring>
        <name>zeroTrackFluxes</name>
        <reimplementedby refid="classCPUSolver_1a003f1ec12b683d237d62a23c7364dd5c">zeroTrackFluxes</reimplementedby>
        <briefdescription>
<para>Zero each track&apos;s boundary fluxes for each energy group and polar angle in the &quot;forward&quot; and &quot;reverse&quot; directions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="252"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1a148137c97310ee2df94a4fd3fe35456f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Solver::flattenFSRFluxes</definition>
        <argsstring>(FP_PRECISION value)=0</argsstring>
        <name>flattenFSRFluxes</name>
        <reimplementedby refid="classThreadPrivateSolver_1a59774ef30af398b452a767a338e01517">flattenFSRFluxes</reimplementedby>
        <reimplementedby refid="classCPUSolver_1a154cbd82754abdadb2ca57068ec12102">flattenFSRFluxes</reimplementedby>
        <param>
          <type>FP_PRECISION</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the scalar flux for each energy group inside each flat source region to a constant value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to assign to each flat source region flux </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="259"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1a906c202ff2b3e38443f333964efa2342" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Solver::flattenFSRSources</definition>
        <argsstring>(FP_PRECISION value)=0</argsstring>
        <name>flattenFSRSources</name>
        <reimplementedby refid="classCPUSolver_1a50b87bcfca1e6e3399ad75a8c9fd6337">flattenFSRSources</reimplementedby>
        <param>
          <type>FP_PRECISION</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the source for each energy group in each flat source region to a constant value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to assign to each flat source region source </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="266"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1aeb89db6a6b624b222494625613b2ed57" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Solver::normalizeFluxes</definition>
        <argsstring>()=0</argsstring>
        <name>normalizeFluxes</name>
        <reimplementedby refid="classVectorizedSolver_1a6c428f0706f8c8960a88404606665704">normalizeFluxes</reimplementedby>
        <reimplementedby refid="classCPUSolver_1aadf42a3cc81fc4641d259aee546e48c3">normalizeFluxes</reimplementedby>
        <briefdescription>
<para>Normalizes all flat source region scalar fluxes and track boundary angular fluxes to the total fission source (times <formula id="0">$ \nu $</formula>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="272"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1af3265d25938ee473633e193bc59202c8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>FP_PRECISION</type>
        <definition>virtual FP_PRECISION Solver::computeFSRSources</definition>
        <argsstring>()=0</argsstring>
        <name>computeFSRSources</name>
        <reimplementedby refid="classVectorizedSolver_1a14a159d804a2b94f1442e6cb6046e4f0">computeFSRSources</reimplementedby>
        <reimplementedby refid="classCPUSolver_1add777a473fdeaf1bf2928c5d05168c85">computeFSRSources</reimplementedby>
        <briefdescription>
<para>Computes the total source (fission and scattering) in each flat source region. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the residual between this source and the previous source </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="280"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1a7d0c4632edff104979002eb21d38d794" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Solver::computeKeff</definition>
        <argsstring>()=0</argsstring>
        <name>computeKeff</name>
        <reimplementedby refid="classVectorizedSolver_1a7ab9f0df852a0afd04876f6e0ec53046">computeKeff</reimplementedby>
        <reimplementedby refid="classCPUSolver_1a230b68be081a8bd573bfdf3fabc75799">computeKeff</reimplementedby>
        <briefdescription>
<para>Compute <formula id="18">$ k_{eff} $</formula> from total fission and absorption rates. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="285"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1a431c793e0164e134d35fecf9e1e56434" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Solver::addSourceToScalarFlux</definition>
        <argsstring>()=0</argsstring>
        <name>addSourceToScalarFlux</name>
        <reimplementedby refid="classVectorizedSolver_1ac079f92b22b16a7584662fe36817495b">addSourceToScalarFlux</reimplementedby>
        <reimplementedby refid="classCPUSolver_1a92a92ed2553ba853b9a8f63114d1a844">addSourceToScalarFlux</reimplementedby>
        <briefdescription>
<para>Add the source term contribution in the transport equation to the flat source region scalar flux. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="291"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1ab029744c3532b239fab583c4f8d8ea98" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Solver::transportSweep</definition>
        <argsstring>()=0</argsstring>
        <name>transportSweep</name>
        <reimplementedby refid="classThreadPrivateSolver_1ad784c540c10f88aafe54965631c139e0">transportSweep</reimplementedby>
        <reimplementedby refid="classCPUSolver_1a9aac0098d2d8969d87212aad0cb9c54e">transportSweep</reimplementedby>
        <briefdescription>
<para>This method performs one transport sweep of all azimuthal angles, tracks, segments, polar angles and energy groups. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="297"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1a4f6e2e3069aa9404fefd62be376e8390" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Solver::clearTimerSplits</definition>
        <argsstring>()</argsstring>
        <name>clearTimerSplits</name>
        <briefdescription>
<para>Deletes the <ref refid="classTimer" kindref="compound">Timer</ref>&apos;s timing entries for each timed code section code in the source convergence loop. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="299" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.cpp" bodystart="447" bodyend="449"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classSolver_1a950a0ef510e9eb4a92984473c668c198" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Solver::Solver</definition>
        <argsstring>(Geometry *geom=NULL, TrackGenerator *track_generator=NULL)</argsstring>
        <name>Solver</name>
        <param>
          <type><ref refid="classGeometry" kindref="compound">Geometry</ref> *</type>
          <declname>geom</declname>
          <defname>geometry</defname>
          <defval>NULL</defval>
        </param>
        <param>
          <type><ref refid="classTrackGenerator" kindref="compound">TrackGenerator</ref> *</type>
          <declname>track_generator</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Constructor initializes array pointers for tracks and materials. </para>        </briefdescription>
        <detaileddescription>
<para>The construcor retrieves the number of energy groups and flat source regions and azimuthal angles from the geometry and track generator. The constructor initalizes the number of threads to a default of 1. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional pointer to the geometry </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>track_generator</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional pointer to the trackgenerator </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="302" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.cpp" bodystart="13" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1aba52d3c92fafceb6fe39f937f2d73db3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Solver::~Solver</definition>
        <argsstring>()</argsstring>
        <name>~Solver</name>
        <briefdescription>
<para>Destructor deletes arrays of boundary angular fluxes, scalar fluxes and sources for each flat source region. </para>        </briefdescription>
        <detaileddescription>
<para>Deallocates memory for all arrays allocated for the <ref refid="classSolver" kindref="compound">Solver</ref>, including fluxes, sources, quadrature weights, and exponential prefactor interpolation table. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="303" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.cpp" bodystart="75" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1afd394d9603d0ceba175d96a53f54d7fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGeometry" kindref="compound">Geometry</ref> *</type>
        <definition>Geometry * Solver::getGeometry</definition>
        <argsstring>()</argsstring>
        <name>getGeometry</name>
        <briefdescription>
<para>Returns a pointer to the geometry. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a pointer to the geometry </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="305" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.cpp" bodystart="128" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1ac47a004e88d7fde15880ab8c2b08e754" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTrackGenerator" kindref="compound">TrackGenerator</ref> *</type>
        <definition>TrackGenerator * Solver::getTrackGenerator</definition>
        <argsstring>()</argsstring>
        <name>getTrackGenerator</name>
        <briefdescription>
<para>Returns a pointer to the track generator. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a pointer to the geometry </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="306" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.cpp" bodystart="142" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1ae3012e43ec82aea38b7ff0c26a6e5003" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Solver::getNumPolarAngles</definition>
        <argsstring>()</argsstring>
        <name>getNumPolarAngles</name>
        <briefdescription>
<para>Returns the number of angles used for the polar quadrature. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of polar angles </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="307" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.cpp" bodystart="156" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1a8810de68de50b5f4881e89e68733960a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="Quadrature_8h_1abaf5f877e7f8a13548058dcb876c4de1" kindref="member">quadratureType</ref></type>
        <definition>quadratureType Solver::getPolarQuadratureType</definition>
        <argsstring>()</argsstring>
        <name>getPolarQuadratureType</name>
        <briefdescription>
<para>Returns the type of polar quadrature in use (TABUCHI or LEONARD). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the type of polar quadrature </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="308" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.cpp" bodystart="165" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1a4e2f2f30ca4bae8871b30bb188a29b38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Solver::getNumIterations</definition>
        <argsstring>()</argsstring>
        <name>getNumIterations</name>
        <briefdescription>
<para>Returns the number of transport sweeps to converge the source. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of iterations </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="309" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.cpp" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1af3ec5e2776910329b6502e9fc06d533b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FP_PRECISION</type>
        <definition>FP_PRECISION Solver::getSourceConvergenceThreshold</definition>
        <argsstring>()</argsstring>
        <name>getSourceConvergenceThreshold</name>
        <briefdescription>
<para>Returns the threshold for source convergence. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the threshold for source convergence </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="310" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.cpp" bodystart="183" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1a14aa82ed26bb664d3dc89a19b9f13c63" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>FP_PRECISION</type>
        <definition>virtual FP_PRECISION Solver::getFSRScalarFlux</definition>
        <argsstring>(int fsr_id, int energy_group)=0</argsstring>
        <name>getFSRScalarFlux</name>
        <reimplementedby refid="classCPUSolver_1ac0c9152a81ce1bd13f42aeb20ee9402c">getFSRScalarFlux</reimplementedby>
        <reimplementedby refid="classGPUSolver_1a7bdb08af13273639f652d0acc22eae28">getFSRScalarFlux</reimplementedby>
        <param>
          <type>int</type>
          <declname>fsr_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>energy_group</declname>
        </param>
        <briefdescription>
<para>Returns the scalar flux for a flat source region. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fsr_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID for the FSR of interest </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>energy_group</parametername>
</parameternamelist>
<parameterdescription>
<para>the energy group of interest </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the flat source region scalar flux </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="318"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1ac1981f25afb9ada5cc1e6c40067bc479" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>FP_PRECISION *</type>
        <definition>virtual FP_PRECISION* Solver::getFSRScalarFluxes</definition>
        <argsstring>()=0</argsstring>
        <name>getFSRScalarFluxes</name>
        <reimplementedby refid="classCPUSolver_1a281e593c8d4e75fd44a6acb8e7bf91ee">getFSRScalarFluxes</reimplementedby>
        <reimplementedby refid="classGPUSolver_1a181b0d902129e5bb8e70375e061c3c6f">getFSRScalarFluxes</reimplementedby>
        <briefdescription>
<para>Returns an array of the scalar flux in each flat source region in each energy group. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>an array of flat source region scalar fluxes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="325"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1a971144e2d1207ca63abdd2b16db3afa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>FP_PRECISION *</type>
        <definition>virtual FP_PRECISION* Solver::getFSRPowers</definition>
        <argsstring>()=0</argsstring>
        <name>getFSRPowers</name>
        <reimplementedby refid="classCPUSolver_1a90dc1357f3ec10f9a85ae31cefd0bd49">getFSRPowers</reimplementedby>
        <reimplementedby refid="classGPUSolver_1a063ab8d6110e315b214ec4d7ddc6225f">getFSRPowers</reimplementedby>
        <briefdescription>
<para>Returns an array indexed by flat source region IDs with the corresponding flat source region power. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>an array of flat source region powers </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="332"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1ab343527c6bdb72f13080c0df79e6bbea" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>FP_PRECISION *</type>
        <definition>virtual FP_PRECISION* Solver::getFSRPinPowers</definition>
        <argsstring>()=0</argsstring>
        <name>getFSRPinPowers</name>
        <reimplementedby refid="classCPUSolver_1a57ef6e1450abb4e7ba67f582228d6241">getFSRPinPowers</reimplementedby>
        <reimplementedby refid="classGPUSolver_1a112682552df45606ffc40f1afe35417d">getFSRPinPowers</reimplementedby>
        <briefdescription>
<para>Return an array indexed by flat source region IDs with the corresponding pin cell power. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>an array of flat source region pin powers </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="339"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1a117012c7ecaf59b70fa6b489562acc65" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Solver::setGeometry</definition>
        <argsstring>(Geometry *geometry)</argsstring>
        <name>setGeometry</name>
        <reimplementedby refid="classVectorizedSolver_1ab4a29f8b4f8cbb4dff38ce2b85a56642">setGeometry</reimplementedby>
        <reimplementedby refid="classGPUSolver_1a6e6d50acc405f83a15bd24e2bc908e1d">setGeometry</reimplementedby>
        <param>
          <type><ref refid="classGeometry" kindref="compound">Geometry</ref> *</type>
          <declname>geometry</declname>
        </param>
        <briefdescription>
<para>Sets the geometry for the solver. </para>        </briefdescription>
        <detaileddescription>
<para>The geometry must already have initialized flat source region maps and segmentized the track generator&apos;s tracks. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to a geometry </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="341" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.cpp" bodystart="194" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1ac07cee2fe04515dc8e4d2980d567c4c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Solver::setTrackGenerator</definition>
        <argsstring>(TrackGenerator *track_generator)</argsstring>
        <name>setTrackGenerator</name>
        <reimplementedby refid="classGPUSolver_1ab0298357c57685b183c772b6abaa88e8">setTrackGenerator</reimplementedby>
        <param>
          <type><ref refid="classTrackGenerator" kindref="compound">TrackGenerator</ref> *</type>
          <declname>track_generator</declname>
        </param>
        <briefdescription>
<para>Sets the track generator with characteristic tracks for the solver. </para>        </briefdescription>
        <detaileddescription>
<para>The track generator must already have generated tracks and have segmentized them across the geometry. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>track_generator</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to a trackgenerator </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="342" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.cpp" bodystart="219" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1aa602cd57f7b72f13050920f2c752815e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Solver::setPolarQuadratureType</definition>
        <argsstring>(quadratureType quadrature_type)</argsstring>
        <name>setPolarQuadratureType</name>
        <param>
          <type><ref refid="Quadrature_8h_1abaf5f877e7f8a13548058dcb876c4de1" kindref="member">quadratureType</ref></type>
          <declname>quadrature_type</declname>
        </param>
        <briefdescription>
<para>Sets the type of polar angle quadrature set to use (ie, TABUCHI or LEONARD). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>quadrature_type</parametername>
</parameternamelist>
<parameterdescription>
<para>the polar angle quadrature type </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="343" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.cpp" bodystart="249" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1a069e8bf490a2f5de391f57cd9e7224ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Solver::setNumPolarAngles</definition>
        <argsstring>(int num_polar)</argsstring>
        <name>setNumPolarAngles</name>
        <param>
          <type>int</type>
          <declname>num_polar</declname>
        </param>
        <briefdescription>
<para>Sets the number of polar angles to use (only 1, 2, or 3 currently supported). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num_polar</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of polar angles </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="344" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.cpp" bodystart="259" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1aaace17535420183bd7c699b0a10c1e01" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Solver::setSourceConvergenceThreshold</definition>
        <argsstring>(FP_PRECISION source_thresh)</argsstring>
        <name>setSourceConvergenceThreshold</name>
        <param>
          <type>FP_PRECISION</type>
          <declname>source_thresh</declname>
        </param>
        <briefdescription>
<para>Sets the threshold for source convergence (&gt;0) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source_thresh</parametername>
</parameternamelist>
<parameterdescription>
<para>the threshold for source convergence </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="345" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.cpp" bodystart="280" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1a627f677bdb8a621a632b581bc976b2a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Solver::useExponentialInterpolation</definition>
        <argsstring>()</argsstring>
        <name>useExponentialInterpolation</name>
        <briefdescription>
<para>Sets the solver to use linear interpolation to compute the exponential in the transport equation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="347" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.cpp" bodystart="295" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1a5400c11874dac7f00ade6e7c2d573aee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Solver::useExponentialIntrinsic</definition>
        <argsstring>()</argsstring>
        <name>useExponentialIntrinsic</name>
        <briefdescription>
<para>Sets the solver to use the exponential intrinsic function to compute the exponential in the transport equation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="348" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.cpp" bodystart="304" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1af8358a66a7cbd56339211f80a2365678" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>FP_PRECISION</type>
        <definition>FP_PRECISION Solver::convergeSource</definition>
        <argsstring>(int max_iterations)</argsstring>
        <name>convergeSource</name>
        <param>
          <type>int</type>
          <declname>max_iterations</declname>
        </param>
        <briefdescription>
<para>Computes keff by performing a series of transport sweep and source updates. </para>        </briefdescription>
        <detaileddescription>
<para>This is the main method exposed to the user through the Python interface to run a simulation. The method makes an initial guess for the scalar and boundary fluxes and peforms transport sweeps and source updates until convergence. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>max_iterations</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum number of iterations allowed </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of keff computed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="350" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.cpp" bodystart="367" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1a1a76bce692d3f35e880832234ae3c4b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Solver::computePinPowers</definition>
        <argsstring>()=0</argsstring>
        <name>computePinPowers</name>
        <reimplementedby refid="classCPUSolver_1a4a85c27ea780c422e81f1d2f59789744">computePinPowers</reimplementedby>
        <reimplementedby refid="classGPUSolver_1a15e83034faeaa5f781c79eeb99388619">computePinPowers</reimplementedby>
        <briefdescription>
<para>Compute the fission rates in each flat source region and stores them in an array indexed by flat source region ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="357"/>
      </memberdef>
      <memberdef kind="function" id="classSolver_1aeec2b08ba9d6be88cf08f1fc02658500" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Solver::printTimerReport</definition>
        <argsstring>()</argsstring>
        <name>printTimerReport</name>
        <briefdescription>
<para>Prints a report of the timing statistics to the console. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="359" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.cpp" bodystart="455" bodyend="516"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This is an abstract base class from which different types of Solvers subclass for different architectures or using different algorithms. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="76">
        <label>GPUSolver</label>
        <link refid="classGPUSolver"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="72">
        <label>CPUSolver</label>
        <link refid="classCPUSolver"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="71">
        <label>Solver</label>
        <link refid="classSolver"/>
      </node>
      <node id="75">
        <label>VectorizedPrivateSolver</label>
        <link refid="classVectorizedPrivateSolver"/>
        <childnode refid="74" relation="public-inheritance">
        </childnode>
      </node>
      <node id="73">
        <label>ThreadPrivateSolver</label>
        <link refid="classThreadPrivateSolver"/>
        <childnode refid="72" relation="public-inheritance">
        </childnode>
      </node>
      <node id="74">
        <label>VectorizedSolver</label>
        <link refid="classVectorizedSolver"/>
        <childnode refid="72" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="77">
        <label>Solver</label>
        <link refid="classSolver"/>
        <childnode refid="78" relation="usage">
          <edgelabel>_geometry</edgelabel>
        </childnode>
        <childnode refid="79" relation="usage">
          <edgelabel>_FSR_materials</edgelabel>
        </childnode>
        <childnode refid="80" relation="usage">
          <edgelabel>_tracks</edgelabel>
        </childnode>
        <childnode refid="81" relation="usage">
          <edgelabel>_quad</edgelabel>
        </childnode>
        <childnode refid="82" relation="usage">
          <edgelabel>_track_generator</edgelabel>
        </childnode>
        <childnode refid="83" relation="usage">
          <edgelabel>_timer</edgelabel>
        </childnode>
      </node>
      <node id="79">
        <label>Material</label>
        <link refid="classMaterial"/>
      </node>
      <node id="82">
        <label>TrackGenerator</label>
        <link refid="classTrackGenerator"/>
      </node>
      <node id="83">
        <label>Timer</label>
        <link refid="classTimer"/>
      </node>
      <node id="81">
        <label>Quadrature</label>
        <link refid="classQuadrature"/>
      </node>
      <node id="78">
        <label>Geometry</label>
        <link refid="classGeometry"/>
      </node>
      <node id="80">
        <label>Track</label>
        <link refid="classTrack"/>
      </node>
    </collaborationgraph>
    <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" line="74" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Solver.h" bodystart="74" bodyend="360"/>
    <listofallmembers>
      <member refid="classSolver_1a02f013a25d984fa74aabc4c34f829960" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_azim_weights</name></member>
      <member refid="classSolver_1adcfcfe1758affc74780907584fc7beaf" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_boundary_flux</name></member>
      <member refid="classSolver_1ace3972879027f76a99f24fd01618d123" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_boundary_leakage</name></member>
      <member refid="classSolver_1a1ce60126ba4fa0b05b08943ddd7cf295" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_converged_source</name></member>
      <member refid="classSolver_1a63b1f8d78d02dc5a0f2dc392597cc5af" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_fission_sources</name></member>
      <member refid="classSolver_1a9c124fee8429fc5e44649fbb22f930b4" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_FSR_materials</name></member>
      <member refid="classSolver_1a84372339d7c2b5da3f07bc8b0822f42f" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_FSR_volumes</name></member>
      <member refid="classSolver_1a2ae997684ddbc16e2c8575cb6dcad788" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_FSRs_to_pin_powers</name></member>
      <member refid="classSolver_1ac6de9ad9091dae955848d83a91b0f3b5" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_FSRs_to_powers</name></member>
      <member refid="classSolver_1ae323198b6be6ddc402c53784c5a89b7f" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_geometry</name></member>
      <member refid="classSolver_1a1263a3948d7fe87874854460a3701d82" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_interpolate_exponential</name></member>
      <member refid="classSolver_1a4ed58ea28163beec97a5efe1c1874c02" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_inverse_prefactor_spacing</name></member>
      <member refid="classSolver_1a3c52f5e2ecbe44ebca20e6696a09e447" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_k_eff</name></member>
      <member refid="classSolver_1ab1d00b7a1ac0cddd6e0d88cc309a97aa" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_leakage</name></member>
      <member refid="classSolver_1a9f0fd3a842870803f27c47ed51a83039" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_num_azim</name></member>
      <member refid="classSolver_1a2e17e8aa8a11d4300e89179984ca4347" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_num_FSRs</name></member>
      <member refid="classSolver_1ab18db0ed64afb0dade6054a7a08ae3c4" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_num_groups</name></member>
      <member refid="classSolver_1a06f3fd380731eb988cb2fc5232cb94b3" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_num_iterations</name></member>
      <member refid="classSolver_1a5b17e508bd721f49a382673efcd8ae1b" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_num_materials</name></member>
      <member refid="classSolver_1a49cc179a9f47c5ca5f6d19c954d680ad" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_num_polar</name></member>
      <member refid="classSolver_1a564e918dc20cdc12f40e15a86fffefc2" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_num_tracks</name></member>
      <member refid="classSolver_1ad7d3233142b6798f9aea7330b221754c" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_old_source</name></member>
      <member refid="classSolver_1a84ce3dbf9e3c4a86773161e7c92b1da1" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_polar_times_groups</name></member>
      <member refid="classSolver_1a8407ebcfee31a54a67e6d5ca2e3d4e6b" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_polar_weights</name></member>
      <member refid="classSolver_1a64ce3d9a61c55fa470b91b68497dd9d6" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_prefactor_array</name></member>
      <member refid="classSolver_1a43ee296db0a4d4cc695be82fea2e2ee5" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_prefactor_array_size</name></member>
      <member refid="classSolver_1a1a18b47465922034d8669238fedbe176" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_prefactor_max_index</name></member>
      <member refid="classSolver_1a354a2964b53e89ffb03d256eaccdeb47" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_prefactor_spacing</name></member>
      <member refid="classSolver_1a4cf19c17278e367f44c6e735e437103d" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_quad</name></member>
      <member refid="classSolver_1a3c8910d870254066e9ba89c75c3a1003" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_quadrature_type</name></member>
      <member refid="classSolver_1aff69bb3f354f5c598e1117e2a3515f1b" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_reduced_source</name></member>
      <member refid="classSolver_1a60df3fd1a13667c294b1519d59a00b87" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_scalar_flux</name></member>
      <member refid="classSolver_1a524973fbca3ad3ace58b122c01b404f0" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_scatter_sources</name></member>
      <member refid="classSolver_1a935ab1926ea3d625d0c549c5f8595c07" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_source</name></member>
      <member refid="classSolver_1a4aa4d18f980bbb098f839835e5e2f35d" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_source_convergence_thresh</name></member>
      <member refid="classSolver_1af2285a2a6361ea1d351e3b8c55858c92" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_source_residuals</name></member>
      <member refid="classSolver_1a3cab54ec3cb374d796180b94201276ec" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_timer</name></member>
      <member refid="classSolver_1a817518832fb051823de9e8855319f02e" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_tot_num_tracks</name></member>
      <member refid="classSolver_1a7f7349dc153dd9e728697c922cf7c052" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_track_generator</name></member>
      <member refid="classSolver_1a775ed41fc1268312c8fb25ec994e1351" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_tracks</name></member>
      <member refid="classSolver_1a5f9e45e5d2a93bc3b18ca2659b95ac6a" prot="protected" virt="non-virtual"><scope>Solver</scope><name>_two_times_num_polar</name></member>
      <member refid="classSolver_1a431c793e0164e134d35fecf9e1e56434" prot="protected" virt="pure-virtual"><scope>Solver</scope><name>addSourceToScalarFlux</name></member>
      <member refid="classSolver_1a4ab290c6ca1d74230bf885cfc7f58b7a" prot="protected" virt="virtual"><scope>Solver</scope><name>checkTrackSpacing</name></member>
      <member refid="classSolver_1a4f6e2e3069aa9404fefd62be376e8390" prot="protected" virt="non-virtual"><scope>Solver</scope><name>clearTimerSplits</name></member>
      <member refid="classSolver_1af3265d25938ee473633e193bc59202c8" prot="protected" virt="pure-virtual"><scope>Solver</scope><name>computeFSRSources</name></member>
      <member refid="classSolver_1a7d0c4632edff104979002eb21d38d794" prot="protected" virt="pure-virtual"><scope>Solver</scope><name>computeKeff</name></member>
      <member refid="classSolver_1a1a76bce692d3f35e880832234ae3c4b5" prot="public" virt="pure-virtual"><scope>Solver</scope><name>computePinPowers</name></member>
      <member refid="classSolver_1af8358a66a7cbd56339211f80a2365678" prot="public" virt="virtual"><scope>Solver</scope><name>convergeSource</name></member>
      <member refid="classSolver_1a148137c97310ee2df94a4fd3fe35456f" prot="protected" virt="pure-virtual"><scope>Solver</scope><name>flattenFSRFluxes</name></member>
      <member refid="classSolver_1a906c202ff2b3e38443f333964efa2342" prot="protected" virt="pure-virtual"><scope>Solver</scope><name>flattenFSRSources</name></member>
      <member refid="classSolver_1ab343527c6bdb72f13080c0df79e6bbea" prot="public" virt="pure-virtual"><scope>Solver</scope><name>getFSRPinPowers</name></member>
      <member refid="classSolver_1a971144e2d1207ca63abdd2b16db3afa0" prot="public" virt="pure-virtual"><scope>Solver</scope><name>getFSRPowers</name></member>
      <member refid="classSolver_1a14aa82ed26bb664d3dc89a19b9f13c63" prot="public" virt="pure-virtual"><scope>Solver</scope><name>getFSRScalarFlux</name></member>
      <member refid="classSolver_1ac1981f25afb9ada5cc1e6c40067bc479" prot="public" virt="pure-virtual"><scope>Solver</scope><name>getFSRScalarFluxes</name></member>
      <member refid="classSolver_1afd394d9603d0ceba175d96a53f54d7fa" prot="public" virt="non-virtual"><scope>Solver</scope><name>getGeometry</name></member>
      <member refid="classSolver_1a4e2f2f30ca4bae8871b30bb188a29b38" prot="public" virt="non-virtual"><scope>Solver</scope><name>getNumIterations</name></member>
      <member refid="classSolver_1ae3012e43ec82aea38b7ff0c26a6e5003" prot="public" virt="non-virtual"><scope>Solver</scope><name>getNumPolarAngles</name></member>
      <member refid="classSolver_1a8810de68de50b5f4881e89e68733960a" prot="public" virt="non-virtual"><scope>Solver</scope><name>getPolarQuadratureType</name></member>
      <member refid="classSolver_1af3ec5e2776910329b6502e9fc06d533b" prot="public" virt="non-virtual"><scope>Solver</scope><name>getSourceConvergenceThreshold</name></member>
      <member refid="classSolver_1ac47a004e88d7fde15880ab8c2b08e754" prot="public" virt="non-virtual"><scope>Solver</scope><name>getTrackGenerator</name></member>
      <member refid="classSolver_1a916eb7ef96140e1ea2d22bb9d1c86240" prot="protected" virt="pure-virtual"><scope>Solver</scope><name>initializeFluxArrays</name></member>
      <member refid="classSolver_1a512ac25e056b3e2d77ae9159e793babf" prot="protected" virt="pure-virtual"><scope>Solver</scope><name>initializeFSRs</name></member>
      <member refid="classSolver_1a6591b996eb837e0c4184424e48e191a3" prot="protected" virt="pure-virtual"><scope>Solver</scope><name>initializePolarQuadrature</name></member>
      <member refid="classSolver_1a4d5a5373ca8cb3e04e745eace85115b0" prot="protected" virt="pure-virtual"><scope>Solver</scope><name>initializePowerArrays</name></member>
      <member refid="classSolver_1a8592d819738b24a5b983e54c0a635d30" prot="protected" virt="pure-virtual"><scope>Solver</scope><name>initializeSourceArrays</name></member>
      <member refid="classSolver_1aeb89db6a6b624b222494625613b2ed57" prot="protected" virt="pure-virtual"><scope>Solver</scope><name>normalizeFluxes</name></member>
      <member refid="classSolver_1a5a9d6fc967c1f8ba7eb6b34094f8fd25" prot="protected" virt="pure-virtual"><scope>Solver</scope><name>precomputePrefactors</name></member>
      <member refid="classSolver_1aeec2b08ba9d6be88cf08f1fc02658500" prot="public" virt="non-virtual"><scope>Solver</scope><name>printTimerReport</name></member>
      <member refid="classSolver_1a117012c7ecaf59b70fa6b489562acc65" prot="public" virt="virtual"><scope>Solver</scope><name>setGeometry</name></member>
      <member refid="classSolver_1a069e8bf490a2f5de391f57cd9e7224ed" prot="public" virt="virtual"><scope>Solver</scope><name>setNumPolarAngles</name></member>
      <member refid="classSolver_1aa602cd57f7b72f13050920f2c752815e" prot="public" virt="virtual"><scope>Solver</scope><name>setPolarQuadratureType</name></member>
      <member refid="classSolver_1aaace17535420183bd7c699b0a10c1e01" prot="public" virt="virtual"><scope>Solver</scope><name>setSourceConvergenceThreshold</name></member>
      <member refid="classSolver_1ac07cee2fe04515dc8e4d2980d567c4c5" prot="public" virt="virtual"><scope>Solver</scope><name>setTrackGenerator</name></member>
      <member refid="classSolver_1a950a0ef510e9eb4a92984473c668c198" prot="public" virt="non-virtual"><scope>Solver</scope><name>Solver</name></member>
      <member refid="classSolver_1ab029744c3532b239fab583c4f8d8ea98" prot="protected" virt="pure-virtual"><scope>Solver</scope><name>transportSweep</name></member>
      <member refid="classSolver_1a627f677bdb8a621a632b581bc976b2a5" prot="public" virt="non-virtual"><scope>Solver</scope><name>useExponentialInterpolation</name></member>
      <member refid="classSolver_1a5400c11874dac7f00ade6e7c2d573aee" prot="public" virt="non-virtual"><scope>Solver</scope><name>useExponentialIntrinsic</name></member>
      <member refid="classSolver_1ac9960f6987c85a3d8e670beb10a9fbb2" prot="protected" virt="pure-virtual"><scope>Solver</scope><name>zeroTrackFluxes</name></member>
      <member refid="classSolver_1aba52d3c92fafceb6fe39f937f2d73db3" prot="public" virt="virtual"><scope>Solver</scope><name>~Solver</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
