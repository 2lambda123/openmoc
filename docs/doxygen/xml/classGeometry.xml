<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="classGeometry" kind="class" prot="public">
    <compoundname>Geometry</compoundname>
    <includes refid="Geometry_8h" local="yes">openmoc/src/host/Geometry.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGeometry_1a56d486956a2d41eed1c9262a0a3e8f5d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Geometry::_x_min</definition>
        <argsstring></argsstring>
        <name>_x_min</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The minimum point along the x-axis contained by geometry in cm </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="35" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGeometry_1a0278f2d9508f7cdbfdfa49452d683557" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Geometry::_y_min</definition>
        <argsstring></argsstring>
        <name>_y_min</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The maximum point along the x-axis contained by geometry in cm </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="38" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGeometry_1abcd569182ba0a1505ad5016b6f3e5b97" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Geometry::_x_max</definition>
        <argsstring></argsstring>
        <name>_x_max</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The minimum point along the y-axis contained by geometry in cm </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="41" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGeometry_1a3c669430d5101f9120c0c72ae6be3ce3" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Geometry::_y_max</definition>
        <argsstring></argsstring>
        <name>_y_max</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The maximum point along the y-axis contained by geometry in cm </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="44" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGeometry_1a1b91883cfcb7d443784b5b667c59c6cd" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Geometry::_top_bc</definition>
        <argsstring></argsstring>
        <name>_top_bc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The boundary conditions at the top of the bounding box containing the geometry. False is for vacuum and true is for reflective boundary conditions </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="49" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGeometry_1a43d039b2ee1285ff5f341cab7e9ec87e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Geometry::_bottom_bc</definition>
        <argsstring></argsstring>
        <name>_bottom_bc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The boundary conditions at the top of the bounding box containing the geometry. False is for vacuum and true is for reflective boundary conditions </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="54" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGeometry_1aaea45ef5a9192e5bc1330063736343e2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Geometry::_left_bc</definition>
        <argsstring></argsstring>
        <name>_left_bc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The boundary conditions at the top of the bounding box containing the geometry. False is for vacuum and true is for reflective boundary conditions </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="59" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGeometry_1adeb3ad4a679e720008f5616c806d5d9d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Geometry::_right_bc</definition>
        <argsstring></argsstring>
        <name>_right_bc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The boundary conditions at the top of the bounding box containing the geometry. False is for vacuum and true is for reflective boundary conditions </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="64" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGeometry_1aa7109d746ef10e6f7204b877d3a93c47" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Geometry::_num_FSRs</definition>
        <argsstring></argsstring>
        <name>_num_FSRs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The total number of flat source regions in the geometry </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="67" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGeometry_1af5f3cbbb610e83e7e1c97a6715adfec4" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Geometry::_num_groups</definition>
        <argsstring></argsstring>
        <name>_num_groups</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of energy groups for each material&apos;s nuclear data </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="70" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGeometry_1a9947dda8b9bc9b4462aa289b6dfca8bb" prot="private" static="no" mutable="no">
        <type>int *</type>
        <definition>int* Geometry::_FSRs_to_cells</definition>
        <argsstring></argsstring>
        <name>_FSRs_to_cells</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An array of cell IDs indexed by flat source region IDs </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="73" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGeometry_1a004a40474368eeb71a8fceacb7f6f85a" prot="private" static="no" mutable="no">
        <type>int *</type>
        <definition>int* Geometry::_FSRs_to_materials</definition>
        <argsstring></argsstring>
        <name>_FSRs_to_materials</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An array of material IDs indexed by flat source region IDs </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="76" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGeometry_1ac3117dd9330d8ed16b2cba9f940b8b8a" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Geometry::_max_seg_length</definition>
        <argsstring></argsstring>
        <name>_max_seg_length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The maximum track segment length in the geometry </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="79" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGeometry_1a0075904cf6a64e29f10ac38bf680c826" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Geometry::_min_seg_length</definition>
        <argsstring></argsstring>
        <name>_min_seg_length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The minimum track segment length in the geometry </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="82" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGeometry_1afa32e36958a3f4e4329f05d9fdd77537" prot="private" static="no" mutable="no">
        <type>std::map&lt; short int, <ref refid="classMaterial" kindref="compound">Material</ref> * &gt;</type>
        <definition>std::map&lt;short int, Material*&gt; Geometry::_materials</definition>
        <argsstring></argsstring>
        <name>_materials</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A map of material IDs (keys) to material pointers (values) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="85" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGeometry_1a1f4595ef5eacbf5c9d973d08fbdffcdb" prot="private" static="no" mutable="no">
        <type>std::map&lt; short int, <ref refid="classSurface" kindref="compound">Surface</ref> * &gt;</type>
        <definition>std::map&lt;short int, Surface*&gt; Geometry::_surfaces</definition>
        <argsstring></argsstring>
        <name>_surfaces</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A map of surface IDs (keys) to surface pointers (values) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="88" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGeometry_1a46d999c0b34d774f77edc3deb6243860" prot="private" static="no" mutable="no">
        <type>std::map&lt; short int, <ref refid="classCell" kindref="compound">Cell</ref> * &gt;</type>
        <definition>std::map&lt;short int, Cell*&gt; Geometry::_cells</definition>
        <argsstring></argsstring>
        <name>_cells</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A map of cell IDs (keys) to cell pointers (values) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="91" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGeometry_1a71a9a7521fabe577fc8b7feb306414a1" prot="private" static="no" mutable="no">
        <type>std::map&lt; short int, <ref refid="classUniverse" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::map&lt;short int, Universe*&gt; Geometry::_universes</definition>
        <argsstring></argsstring>
        <name>_universes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A map of universe IDs (keys) to universe pointers (values) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="94" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGeometry_1ae4710d98f11e353fcb9423b6d7eb0b9e" prot="private" static="no" mutable="no">
        <type>std::map&lt; short int, <ref refid="classLattice" kindref="compound">Lattice</ref> * &gt;</type>
        <definition>std::map&lt;short int, Lattice*&gt; Geometry::_lattices</definition>
        <argsstring></argsstring>
        <name>_lattices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A map of lattice IDs (keys) to lattice pointers (values) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="97" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classGeometry_1a36faedb17e3504be7505e76beb768361" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Geometry::initializeCellFillPointers</definition>
        <argsstring>()</argsstring>
        <name>initializeCellFillPointers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method links together the pointers to the universes filling <ref refid="classCellFill" kindref="compound">CellFill</ref> class objects </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="99" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="533" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1a1ab32296f59249cdb603cab9b460746d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCell" kindref="compound">Cell</ref> *</type>
        <definition>Cell * Geometry::findFirstCell</definition>
        <argsstring>(LocalCoords *coords, double angle)</argsstring>
        <name>findFirstCell</name>
        <param>
          <type><ref refid="classLocalCoords" kindref="compound">LocalCoords</ref> *</type>
          <declname>coords</declname>
        </param>
        <param>
          <type>double</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>Find the first cell of a segment with a starting point that is represented by this localcoords object is in. </para>        </briefdescription>
        <detaileddescription>
<para>This method assumes that the localcoords has coordinates and a universe id. This method will move the initial starting point by a small amount along the direction of the track in order to ensure that the track starts inside of a distinct FSR rather than on the boundary between two of them. The method will recursively find the localcoords by building a linked list of localcoords from the localcoords passed in as an argument down to the lowest level cell found. In the process it will set the local coordinates for each localcoord in the linked list for the lattice or universe that it is in. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coords</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a localcoords object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>the angle for a trajectory projected from the localcoords </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>returns a pointer to a cell if found, NULL if no cell found </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="101" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="689" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1a9166344a3c051c5b2532fceb18bb5aa3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCell" kindref="compound">Cell</ref> *</type>
        <definition>Cell * Geometry::findNextCell</definition>
        <argsstring>(LocalCoords *coords, double angle)</argsstring>
        <name>findNextCell</name>
        <param>
          <type><ref refid="classLocalCoords" kindref="compound">LocalCoords</ref> *</type>
          <declname>coords</declname>
        </param>
        <param>
          <type>double</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>Finds the next cell for a localcoords object along a trajectory defined by some angle (in radians from 0 to pi). </para>        </briefdescription>
        <detaileddescription>
<para>The method will update the localcoords passed in as an argument to be the one at the boundary of the next cell crossed along the given trajectory. It will do this by recursively building a linked list of localcoords from the localcoords passed in as an argument down to the lowest level cell found. In the process it will set the local coordinates for each localcoords in the linked list for the lattice or universe that it is in. If the localcoords is outside the bounds of the geometry or on the boundaries this method * will return NULL; otherwise it will return a pointer to the cell that the localcoords will reach next along its trajectory. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coords</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a localcoords object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>the angle of the trajectory </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to a cell if found, NULL if no cell found </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="102" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="833" bodyend="999"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGeometry_1a4c301c163c63d21ed08c17b0f4e131d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Geometry::Geometry</definition>
        <argsstring>()</argsstring>
        <name>Geometry</name>
        <briefdescription>
<para>Constructor initializes an empty geometry. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="106" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="7" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1ad55e832122ab3a2833dcaa6507867678" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Geometry::~Geometry</definition>
        <argsstring>()</argsstring>
        <name>~Geometry</name>
        <briefdescription>
<para>Destructor clears all references to materials, surfaces, cells, universes and lattices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="107" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="33" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1a8a7afceb0905b411d296c57fb0f8f3ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Geometry::getWidth</definition>
        <argsstring>()</argsstring>
        <name>getWidth</name>
        <briefdescription>
<para>Returns the total width (x extent) of the geometry in cm. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the total width of the geometry (cm) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="109" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1a8895b7f5b91d85926f316ac09ade9e5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Geometry::getHeight</definition>
        <argsstring>()</argsstring>
        <name>getHeight</name>
        <briefdescription>
<para>Returns the total height (y extent) of the geometry in cm. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the total height of the geometry (cm) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="110" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1afad92e24729fe2b7cab9f979e1c4ea13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Geometry::getXMin</definition>
        <argsstring>()</argsstring>
        <name>getXMin</name>
        <briefdescription>
<para>Return the minimum x-coordinate contained by the geometry. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the minimum x-coordinate (cm) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="111" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="71" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1a48c01ef1108c7c492a126a2ebb811537" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Geometry::getXMax</definition>
        <argsstring>()</argsstring>
        <name>getXMax</name>
        <briefdescription>
<para>Return the maximum x-coordinate contained by the geometry. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the maximum x-coordinate (cm) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="112" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1a3ad8181a37f2d0f3d81541ac52b23a5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Geometry::getYMin</definition>
        <argsstring>()</argsstring>
        <name>getYMin</name>
        <briefdescription>
<para>Return the minimum y-coordinate contained by the geometry. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the minimum y-coordinate (cm) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="113" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1aba2f338f09174c9278c602b0e3a89f9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Geometry::getYMax</definition>
        <argsstring>()</argsstring>
        <name>getYMax</name>
        <briefdescription>
<para>Return the maximum y-coordinate contained by the geometry. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the maximum y-coordinate (cm) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="114" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1add592dc8747ee8698ae699848536d731" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Geometry::getBCTop</definition>
        <argsstring>()</argsstring>
        <name>getBCTop</name>
        <briefdescription>
<para>Returns the boundary condition for the top surface of the geometry. </para>        </briefdescription>
        <detaileddescription>
<para>The boundary conditions are vacuum (false) and reflective (false). <simplesect kind="return"><para>the boundary conditions for the top of the geometry </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="115" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="109" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1a8acd208353cf8d8de85335aaffec729e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Geometry::getBCBottom</definition>
        <argsstring>()</argsstring>
        <name>getBCBottom</name>
        <briefdescription>
<para>Returns the boundary condition for the bottom surface of the geometry. </para>        </briefdescription>
        <detaileddescription>
<para>The boundary conditions are vacuum (false) and reflective (false). <simplesect kind="return"><para>the boundary conditions for the bottom of the geometry </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="116" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1a44e9320bff580b1ad3632d5e2d8d4429" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Geometry::getBCLeft</definition>
        <argsstring>()</argsstring>
        <name>getBCLeft</name>
        <briefdescription>
<para>Returns the boundary condition for the left surface of the geometry. </para>        </briefdescription>
        <detaileddescription>
<para>The boundary conditions are vacuum (false) and reflective (false). <simplesect kind="return"><para>the boundary conditions for the left surface of the geometry </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="117" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="129" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1a4cbe7ce12ab6bbab6d679f9a761fa6e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Geometry::getBCRight</definition>
        <argsstring>()</argsstring>
        <name>getBCRight</name>
        <briefdescription>
<para>Returns the boundary condition for the right surface of the geometry. </para>        </briefdescription>
        <detaileddescription>
<para>The boundary conditions are vacuum (false) and reflective (false). <simplesect kind="return"><para>the boundary conditions for the right surface of the geometry </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="118" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="139" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1aa6c6670cf0552fc24824f074077e994b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Geometry::getNumFSRs</definition>
        <argsstring>()</argsstring>
        <name>getNumFSRs</name>
        <briefdescription>
<para>Returns the number of flat source regions in the geometry. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>number of flat source regions </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="119" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="148" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1aceb6249699270b234cddfb9046ed9b2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Geometry::getNumEnergyGroups</definition>
        <argsstring>()</argsstring>
        <name>getNumEnergyGroups</name>
        <briefdescription>
<para>Returns the number of energy groups for each material&apos;s nuclear data. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of energy groups </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="120" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="157" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1aee3114c51ec090bdc73b470a93ee2b32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Geometry::getNumMaterials</definition>
        <argsstring>()</argsstring>
        <name>getNumMaterials</name>
        <briefdescription>
<para>Returns the number of materials in the geometry. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of materials </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="121" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="170" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1a99b2b55bde07899f2859dc7da3a3fa40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int *</type>
        <definition>int * Geometry::getFSRtoCellMap</definition>
        <argsstring>()</argsstring>
        <name>getFSRtoCellMap</name>
        <briefdescription>
<para>Return an array indexed by flat source region IDs which contain the corresponding cell IDs. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>an array map of flat source region to cell IDs </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="122" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="180" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1a31555779a6ef4fb89a56ed7b775d2921" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int *</type>
        <definition>int * Geometry::getFSRtoMaterialMap</definition>
        <argsstring>()</argsstring>
        <name>getFSRtoMaterialMap</name>
        <briefdescription>
<para>Return an array indexed by flat source region IDs which contain the corresponding material IDs. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>an array map of flat source region to material IDs </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="123" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="194" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1a63515dc65e3c80ef36dfc4a41b749fe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Geometry::getMaxSegmentLength</definition>
        <argsstring>()</argsstring>
        <name>getMaxSegmentLength</name>
        <briefdescription>
<para>Return the maximum segment length computed during segmentation (cm) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>max segment length (cm) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="124" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="203" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1a1c13e62d14cbe8dc20ebf048a5793ff2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Geometry::getMinSegmentLength</definition>
        <argsstring>()</argsstring>
        <name>getMinSegmentLength</name>
        <briefdescription>
<para>Return the minimum segment length computed during segmentation (cm) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>min segment length (cm) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="125" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="212" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1a5f132e61ba7bbc3cda6b4a5beaa2a443" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; short int, <ref refid="classMaterial" kindref="compound">Material</ref> * &gt;</type>
        <definition>std::map&lt; short int, Material * &gt; Geometry::getMaterials</definition>
        <argsstring>()</argsstring>
        <name>getMaterials</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the map container of pointers to materials stored with their ids as keys <simplesect kind="return"><para>a map of materials in the geometry </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="126" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="222" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1adb4ac26586b662e0bf1c5a78e52b5d1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMaterial" kindref="compound">Material</ref> *</type>
        <definition>Material * Geometry::getMaterial</definition>
        <argsstring>(short int id)</argsstring>
        <name>getMaterial</name>
        <param>
          <type>short int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Return a pointer to a material in the geometry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>the user-specified material ID </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the material object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="127" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="232" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1a2ae2acc34805c42ed75333ee57bf0634" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classSurface" kindref="compound">Surface</ref> *</type>
        <definition>Surface * Geometry::getSurface</definition>
        <argsstring>(short int id)</argsstring>
        <name>getSurface</name>
        <param>
          <type>short int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Return a pointer to a surface from the geometry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>the user-specified surface ID </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the surface object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="128" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="253" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1a7cb10ab8da9163f385485af22f84d319" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCell" kindref="compound">Cell</ref> *</type>
        <definition>Cell * Geometry::getCell</definition>
        <argsstring>(short int id)</argsstring>
        <name>getCell</name>
        <param>
          <type>short int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Return a pointer to a cell from the geometry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>the user-specified cell&apos;s ID </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the cell object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="129" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="274" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1a5b689d61e1a4b807b3d95bfbac3b8068" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classUniverse" kindref="compound">Universe</ref> *</type>
        <definition>Universe * Geometry::getUniverse</definition>
        <argsstring>(short int id)</argsstring>
        <name>getUniverse</name>
        <param>
          <type>short int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Return a pointer to a universe from the geometry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>the user-specified universe ID </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the universe object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="130" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="295" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1aae3ca51043c163bbc51886709f420256" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classLattice" kindref="compound">Lattice</ref> *</type>
        <definition>Lattice * Geometry::getLattice</definition>
        <argsstring>(short int id)</argsstring>
        <name>getLattice</name>
        <param>
          <type>short int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Return a pointer to a lattice from the geometry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>the user-specified lattice (universe) ID </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the lattice object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="131" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="316" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1ae59d522ea23dfae9feb61b6cb000eb5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Geometry::addMaterial</definition>
        <argsstring>(Material *material)</argsstring>
        <name>addMaterial</name>
        <param>
          <type><ref refid="classMaterial" kindref="compound">Material</ref> *</type>
          <declname>material</declname>
        </param>
        <briefdescription>
<para>Add a material to the geometry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>material</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to a material object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="133" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="335" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1ae0c48bef75b8bd549ad5ad6edfa4644d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Geometry::addSurface</definition>
        <argsstring>(Surface *surface)</argsstring>
        <name>addSurface</name>
        <param>
          <type><ref refid="classSurface" kindref="compound">Surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
<para>Add a surface to the geometry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>surface</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the surface object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="134" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="374" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1ac682e21a0664f12390bb956147030bdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Geometry::addCell</definition>
        <argsstring>(Cell *cell)</argsstring>
        <name>addCell</name>
        <param>
          <type><ref refid="classCell" kindref="compound">Cell</ref> *</type>
          <declname>cell</declname>
        </param>
        <briefdescription>
<para>Add a cell to the geometry. </para>        </briefdescription>
        <detaileddescription>
<para>This method checks if the universe the cell is in already exists if not, it creates one and adds it to the geometry. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the cell object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="135" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="457" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1a5c928795dfb3da715a7dacc7961414e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Geometry::addUniverse</definition>
        <argsstring>(Universe *universe)</argsstring>
        <name>addUniverse</name>
        <param>
          <type><ref refid="classUniverse" kindref="compound">Universe</ref> *</type>
          <declname>universe</declname>
        </param>
        <briefdescription>
<para>Add a universe to the geometry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>universe</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the universe object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="136" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="556" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1aefea16b34ccd4f2b266665c7ac9d8b83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Geometry::addLattice</definition>
        <argsstring>(Lattice *lattice)</argsstring>
        <name>addLattice</name>
        <param>
          <type><ref refid="classLattice" kindref="compound">Lattice</ref> *</type>
          <declname>lattice</declname>
        </param>
        <briefdescription>
<para>Add a lattice to the geometry. </para>        </briefdescription>
        <detaileddescription>
<para>Adds the lattice to both the lattice and universe containers. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lattice</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the lattice object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="137" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="600" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1ab09d1ee4b8da5d3e60d5745d2a044185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCell" kindref="compound">Cell</ref> *</type>
        <definition>Cell * Geometry::findCellContainingCoords</definition>
        <argsstring>(LocalCoords *coords)</argsstring>
        <name>findCellContainingCoords</name>
        <param>
          <type><ref refid="classLocalCoords" kindref="compound">LocalCoords</ref> *</type>
          <declname>coords</declname>
        </param>
        <briefdescription>
<para>Find the cell that this localcoords object is in. </para>        </briefdescription>
        <detaileddescription>
<para>This method assumes that the localcoords has coordinates and a universe id. The method will recursively find the localcoords by building a linked list of localcoords from the localcoord passed in as an argument down to the lowest level cell found. In the process it will set the local coordinates for each localcoord in the linked list for the lattice or universe that it is in. If the localcoords is outside the bounds of the geometry or on the boundaries this method will return NULL; otherwise it will return a pointer to the cell that the localcoords is currently in. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coords</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a localcoords object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>returns a pointer to a cell if found, NULL if no cell found </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="139" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="661" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1a92eee0b27aeacfee8eaef6dacd2c8d6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCellBasic" kindref="compound">CellBasic</ref> *</type>
        <definition>CellBasic * Geometry::findCellContainingFSR</definition>
        <argsstring>(int fsr_id)</argsstring>
        <name>findCellContainingFSR</name>
        <param>
          <type>int</type>
          <declname>fsr_id</declname>
        </param>
        <briefdescription>
<para>Find the cell for a flat source region ID. </para>        </briefdescription>
        <detaileddescription>
<para>This function calls the recursive function findCell with a pointer to the base level universe 0 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fsr_id</parametername>
</parameternamelist>
<parameterdescription>
<para>a flat source region id </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the cell that this fsr is in </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="140" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="704" bodyend="706"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1acd933591916fa3f4f9d26ffca1ecd56a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCell" kindref="compound">Cell</ref> *</type>
        <definition>Cell * Geometry::findCell</definition>
        <argsstring>(Universe *univ, int fsr_id)</argsstring>
        <name>findCell</name>
        <param>
          <type><ref refid="classUniverse" kindref="compound">Universe</ref> *</type>
          <declname>univ</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fsr_id</declname>
        </param>
        <briefdescription>
<para>Find the cell for an fsr_id at a certain universe level. </para>        </briefdescription>
        <detaileddescription>
<para>This is a recursive function which is intended to be called with the base universe 0 and a flat source region ID. It will recursively call itself until it reaches the cell which corresponds to this flat source region. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>univ</parametername>
</parameternamelist>
<parameterdescription>
<para>a universe pointer for this flat source region&apos;s universe level </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fsr_id</parametername>
</parameternamelist>
<parameterdescription>
<para>a flat source region id </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the cell that this flat source region is in </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="141" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="719" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1ac6025e6ed8673a109e406733e3c2ca05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Geometry::findFSRId</definition>
        <argsstring>(LocalCoords *coords)</argsstring>
        <name>findFSRId</name>
        <param>
          <type><ref refid="classLocalCoords" kindref="compound">LocalCoords</ref> *</type>
          <declname>coords</declname>
        </param>
        <briefdescription>
<para>Find and return the ID of the flat source region that this localcoords object resides within. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coords</parametername>
</parameternamelist>
<parameterdescription>
<para>a localcoords object returned </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="142" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="1007" bodyend="1024"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1a8a81fa7b3dec100737f1dcc566f4d2ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Geometry::subdivideCells</definition>
        <argsstring>()</argsstring>
        <name>subdivideCells</name>
        <briefdescription>
<para>Subidivides all cells in the geometry into rings and angular sectors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="143" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="1030" bodyend="1034"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1ad951597b0a94c3f4c43db865ae30218d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Geometry::initializeFlatSourceRegions</definition>
        <argsstring>()</argsstring>
        <name>initializeFlatSourceRegions</name>
        <briefdescription>
<para>Compute the number of flat source regions and nitialize an array of FSRs and FSR maps. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="144" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="1040" bodyend="1065"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1a21a092d997179d6bea6c66f592faa6de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Geometry::segmentize</definition>
        <argsstring>(Track *track)</argsstring>
        <name>segmentize</name>
        <param>
          <type><ref refid="classTrack" kindref="compound">Track</ref> *</type>
          <declname>track</declname>
        </param>
        <briefdescription>
<para>This method creates segments within flat source regions in the geometry for a given track. </para>        </briefdescription>
        <detaileddescription>
<para>This method starts at the beginning of the track and finds successive intersection points with flat source regions as the track passes through the geometry and creates segment structs and adds them to the track. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>track</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to a track to segmentize </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="145" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="1077" bodyend="1183"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1a6bd18eecf69745a7471acf5c64fe269f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Geometry::computePinPowers</definition>
        <argsstring>(FP_PRECISION *FSRs_to_powers, FP_PRECISION *FSRs_to_pin_powers)</argsstring>
        <name>computePinPowers</name>
        <param>
          <type>FP_PRECISION *</type>
          <declname>FSRs_to_powers</declname>
        </param>
        <param>
          <type>FP_PRECISION *</type>
          <declname>FSRs_to_pin_powers</declname>
        </param>
        <briefdescription>
<para>This method is called from the <ref refid="classSolver" kindref="compound">Solver</ref> after fixed source iteration to compute the powers (fission rates) for each lattice cell. </para>        </briefdescription>
        <detaileddescription>
<para>This method computes both pin and assembly powers stored in arrays mapped by FSR ID in the second parameter, FSRs_to_pin_powers <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSRs_to_powers</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of the fission rate inside a given FSR </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FSRs_to_pin_powers</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of the fission rate of the lattice cell this FSR is within </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="147" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="1195" bodyend="1211"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1a2d418e75a8080e4219c8f1b024a6da8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FP_PRECISION</type>
        <definition>FP_PRECISION Geometry::computePinPowersInUniverse</definition>
        <argsstring>(Universe *univ, char *output_file_prefix, int FSR_id, FP_PRECISION *FSRs_to_powers, FP_PRECISION *FSRs_to_pin_powers)</argsstring>
        <name>computePinPowersInUniverse</name>
        <param>
          <type><ref refid="classUniverse" kindref="compound">Universe</ref> *</type>
          <declname>univ</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>output_file_prefix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>FSR_id</declname>
        </param>
        <param>
          <type>FP_PRECISION *</type>
          <declname>FSRs_to_powers</declname>
        </param>
        <param>
          <type>FP_PRECISION *</type>
          <declname>FSRs_to_pin_powers</declname>
        </param>
        <briefdescription>
<para>This is a recursive function which computes the powers of all of the FSRs inside a given universe. </para>        </briefdescription>
        <detaileddescription>
<para>This function handles both lattices and regular type universes and saves the powers computed for each lattice cell in a file. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>univ</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the universe of interest </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output_file_prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>the prefix for the output file to save the powers </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FSR_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the FSR ID prefix from the previous level&apos;s FSR map </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FSRs_to_powers</parametername>
</parameternamelist>
<parameterdescription>
<para>array of the fission rates for each FSR </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FSRs_to_pin_powers</parametername>
</parameternamelist>
<parameterdescription>
<para>array of the fission rates for the lattice cell that each FSR is within </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="152" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="1226" bodyend="1345"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1ae247a0c9686286fa941142e803d289f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Geometry::toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <briefdescription>
<para>Converts this geometry&apos;s attributes to a character array. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a character array of this geometry&apos;s attributes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="154" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="1353" bodyend="1390"/>
      </memberdef>
      <memberdef kind="function" id="classGeometry_1a51d5ba4a579b470d1321f365517436db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Geometry::printString</definition>
        <argsstring>()</argsstring>
        <name>printString</name>
        <briefdescription>
<para>Prints a string representation of all of the geometry&apos;s objects to the console. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="155" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.cpp" bodystart="1397" bodyend="1399"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The master class containing references to all geometry-related objects (surfaces, cells, universes and lattices) and materials. </para>    </briefdescription>
    <detaileddescription>
<para>The primary purpose for the geometry is to serve as a collection of all geometry-related objects, as well as for ray tracing of characteristic tracks across the geometry and computing flat source region - to - cell maps. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="37">
        <label>Geometry</label>
        <link refid="classGeometry"/>
      </node>
    </collaborationgraph>
    <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" line="30" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Geometry.h" bodystart="30" bodyend="156"/>
    <listofallmembers>
      <member refid="classGeometry_1a43d039b2ee1285ff5f341cab7e9ec87e" prot="private" virt="non-virtual"><scope>Geometry</scope><name>_bottom_bc</name></member>
      <member refid="classGeometry_1a46d999c0b34d774f77edc3deb6243860" prot="private" virt="non-virtual"><scope>Geometry</scope><name>_cells</name></member>
      <member refid="classGeometry_1a9947dda8b9bc9b4462aa289b6dfca8bb" prot="private" virt="non-virtual"><scope>Geometry</scope><name>_FSRs_to_cells</name></member>
      <member refid="classGeometry_1a004a40474368eeb71a8fceacb7f6f85a" prot="private" virt="non-virtual"><scope>Geometry</scope><name>_FSRs_to_materials</name></member>
      <member refid="classGeometry_1ae4710d98f11e353fcb9423b6d7eb0b9e" prot="private" virt="non-virtual"><scope>Geometry</scope><name>_lattices</name></member>
      <member refid="classGeometry_1aaea45ef5a9192e5bc1330063736343e2" prot="private" virt="non-virtual"><scope>Geometry</scope><name>_left_bc</name></member>
      <member refid="classGeometry_1afa32e36958a3f4e4329f05d9fdd77537" prot="private" virt="non-virtual"><scope>Geometry</scope><name>_materials</name></member>
      <member refid="classGeometry_1ac3117dd9330d8ed16b2cba9f940b8b8a" prot="private" virt="non-virtual"><scope>Geometry</scope><name>_max_seg_length</name></member>
      <member refid="classGeometry_1a0075904cf6a64e29f10ac38bf680c826" prot="private" virt="non-virtual"><scope>Geometry</scope><name>_min_seg_length</name></member>
      <member refid="classGeometry_1aa7109d746ef10e6f7204b877d3a93c47" prot="private" virt="non-virtual"><scope>Geometry</scope><name>_num_FSRs</name></member>
      <member refid="classGeometry_1af5f3cbbb610e83e7e1c97a6715adfec4" prot="private" virt="non-virtual"><scope>Geometry</scope><name>_num_groups</name></member>
      <member refid="classGeometry_1adeb3ad4a679e720008f5616c806d5d9d" prot="private" virt="non-virtual"><scope>Geometry</scope><name>_right_bc</name></member>
      <member refid="classGeometry_1a1f4595ef5eacbf5c9d973d08fbdffcdb" prot="private" virt="non-virtual"><scope>Geometry</scope><name>_surfaces</name></member>
      <member refid="classGeometry_1a1b91883cfcb7d443784b5b667c59c6cd" prot="private" virt="non-virtual"><scope>Geometry</scope><name>_top_bc</name></member>
      <member refid="classGeometry_1a71a9a7521fabe577fc8b7feb306414a1" prot="private" virt="non-virtual"><scope>Geometry</scope><name>_universes</name></member>
      <member refid="classGeometry_1abcd569182ba0a1505ad5016b6f3e5b97" prot="private" virt="non-virtual"><scope>Geometry</scope><name>_x_max</name></member>
      <member refid="classGeometry_1a56d486956a2d41eed1c9262a0a3e8f5d" prot="private" virt="non-virtual"><scope>Geometry</scope><name>_x_min</name></member>
      <member refid="classGeometry_1a3c669430d5101f9120c0c72ae6be3ce3" prot="private" virt="non-virtual"><scope>Geometry</scope><name>_y_max</name></member>
      <member refid="classGeometry_1a0278f2d9508f7cdbfdfa49452d683557" prot="private" virt="non-virtual"><scope>Geometry</scope><name>_y_min</name></member>
      <member refid="classGeometry_1ac682e21a0664f12390bb956147030bdf" prot="public" virt="non-virtual"><scope>Geometry</scope><name>addCell</name></member>
      <member refid="classGeometry_1aefea16b34ccd4f2b266665c7ac9d8b83" prot="public" virt="non-virtual"><scope>Geometry</scope><name>addLattice</name></member>
      <member refid="classGeometry_1ae59d522ea23dfae9feb61b6cb000eb5e" prot="public" virt="non-virtual"><scope>Geometry</scope><name>addMaterial</name></member>
      <member refid="classGeometry_1ae0c48bef75b8bd549ad5ad6edfa4644d" prot="public" virt="non-virtual"><scope>Geometry</scope><name>addSurface</name></member>
      <member refid="classGeometry_1a5c928795dfb3da715a7dacc7961414e9" prot="public" virt="non-virtual"><scope>Geometry</scope><name>addUniverse</name></member>
      <member refid="classGeometry_1a6bd18eecf69745a7471acf5c64fe269f" prot="public" virt="non-virtual"><scope>Geometry</scope><name>computePinPowers</name></member>
      <member refid="classGeometry_1a2d418e75a8080e4219c8f1b024a6da8e" prot="public" virt="non-virtual"><scope>Geometry</scope><name>computePinPowersInUniverse</name></member>
      <member refid="classGeometry_1acd933591916fa3f4f9d26ffca1ecd56a" prot="public" virt="non-virtual"><scope>Geometry</scope><name>findCell</name></member>
      <member refid="classGeometry_1ab09d1ee4b8da5d3e60d5745d2a044185" prot="public" virt="non-virtual"><scope>Geometry</scope><name>findCellContainingCoords</name></member>
      <member refid="classGeometry_1a92eee0b27aeacfee8eaef6dacd2c8d6e" prot="public" virt="non-virtual"><scope>Geometry</scope><name>findCellContainingFSR</name></member>
      <member refid="classGeometry_1a1ab32296f59249cdb603cab9b460746d" prot="private" virt="non-virtual"><scope>Geometry</scope><name>findFirstCell</name></member>
      <member refid="classGeometry_1ac6025e6ed8673a109e406733e3c2ca05" prot="public" virt="non-virtual"><scope>Geometry</scope><name>findFSRId</name></member>
      <member refid="classGeometry_1a9166344a3c051c5b2532fceb18bb5aa3" prot="private" virt="non-virtual"><scope>Geometry</scope><name>findNextCell</name></member>
      <member refid="classGeometry_1a4c301c163c63d21ed08c17b0f4e131d3" prot="public" virt="non-virtual"><scope>Geometry</scope><name>Geometry</name></member>
      <member refid="classGeometry_1a8acd208353cf8d8de85335aaffec729e" prot="public" virt="non-virtual"><scope>Geometry</scope><name>getBCBottom</name></member>
      <member refid="classGeometry_1a44e9320bff580b1ad3632d5e2d8d4429" prot="public" virt="non-virtual"><scope>Geometry</scope><name>getBCLeft</name></member>
      <member refid="classGeometry_1a4cbe7ce12ab6bbab6d679f9a761fa6e3" prot="public" virt="non-virtual"><scope>Geometry</scope><name>getBCRight</name></member>
      <member refid="classGeometry_1add592dc8747ee8698ae699848536d731" prot="public" virt="non-virtual"><scope>Geometry</scope><name>getBCTop</name></member>
      <member refid="classGeometry_1a7cb10ab8da9163f385485af22f84d319" prot="public" virt="non-virtual"><scope>Geometry</scope><name>getCell</name></member>
      <member refid="classGeometry_1a99b2b55bde07899f2859dc7da3a3fa40" prot="public" virt="non-virtual"><scope>Geometry</scope><name>getFSRtoCellMap</name></member>
      <member refid="classGeometry_1a31555779a6ef4fb89a56ed7b775d2921" prot="public" virt="non-virtual"><scope>Geometry</scope><name>getFSRtoMaterialMap</name></member>
      <member refid="classGeometry_1a8895b7f5b91d85926f316ac09ade9e5f" prot="public" virt="non-virtual"><scope>Geometry</scope><name>getHeight</name></member>
      <member refid="classGeometry_1aae3ca51043c163bbc51886709f420256" prot="public" virt="non-virtual"><scope>Geometry</scope><name>getLattice</name></member>
      <member refid="classGeometry_1adb4ac26586b662e0bf1c5a78e52b5d1c" prot="public" virt="non-virtual"><scope>Geometry</scope><name>getMaterial</name></member>
      <member refid="classGeometry_1a5f132e61ba7bbc3cda6b4a5beaa2a443" prot="public" virt="non-virtual"><scope>Geometry</scope><name>getMaterials</name></member>
      <member refid="classGeometry_1a63515dc65e3c80ef36dfc4a41b749fe8" prot="public" virt="non-virtual"><scope>Geometry</scope><name>getMaxSegmentLength</name></member>
      <member refid="classGeometry_1a1c13e62d14cbe8dc20ebf048a5793ff2" prot="public" virt="non-virtual"><scope>Geometry</scope><name>getMinSegmentLength</name></member>
      <member refid="classGeometry_1aceb6249699270b234cddfb9046ed9b2d" prot="public" virt="non-virtual"><scope>Geometry</scope><name>getNumEnergyGroups</name></member>
      <member refid="classGeometry_1aa6c6670cf0552fc24824f074077e994b" prot="public" virt="non-virtual"><scope>Geometry</scope><name>getNumFSRs</name></member>
      <member refid="classGeometry_1aee3114c51ec090bdc73b470a93ee2b32" prot="public" virt="non-virtual"><scope>Geometry</scope><name>getNumMaterials</name></member>
      <member refid="classGeometry_1a2ae2acc34805c42ed75333ee57bf0634" prot="public" virt="non-virtual"><scope>Geometry</scope><name>getSurface</name></member>
      <member refid="classGeometry_1a5b689d61e1a4b807b3d95bfbac3b8068" prot="public" virt="non-virtual"><scope>Geometry</scope><name>getUniverse</name></member>
      <member refid="classGeometry_1a8a7afceb0905b411d296c57fb0f8f3ba" prot="public" virt="non-virtual"><scope>Geometry</scope><name>getWidth</name></member>
      <member refid="classGeometry_1a48c01ef1108c7c492a126a2ebb811537" prot="public" virt="non-virtual"><scope>Geometry</scope><name>getXMax</name></member>
      <member refid="classGeometry_1afad92e24729fe2b7cab9f979e1c4ea13" prot="public" virt="non-virtual"><scope>Geometry</scope><name>getXMin</name></member>
      <member refid="classGeometry_1aba2f338f09174c9278c602b0e3a89f9c" prot="public" virt="non-virtual"><scope>Geometry</scope><name>getYMax</name></member>
      <member refid="classGeometry_1a3ad8181a37f2d0f3d81541ac52b23a5b" prot="public" virt="non-virtual"><scope>Geometry</scope><name>getYMin</name></member>
      <member refid="classGeometry_1a36faedb17e3504be7505e76beb768361" prot="private" virt="non-virtual"><scope>Geometry</scope><name>initializeCellFillPointers</name></member>
      <member refid="classGeometry_1ad951597b0a94c3f4c43db865ae30218d" prot="public" virt="non-virtual"><scope>Geometry</scope><name>initializeFlatSourceRegions</name></member>
      <member refid="classGeometry_1a51d5ba4a579b470d1321f365517436db" prot="public" virt="non-virtual"><scope>Geometry</scope><name>printString</name></member>
      <member refid="classGeometry_1a21a092d997179d6bea6c66f592faa6de" prot="public" virt="non-virtual"><scope>Geometry</scope><name>segmentize</name></member>
      <member refid="classGeometry_1a8a81fa7b3dec100737f1dcc566f4d2ca" prot="public" virt="non-virtual"><scope>Geometry</scope><name>subdivideCells</name></member>
      <member refid="classGeometry_1ae247a0c9686286fa941142e803d289f1" prot="public" virt="non-virtual"><scope>Geometry</scope><name>toString</name></member>
      <member refid="classGeometry_1ad55e832122ab3a2833dcaa6507867678" prot="public" virt="virtual"><scope>Geometry</scope><name>~Geometry</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
