<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="classZPlane" kind="class" prot="public">
    <compoundname>ZPlane</compoundname>
    <basecompoundref refid="classPlane" prot="public" virt="non-virtual">Plane</basecompoundref>
    <includes refid="Surface_8h" local="yes">openmoc/src/host/Surface.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classZPlane_1aa6a674ebce809fc42d6d628ecb3d8129" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double ZPlane::_z</definition>
        <argsstring></argsstring>
        <name>_z</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The location of the zplane along the z-axis </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="249" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Surface.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classZPlane_1adf8686299f24561e55dbbbdd1fd16c1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ZPlane::ZPlane</definition>
        <argsstring>(const double z, const short int id=0)</argsstring>
        <name>ZPlane</name>
        <param>
          <type>const double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>const short int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Constructor for a plane perpendicular to the z-axis. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>the surface id </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>the location of the plane along the z-axis </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="252" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Surface.cpp" bodystart="452" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="classZPlane_1a96d7d97847aefd832bad4d78a0ba5bd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ZPlane::setZ</definition>
        <argsstring>(const double z)</argsstring>
        <name>setZ</name>
        <param>
          <type>const double</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Set the location of this zplane on the z-axis. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>the location of the zplane on the z-axis </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="254" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Surface.cpp" bodystart="463" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="classZPlane_1abd5aa541a5803dfb52af8d156c06cb6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ZPlane::getZ</definition>
        <argsstring>()</argsstring>
        <name>getZ</name>
        <briefdescription>
<para>Returns the location of the zplane on the z-axis. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the location of the zplane on the z-axis </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="256" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Surface.cpp" bodystart="472" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="classZPlane_1a88cf39a1b45475ca33b9c6c490a2be32" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double ZPlane::getXMin</definition>
        <argsstring>()</argsstring>
        <name>getXMin</name>
        <reimplements refid="classPlane_1a39fb25d54b2b752f1598c20e2e889679">getXMin</reimplements>
        <briefdescription>
<para>Returns the minimum x value of -INFINITY on this zplane. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the minimum x value of -INFINITY </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="257" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Surface.cpp" bodystart="481" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="classZPlane_1a8a5210e90bdfb46876935dbef37193ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double ZPlane::getXMax</definition>
        <argsstring>()</argsstring>
        <name>getXMax</name>
        <reimplements refid="classPlane_1a32318a4525e6e9224602be52c89972f1">getXMax</reimplements>
        <briefdescription>
<para>Returns the maximum x value of INFINITY on this zplane. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the maximum x value of INFINITY </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="258" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Surface.cpp" bodystart="491" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="classZPlane_1ac8c77d7807045ce074dc76a69b93d5b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double ZPlane::getYMin</definition>
        <argsstring>()</argsstring>
        <name>getYMin</name>
        <reimplements refid="classPlane_1a70c9986c329d96eeaf6f2f0239f54706">getYMin</reimplements>
        <briefdescription>
<para>Returns the minimum y value of -INFINITY on this zplane. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the minimum y value of -INFINITY </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="259" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Surface.cpp" bodystart="500" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="classZPlane_1a3c76cfa8b383fbf962589b35364ab8cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double ZPlane::getYMax</definition>
        <argsstring>()</argsstring>
        <name>getYMax</name>
        <reimplements refid="classPlane_1a79d802de37e2b43b689c69dd05b721ff">getYMax</reimplements>
        <briefdescription>
<para>Returns the maximum y value on this zplane. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the maximum y value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="260" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Surface.cpp" bodystart="509" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="classZPlane_1a7a55a5e5c3d7d1279844263e77010c40" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string ZPlane::toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <reimplements refid="classPlane_1ae953389291ab7fff7a1745c86977a3ae">toString</reimplements>
        <briefdescription>
<para>Converts this zplane&apos;s attributes to a character array. </para>        </briefdescription>
        <detaileddescription>
<para>The character array returned conatins the type of plane (ie, ZPLANE) and the A, B, and C coefficients in the quadratic surface equation and the location of the plane along the z-axis. <simplesect kind="return"><para>a character array of this zplane&apos;s attributes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="262" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Surface.cpp" bodystart="521" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="classZPlane_1a979069fb189a567b298114bf5b24ff4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ZPlane::printString</definition>
        <argsstring>()</argsstring>
        <name>printString</name>
        <reimplements refid="classPlane_1a1979f3908ae8fa3dd780f0f583591da3">printString</reimplements>
        <briefdescription>
<para>Prints a string representation of all of the zplane&apos;s objects to the console. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="263" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Surface.cpp" bodystart="535" bodyend="537"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a plane perpendicular to the z-axis. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="152">
        <label>ZPlane</label>
        <link refid="classZPlane"/>
        <childnode refid="153" relation="public-inheritance">
        </childnode>
      </node>
      <node id="154">
        <label>Surface</label>
        <link refid="classSurface"/>
      </node>
      <node id="153">
        <label>Plane</label>
        <link refid="classPlane"/>
        <childnode refid="154" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="155">
        <label>ZPlane</label>
        <link refid="classZPlane"/>
        <childnode refid="156" relation="public-inheritance">
        </childnode>
      </node>
      <node id="157">
        <label>Surface</label>
        <link refid="classSurface"/>
      </node>
      <node id="156">
        <label>Plane</label>
        <link refid="classPlane"/>
        <childnode refid="157" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="245" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Surface.h" bodystart="245" bodyend="264"/>
    <listofallmembers>
      <member refid="classPlane_1afd0aae8ff683f84d286e975e856df3ef" prot="protected" virt="non-virtual"><scope>ZPlane</scope><name>_A</name></member>
      <member refid="classPlane_1a2aac5aa1b6e726918a1afc87269e51f4" prot="protected" virt="non-virtual"><scope>ZPlane</scope><name>_B</name></member>
      <member refid="classSurface_1a73ff438f865a0694735877998dce0d91" prot="protected" virt="non-virtual"><scope>ZPlane</scope><name>_boundary_type</name></member>
      <member refid="classPlane_1a4797228fd9249fbe9f353a15e110b06c" prot="protected" virt="non-virtual"><scope>ZPlane</scope><name>_C</name></member>
      <member refid="classSurface_1a4c1bcbdba5c4e1e8772b4d4b28f95e39" prot="protected" virt="non-virtual"><scope>ZPlane</scope><name>_id</name></member>
      <member refid="classSurface_1a259bc52e2a2788727593176a8896754e" prot="protected" virt="non-virtual"><scope>ZPlane</scope><name>_n</name></member>
      <member refid="classSurface_1a2b8655eb5a953ea4b45abe5fab7831d0" prot="protected" virt="non-virtual"><scope>ZPlane</scope><name>_surface_type</name></member>
      <member refid="classSurface_1a8995d86060c1a792988c707abbb56ea8" prot="protected" virt="non-virtual"><scope>ZPlane</scope><name>_uid</name></member>
      <member refid="classZPlane_1aa6a674ebce809fc42d6d628ecb3d8129" prot="private" virt="non-virtual"><scope>ZPlane</scope><name>_z</name></member>
      <member refid="classPlane_1a18dcfc28a7d08e18983d3f906943bc82" prot="public" virt="virtual"><scope>ZPlane</scope><name>evaluate</name></member>
      <member refid="classSurface_1afa3ef1b6a8b18d04240ee1a3bc908780" prot="public" virt="non-virtual"><scope>ZPlane</scope><name>getBoundaryType</name></member>
      <member refid="classSurface_1a77ba5d7532f411134107c777861d23b2" prot="public" virt="non-virtual"><scope>ZPlane</scope><name>getId</name></member>
      <member refid="classSurface_1a38d24a561dd8d1e3e3a0dabc3a472634" prot="public" virt="non-virtual"><scope>ZPlane</scope><name>getMinDistance</name></member>
      <member refid="classSurface_1a0e9228606069f0540ba43960ca192327" prot="public" virt="non-virtual"><scope>ZPlane</scope><name>getSurfaceType</name></member>
      <member refid="classSurface_1a1b8e7a0a79ee5b21ad5006ec7a1380a5" prot="public" virt="non-virtual"><scope>ZPlane</scope><name>getUid</name></member>
      <member refid="classZPlane_1a8a5210e90bdfb46876935dbef37193ff" prot="public" virt="virtual"><scope>ZPlane</scope><name>getXMax</name></member>
      <member refid="classZPlane_1a88cf39a1b45475ca33b9c6c490a2be32" prot="public" virt="virtual"><scope>ZPlane</scope><name>getXMin</name></member>
      <member refid="classZPlane_1a3c76cfa8b383fbf962589b35364ab8cf" prot="public" virt="virtual"><scope>ZPlane</scope><name>getYMax</name></member>
      <member refid="classZPlane_1ac8c77d7807045ce074dc76a69b93d5b6" prot="public" virt="virtual"><scope>ZPlane</scope><name>getYMin</name></member>
      <member refid="classZPlane_1abd5aa541a5803dfb52af8d156c06cb6d" prot="public" virt="non-virtual"><scope>ZPlane</scope><name>getZ</name></member>
      <member refid="classPlane_1a6e1b304a38f0c6d6f7dc985d548e0304" prot="public" virt="virtual"><scope>ZPlane</scope><name>intersection</name></member>
      <member refid="classSurface_1a1263b1b61154ed6f75e7079a5832d853" prot="public" virt="non-virtual"><scope>ZPlane</scope><name>isCoordOnSurface</name></member>
      <member refid="classSurface_1ad996b11e3af07e6dea8081cb11ccfe0c" prot="public" virt="non-virtual"><scope>ZPlane</scope><name>isPointOnSurface</name></member>
      <member refid="classPlane_1aa3494ba48672b175bb780ef18339d7f7" prot="public" virt="non-virtual"><scope>ZPlane</scope><name>Plane</name></member>
      <member refid="classZPlane_1a979069fb189a567b298114bf5b24ff4a" prot="public" virt="virtual"><scope>ZPlane</scope><name>printString</name></member>
      <member refid="classSurface_1af8921636e9779854a377f412817c3a32" prot="public" virt="non-virtual"><scope>ZPlane</scope><name>setBoundaryType</name></member>
      <member refid="classZPlane_1a96d7d97847aefd832bad4d78a0ba5bd0" prot="public" virt="non-virtual"><scope>ZPlane</scope><name>setZ</name></member>
      <member refid="classSurface_1ad29d02e18bad0fe49e5a18d9f0cab7a2" prot="public" virt="non-virtual" ambiguityscope="Surface::"><scope>ZPlane</scope><name>Surface</name></member>
      <member refid="classZPlane_1a7a55a5e5c3d7d1279844263e77010c40" prot="public" virt="virtual"><scope>ZPlane</scope><name>toString</name></member>
      <member refid="classZPlane_1adf8686299f24561e55dbbbdd1fd16c1d" prot="public" virt="non-virtual"><scope>ZPlane</scope><name>ZPlane</name></member>
      <member refid="classSurface_1a89de75c95cb550d432f3ea4ed1429db0" prot="public" virt="virtual"><scope>ZPlane</scope><name>~Surface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
