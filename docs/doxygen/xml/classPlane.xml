<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="classPlane" kind="class" prot="public">
    <compoundname>Plane</compoundname>
    <basecompoundref refid="classSurface" prot="public" virt="non-virtual">Surface</basecompoundref>
    <derivedcompoundref refid="classXPlane" prot="public" virt="non-virtual">XPlane</derivedcompoundref>
    <derivedcompoundref refid="classYPlane" prot="public" virt="non-virtual">YPlane</derivedcompoundref>
    <derivedcompoundref refid="classZPlane" prot="public" virt="non-virtual">ZPlane</derivedcompoundref>
    <includes refid="Surface_8h" local="yes">openmoc/src/host/Surface.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classPlane_1afd0aae8ff683f84d286e975e856df3ef" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Plane::_A</definition>
        <argsstring></argsstring>
        <name>_A</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The coefficient for the linear term in x </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="163" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPlane_1a2aac5aa1b6e726918a1afc87269e51f4" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Plane::_B</definition>
        <argsstring></argsstring>
        <name>_B</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The coefficient for the linear term in y </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="165" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classPlane_1a4797228fd9249fbe9f353a15e110b06c" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Plane::_C</definition>
        <argsstring></argsstring>
        <name>_C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The constant offset </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="167" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classPlane_1a432070efb8401735ea64bc0e98feebe5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Surface</definition>
        <argsstring></argsstring>
        <name>Surface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="classPlane" kindref="compound">Plane</ref> is a friend of class <ref refid="classSurface" kindref="compound">Surface</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="169" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classPlane_1ab5684e0fdc711b5d83e1155fcf2427bc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Circle</definition>
        <argsstring></argsstring>
        <name>Circle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="classPlane" kindref="compound">Plane</ref> is a friend of class <ref refid="classCircle" kindref="compound">Circle</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="171" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classPlane_1aa3494ba48672b175bb780ef18339d7f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Plane::Plane</definition>
        <argsstring>(const double A, const double B, const double C, const short int id=0)</argsstring>
        <name>Plane</name>
        <param>
          <type>const double</type>
          <declname>A</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>B</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>C</declname>
        </param>
        <param>
          <type>const short int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>the surface id </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>the first coefficient in <formula id="13">$ A * x + B * y + C = 0 $</formula> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B</parametername>
</parameternamelist>
<parameterdescription>
<para>the second coefficient in <formula id="13">$ A * x + B * y + C = 0 $</formula> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>C</parametername>
</parameternamelist>
<parameterdescription>
<para>the third coefficient in <formula id="13">$ A * x + B * y + C = 0 $</formula> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="175" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.cpp" bodystart="133" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classPlane_1a39fb25d54b2b752f1598c20e2e889679" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Plane::getXMin</definition>
        <argsstring>()</argsstring>
        <name>getXMin</name>
        <reimplements refid="classSurface_1a3baea26cc38b6fb0d194fca014018174">getXMin</reimplements>
        <reimplementedby refid="classXPlane_1a44355c96a333d8061ac0281d4f3a1aa7">getXMin</reimplementedby>
        <reimplementedby refid="classYPlane_1ac3516c324a84328918483ba4fb9ed3b0">getXMin</reimplementedby>
        <reimplementedby refid="classZPlane_1a88cf39a1b45475ca33b9c6c490a2be32">getXMin</reimplementedby>
        <briefdescription>
<para>Returns the minimum x value of -INFINITY on this surface. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the minimum x value of -INFINITY </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="177" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.cpp" bodystart="147" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classPlane_1a32318a4525e6e9224602be52c89972f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Plane::getXMax</definition>
        <argsstring>()</argsstring>
        <name>getXMax</name>
        <reimplements refid="classSurface_1aff659fd1b2d547d8b59df1b804d4098b">getXMax</reimplements>
        <reimplementedby refid="classXPlane_1ab6fadaf822a0f13c24b04eb234981f84">getXMax</reimplementedby>
        <reimplementedby refid="classYPlane_1a826121aa104801c8de740bdf35b8719b">getXMax</reimplementedby>
        <reimplementedby refid="classZPlane_1a8a5210e90bdfb46876935dbef37193ff">getXMax</reimplementedby>
        <briefdescription>
<para>Returns the maximum x value of INFINITY on this surface. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the maximum x value of INFINITY </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="178" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.cpp" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classPlane_1a70c9986c329d96eeaf6f2f0239f54706" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Plane::getYMin</definition>
        <argsstring>()</argsstring>
        <name>getYMin</name>
        <reimplements refid="classSurface_1a294b8bd2f04b3b938cc7c31cc4f941f3">getYMin</reimplements>
        <reimplementedby refid="classXPlane_1a827dd3ffd7ee05c3110e0c25ff3efcfb">getYMin</reimplementedby>
        <reimplementedby refid="classYPlane_1ad31d977334c0839649588b2382c6d316">getYMin</reimplementedby>
        <reimplementedby refid="classZPlane_1ac8c77d7807045ce074dc76a69b93d5b6">getYMin</reimplementedby>
        <briefdescription>
<para>Returns the minimum y value of -INFINITY on this surface. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the minimum y value of -INFINITY </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="179" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.cpp" bodystart="167" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classPlane_1a79d802de37e2b43b689c69dd05b721ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Plane::getYMax</definition>
        <argsstring>()</argsstring>
        <name>getYMax</name>
        <reimplements refid="classSurface_1a1ffa35335f366974886fa7c36b564fef">getYMax</reimplements>
        <reimplementedby refid="classXPlane_1a12b3bab6d337755116c2a8d50b8c5810">getYMax</reimplementedby>
        <reimplementedby refid="classYPlane_1a68f1585c4575003ef500e95bd21475f1">getYMax</reimplementedby>
        <reimplementedby refid="classZPlane_1a3c76cfa8b383fbf962589b35364ab8cf">getYMax</reimplementedby>
        <briefdescription>
<para>Returns the maximum y value of INFINITY on this surface. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the maximum y value of INFINITY </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="180" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.cpp" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classPlane_1a18dcfc28a7d08e18983d3f906943bc82" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double Plane::evaluate</definition>
        <argsstring>(const Point *point) const </argsstring>
        <name>evaluate</name>
        <reimplements refid="classSurface_1a2e0aaef635a7392806d27fb4999a9168">evaluate</reimplements>
        <param>
          <type>const <ref refid="classPoint" kindref="compound">Point</ref> *</type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Evaluate a point using the plane&apos;s quadratic surface equation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the point of interest </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of point in the plane&apos;s quadratic equation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="182" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" bodystart="367" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="classPlane_1a6e1b304a38f0c6d6f7dc985d548e0304" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int Plane::intersection</definition>
        <argsstring>(Point *point, double angle, Point *points)</argsstring>
        <name>intersection</name>
        <reimplements refid="classSurface_1a145ed967142bc6c121d43f5f2523e2e9">intersection</reimplements>
        <param>
          <type><ref refid="classPoint" kindref="compound">Point</ref> *</type>
          <declname>point</declname>
        </param>
        <param>
          <type>double</type>
          <declname>angle</declname>
        </param>
        <param>
          <type><ref refid="classPoint" kindref="compound">Point</ref> *</type>
          <declname>points</declname>
        </param>
        <briefdescription>
<para>Finds the intersection point with this plane from a given point and trajectory defined by an angle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the point of interest </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>the angle defining the trajectory in radians </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>points</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a point to store the intersection point </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of intersection points (0 or 1) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="183" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.cpp" bodystart="191" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classPlane_1ae953389291ab7fff7a1745c86977a3ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string Plane::toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <reimplements refid="classSurface_1a7275a4ce4c6d96fd90b5c1916cf9ae37">toString</reimplements>
        <reimplementedby refid="classXPlane_1a8f02479cb1ca1dc6e4d79d4fe1d26543">toString</reimplementedby>
        <reimplementedby refid="classYPlane_1a90e984e54368bc0508c82e86b05de286">toString</reimplementedby>
        <reimplementedby refid="classZPlane_1a7a55a5e5c3d7d1279844263e77010c40">toString</reimplementedby>
        <briefdescription>
<para>Converts this plane&apos;s attributes to a character array. </para>        </briefdescription>
        <detaileddescription>
<para>The character array returned conatins the type of plane (ie, PLANE) and the A, B, and C coefficients in the quadratic surface equation. <simplesect kind="return"><para>a character array of this plane&apos;s attributes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="185" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.cpp" bodystart="252" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classPlane_1a1979f3908ae8fa3dd780f0f583591da3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Plane::printString</definition>
        <argsstring>()</argsstring>
        <name>printString</name>
        <reimplements refid="classSurface_1aedc2d76b05edc93b85bb63dc41c1f1b2">printString</reimplements>
        <reimplementedby refid="classYPlane_1a0be4dfa4623eaf137fdd0324bfe1e7ea">printString</reimplementedby>
        <reimplementedby refid="classZPlane_1a979069fb189a567b298114bf5b24ff4a">printString</reimplementedby>
        <briefdescription>
<para>Prints a string representation of all of the plane&apos;s objects to the console. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="186" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.cpp" bodystart="266" bodyend="268"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a plane perpendicular to the xy-plane. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="61">
        <label>ZPlane</label>
        <link refid="classZPlane"/>
        <childnode refid="57" relation="public-inheritance">
        </childnode>
      </node>
      <node id="59">
        <label>XPlane</label>
        <link refid="classXPlane"/>
        <childnode refid="57" relation="public-inheritance">
        </childnode>
      </node>
      <node id="58">
        <label>Surface</label>
        <link refid="classSurface"/>
      </node>
      <node id="60">
        <label>YPlane</label>
        <link refid="classYPlane"/>
        <childnode refid="57" relation="public-inheritance">
        </childnode>
      </node>
      <node id="57">
        <label>Plane</label>
        <link refid="classPlane"/>
        <childnode refid="58" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="63">
        <label>Surface</label>
        <link refid="classSurface"/>
      </node>
      <node id="62">
        <label>Plane</label>
        <link refid="classPlane"/>
        <childnode refid="63" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" line="159" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Surface.h" bodystart="159" bodyend="187"/>
    <listofallmembers>
      <member refid="classPlane_1afd0aae8ff683f84d286e975e856df3ef" prot="protected" virt="non-virtual"><scope>Plane</scope><name>_A</name></member>
      <member refid="classPlane_1a2aac5aa1b6e726918a1afc87269e51f4" prot="protected" virt="non-virtual"><scope>Plane</scope><name>_B</name></member>
      <member refid="classSurface_1a73ff438f865a0694735877998dce0d91" prot="protected" virt="non-virtual"><scope>Plane</scope><name>_boundary_type</name></member>
      <member refid="classPlane_1a4797228fd9249fbe9f353a15e110b06c" prot="protected" virt="non-virtual"><scope>Plane</scope><name>_C</name></member>
      <member refid="classSurface_1a4c1bcbdba5c4e1e8772b4d4b28f95e39" prot="protected" virt="non-virtual"><scope>Plane</scope><name>_id</name></member>
      <member refid="classSurface_1a259bc52e2a2788727593176a8896754e" prot="protected" virt="non-virtual"><scope>Plane</scope><name>_n</name></member>
      <member refid="classSurface_1a2b8655eb5a953ea4b45abe5fab7831d0" prot="protected" virt="non-virtual"><scope>Plane</scope><name>_surface_type</name></member>
      <member refid="classSurface_1a8995d86060c1a792988c707abbb56ea8" prot="protected" virt="non-virtual"><scope>Plane</scope><name>_uid</name></member>
      <member refid="classPlane_1ab5684e0fdc711b5d83e1155fcf2427bc" prot="protected" virt="non-virtual"><scope>Plane</scope><name>Circle</name></member>
      <member refid="classPlane_1a18dcfc28a7d08e18983d3f906943bc82" prot="public" virt="virtual"><scope>Plane</scope><name>evaluate</name></member>
      <member refid="classSurface_1afa3ef1b6a8b18d04240ee1a3bc908780" prot="public" virt="non-virtual"><scope>Plane</scope><name>getBoundaryType</name></member>
      <member refid="classSurface_1a77ba5d7532f411134107c777861d23b2" prot="public" virt="non-virtual"><scope>Plane</scope><name>getId</name></member>
      <member refid="classSurface_1a38d24a561dd8d1e3e3a0dabc3a472634" prot="public" virt="non-virtual"><scope>Plane</scope><name>getMinDistance</name></member>
      <member refid="classSurface_1a0e9228606069f0540ba43960ca192327" prot="public" virt="non-virtual"><scope>Plane</scope><name>getSurfaceType</name></member>
      <member refid="classSurface_1a1b8e7a0a79ee5b21ad5006ec7a1380a5" prot="public" virt="non-virtual"><scope>Plane</scope><name>getUid</name></member>
      <member refid="classPlane_1a32318a4525e6e9224602be52c89972f1" prot="public" virt="virtual"><scope>Plane</scope><name>getXMax</name></member>
      <member refid="classPlane_1a39fb25d54b2b752f1598c20e2e889679" prot="public" virt="virtual"><scope>Plane</scope><name>getXMin</name></member>
      <member refid="classPlane_1a79d802de37e2b43b689c69dd05b721ff" prot="public" virt="virtual"><scope>Plane</scope><name>getYMax</name></member>
      <member refid="classPlane_1a70c9986c329d96eeaf6f2f0239f54706" prot="public" virt="virtual"><scope>Plane</scope><name>getYMin</name></member>
      <member refid="classPlane_1a6e1b304a38f0c6d6f7dc985d548e0304" prot="public" virt="virtual"><scope>Plane</scope><name>intersection</name></member>
      <member refid="classSurface_1a1263b1b61154ed6f75e7079a5832d853" prot="public" virt="non-virtual"><scope>Plane</scope><name>isCoordOnSurface</name></member>
      <member refid="classSurface_1ad996b11e3af07e6dea8081cb11ccfe0c" prot="public" virt="non-virtual"><scope>Plane</scope><name>isPointOnSurface</name></member>
      <member refid="classPlane_1aa3494ba48672b175bb780ef18339d7f7" prot="public" virt="non-virtual"><scope>Plane</scope><name>Plane</name></member>
      <member refid="classPlane_1a1979f3908ae8fa3dd780f0f583591da3" prot="public" virt="virtual"><scope>Plane</scope><name>printString</name></member>
      <member refid="classSurface_1af8921636e9779854a377f412817c3a32" prot="public" virt="non-virtual"><scope>Plane</scope><name>setBoundaryType</name></member>
      <member refid="classPlane_1a432070efb8401735ea64bc0e98feebe5" prot="protected" virt="non-virtual"><scope>Plane</scope><name>Surface</name></member>
      <member refid="classSurface_1ad29d02e18bad0fe49e5a18d9f0cab7a2" prot="public" virt="non-virtual" ambiguityscope="Surface::"><scope>Plane</scope><name>Surface</name></member>
      <member refid="classPlane_1ae953389291ab7fff7a1745c86977a3ae" prot="public" virt="virtual"><scope>Plane</scope><name>toString</name></member>
      <member refid="classSurface_1a89de75c95cb550d432f3ea4ed1429db0" prot="public" virt="virtual"><scope>Plane</scope><name>~Surface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
