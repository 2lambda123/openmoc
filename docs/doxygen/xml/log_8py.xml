<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="log_8py" kind="file">
    <compoundname>log.py</compoundname>
    <innernamespace refid="namespaceopenmoc_1_1log">openmoc::log</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceopenmoc_1_1log" refkind="compound"><highlight class="comment">##<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>@file<sp/>log.py</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>@package<sp/>openmoc.log<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>@brief<sp/>Utility<sp/>functions<sp/>for<sp/>writing<sp/>log<sp/>messages<sp/>to<sp/>the<sp/>screen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>@details<sp/>This<sp/>module<sp/>includes<sp/>a<sp/>set<sp/>of<sp/>wrapper<sp/>functions<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>logging<sp/>routines<sp/>provided<sp/>by<sp/>OpenMOC&apos;s<sp/>C++<sp/>source<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code.<sp/>These<sp/>Python<sp/>methods<sp/>provide<sp/>an<sp/>interface<sp/>for<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>creating<sp/>formatted<sp/>log<sp/>messages<sp/>using<sp/>level-based<sp/>loggin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>to<sp/>print<sp/>them<sp/>to<sp/>the<sp/>screen<sp/>as<sp/>well<sp/>as<sp/>a<sp/>logfile.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>@author<sp/>Samuel<sp/>Shaner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>@date<sp/>March<sp/>15,<sp/>2013</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>openmoc</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">##<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/>@brief<sp/>Function<sp/>to<sp/>print<sp/>a<sp/>log<sp/>message<sp/>to<sp/>the<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/>@details<sp/>This<sp/>method<sp/>is<sp/>a<sp/>wrapper<sp/>to<sp/>the<sp/>log_printf<sp/>C++<sp/>routine.<sp/>It</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allows<sp/>for<sp/>formatted<sp/>messages<sp/>to<sp/>be<sp/>printed<sp/>to<sp/>the<sp/>screen<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>a<sp/>similar<sp/>fashion<sp/>to<sp/>the<sp/>C/C++<sp/>printf<sp/>method,<sp/>but<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>additional<sp/>formatting<sp/>provided<sp/>by<sp/>the<sp/>OpenMOC<sp/>logging<sp/>utilities.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>An<sp/>example<sp/>of<sp/>how<sp/>this<sp/>might<sp/>be<sp/>used<sp/>in<sp/>a<sp/>OpenMOC<sp/>Python<sp/>script</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>as<sp/>follows:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">#<sp/>@code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value1<sp/>=<sp/>25</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value2<sp/>=<sp/>26.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log.py_printf(&apos;NORMAL&apos;,<sp/>&apos;My<sp/>name<sp/>is<sp/>Will<sp/>and<sp/>I<sp/>am<sp/>%d<sp/>going<sp/>on&apos;\</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;<sp/>%f<sp/>years<sp/>of<sp/>age&apos;,<sp/>value1,<sp/>value2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">#<sp/>@endcode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">#<sp/>@param<sp/>level<sp/>the<sp/>logging<sp/>level<sp/>for<sp/>this<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">#<sp/>@param<sp/>my_str<sp/>the<sp/>string<sp/>to<sp/>print<sp/>to<sp/>the<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">#<sp/>@param<sp/>*args<sp/>a<sp/>variable<sp/>length<sp/>list<sp/>of<sp/>values<sp/>for<sp/>the<sp/>message<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceopenmoc_1_1log_1a0bfafaa584b4e7156cce255cb70943e5" kindref="member" tooltip="Function to print a log message to the screen.">py_printf</ref>(level,<sp/>my_str,<sp/>*args):</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>level<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;DEBUG&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openmoc.log_printf(openmoc.DEBUG,<sp/>my_str<sp/>%<sp/>args)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>level<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;INFO&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openmoc.log_printf(openmoc.INFO,<sp/>my_str<sp/>%<sp/>args)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>level<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;NORMAL&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openmoc.log_printf(openmoc.NORMAL,<sp/>my_str<sp/>%<sp/>args)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>level<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;SEPARATOR&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openmoc.log_printf(openmoc.SEPARATOR,<sp/>my_str<sp/>%<sp/>args)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>level<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;HEADER&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openmoc.log_printf(openmoc.HEADER,<sp/>my_str<sp/>%<sp/>args)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>level<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;TITLE&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openmoc.log_printf(openmoc.TITLE,<sp/>my_str<sp/>%<sp/>args)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>level<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;WARNING&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openmoc.log_printf(openmoc.WARNING,<sp/>my_str<sp/>%<sp/>args)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>level<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;CRITICAL&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openmoc.log_printf(openmoc.CRITICAL,<sp/>my_str<sp/>%<sp/>args)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>level<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;RESULT&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openmoc.log_printf(openmoc.RESULT,<sp/>my_str<sp/>%<sp/>args)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>level<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;UNITTEST&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openmoc.log_printf(openmoc.UNITTEST,<sp/>my_str<sp/>%<sp/>args)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>level<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;ERROR&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openmoc.log_printf(openmoc.ERROR,<sp/>my_str<sp/>%<sp/>args)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">##</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">#<sp/>@brief<sp/>Assigns<sp/>the<sp/>lowest<sp/>level<sp/>logging<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">#<sp/>@details<sp/>Sets<sp/>the<sp/>lowest<sp/>level<sp/>logging<sp/>message<sp/>to<sp/>print<sp/>to<sp/>the<sp/>screen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>controls<sp/>the<sp/>lowest<sp/>level<sp/>for<sp/>both<sp/>logging<sp/>messages<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C++<sp/>source<sp/>code<sp/>as<sp/>well<sp/>as<sp/>the<sp/>user&apos;s<sp/>OpenMOC<sp/>Python<sp/>input<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>function<sp/>would<sp/>be<sp/>called<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>input<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>follows:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">#<sp/>@code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log.py_setlevel(&apos;INFO&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">#<sp/>@endcode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">#<sp/>@param<sp/>level<sp/>the<sp/>minimum<sp/>logging<sp/>level<sp/>(&apos;DEBUG&apos;,<sp/>&apos;INFO&apos;,<sp/>etc)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceopenmoc_1_1log_1a3034734497d1f2c08acc8d9b1e51f8ad" kindref="member" tooltip="Assigns the lowest level logging message.">setLogLevel</ref>(level):</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>level<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;DEBUG&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openmoc.setLogLevel(</highlight><highlight class="stringliteral">&apos;DEBUG&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>level<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;INFO&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openmoc.setLogLevel(</highlight><highlight class="stringliteral">&apos;INFO&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>level<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;NORMAL&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openmoc.setLogLevel(</highlight><highlight class="stringliteral">&apos;NORMAL&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>level<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;SEPARATOR&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openmoc.setLogLevel(</highlight><highlight class="stringliteral">&apos;SEPARATOR&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>level<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;HEADER&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openmoc.setLogLevel(</highlight><highlight class="stringliteral">&apos;HEADER&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>level<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;TITLE&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openmoc.setLogLevel(</highlight><highlight class="stringliteral">&apos;TITLE&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>level<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;WARNING&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openmoc.setLogLevel(</highlight><highlight class="stringliteral">&apos;WARNING&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>level<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;CRITICAL&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openmoc.setLogLevel(</highlight><highlight class="stringliteral">&apos;CRITICAL&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>level<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;RESULT&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openmoc.setLogLevel(</highlight><highlight class="stringliteral">&apos;RESULT&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>level<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;UNITTEST&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openmoc.setLogLevel(</highlight><highlight class="stringliteral">&apos;UNITTEST&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>level<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;ERROR&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>openmoc.setLogLevel(</highlight><highlight class="stringliteral">&apos;ERROR&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceopenmoc_1_1log_1a0bfafaa584b4e7156cce255cb70943e5" kindref="member" tooltip="Function to print a log message to the screen.">py_printf</ref>(</highlight><highlight class="stringliteral">&apos;Cannot<sp/>set<sp/>log<sp/>level<sp/>to<sp/>unsupported<sp/>log<sp/>level<sp/>%s&apos;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str(level))</highlight></codeline>
    </programlisting>
    <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/openmoc/log.py"/>
  </compounddef>
</doxygen>
