<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="classCellBasic" kind="class" prot="public">
    <compoundname>CellBasic</compoundname>
    <basecompoundref refid="classCell" prot="public" virt="non-virtual">Cell</basecompoundref>
    <includes refid="Cell_8h" local="yes">openmoc/src/host/Cell.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCellBasic_1a5bea0b9dd86c3bc9e9216ef53063f042" prot="private" static="no" mutable="no">
        <type>short int</type>
        <definition>short int CellBasic::_material</definition>
        <argsstring></argsstring>
        <name>_material</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to the material filling this cell </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.h" line="108" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCellBasic_1ac3a282e0b386b2eef01b5ddd1f8694ee" prot="private" static="no" mutable="no">
        <type>short int</type>
        <definition>short int CellBasic::_num_rings</definition>
        <argsstring></argsstring>
        <name>_num_rings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of rings sub-dividing this cell </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.h" line="110" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCellBasic_1a62b686f3f27bca6f3fa1bbe26d618207" prot="private" static="no" mutable="no">
        <type>short int</type>
        <definition>short int CellBasic::_num_sectors</definition>
        <argsstring></argsstring>
        <name>_num_sectors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of sectors sub-dividing this cell </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.h" line="112" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCellBasic_1a7b021bfd21e7e545027df5122f5a2022" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classCellBasic" kindref="compound">CellBasic</ref> * &gt;</type>
        <definition>std::vector&lt;CellBasic*&gt; CellBasic::_rings</definition>
        <argsstring></argsstring>
        <name>_rings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.h" line="114" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCellBasic_1a80abfbfc39a72c6c89b3769487b2d7b9" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classCellBasic" kindref="compound">CellBasic</ref> * &gt;</type>
        <definition>std::vector&lt;CellBasic*&gt; CellBasic::_sectors</definition>
        <argsstring></argsstring>
        <name>_sectors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.h" line="115" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCellBasic_1ae1ba95b6541ac5ed2df946fc14e6f0a9" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classCellBasic" kindref="compound">CellBasic</ref> * &gt;</type>
        <definition>std::vector&lt;CellBasic*&gt; CellBasic::_subcells</definition>
        <argsstring></argsstring>
        <name>_subcells</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.h" line="116" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classCellBasic_1a1d3dbb92420b698434a5658a054d9b65" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CellBasic::ringify</definition>
        <argsstring>()</argsstring>
        <name>ringify</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.h" line="118" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.cpp" bodystart="420" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="classCellBasic_1acad02881cef4068e6a74d05770f38bfc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CellBasic::sectorize</definition>
        <argsstring>()</argsstring>
        <name>sectorize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.h" line="119" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.cpp" bodystart="363" bodyend="417"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCellBasic_1ad670ef7ec7bece7b8a057f7e3e511919" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CellBasic::CellBasic</definition>
        <argsstring>(short int universe, short int material, int rings=0, int sectors=0, short int id=0)</argsstring>
        <name>CellBasic</name>
        <param>
          <type>short int</type>
          <declname>universe</declname>
        </param>
        <param>
          <type>short int</type>
          <declname>material</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rings</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>sectors</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>short int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor sets the user-specified and unique IDs for this cellbasic. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>universe</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID for the universe within which this cellbasic resides </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>material</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID for the material which fills this cellbasic </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rings</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of equal volume rings to divide this cell into (the default is zero) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sectors</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of angular sectors to divide this cell into (the default is zero) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>the user-specified cell ID </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.h" line="123" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.cpp" bodystart="259" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classCellBasic_1a72c5170a7a99499874bf96eea3da4148" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>short int</type>
        <definition>short int CellBasic::getMaterial</definition>
        <argsstring>() const </argsstring>
        <name>getMaterial</name>
        <briefdescription>
<para>Return the ID of the material filling the cellbasic. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the material&apos;s ID </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.h" line="125" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.cpp" bodystart="273" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="classCellBasic_1afb947abd7222748cee6af104845506c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>short int</type>
        <definition>short int CellBasic::getNumRings</definition>
        <argsstring>()</argsstring>
        <name>getNumRings</name>
        <briefdescription>
<para>Return the number of rings in the cell. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of rings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.h" line="126" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.cpp" bodystart="282" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="classCellBasic_1a34740bd6ab41262ce6cf929e05ea9027" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>short int</type>
        <definition>short int CellBasic::getNumSectors</definition>
        <argsstring>()</argsstring>
        <name>getNumSectors</name>
        <briefdescription>
<para>Return the number of sectors in the cell. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of sectors </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.h" line="127" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.cpp" bodystart="291" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="classCellBasic_1a20995e53c5742d2e27a9ee32d78f7302" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int CellBasic::getNumFSRs</definition>
        <argsstring>()</argsstring>
        <name>getNumFSRs</name>
        <reimplements refid="classCell_1a7e47c4f454dc5ee6689e48a5f3770f43">getNumFSRs</reimplements>
        <briefdescription>
<para>Return the number of flat source regions in this cellbasic. </para>        </briefdescription>
        <detaileddescription>
<para>This method is used when the geometry recursively constructs flat source regions. By definition, cellbasic&apos;s are the lowest level entity in the geometry and thus only have one flat source region within them, so this method always returns 1. <simplesect kind="return"><para>the number of FSRs in this cell </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.h" line="128" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.cpp" bodystart="304" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="classCellBasic_1a28315145c6f60f50b2fae3c69b0a04ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CellBasic::setNumRings</definition>
        <argsstring>(short int num_rings)</argsstring>
        <name>setNumRings</name>
        <param>
          <type>short int</type>
          <declname>num_rings</declname>
        </param>
        <briefdescription>
<para>Set the cell&apos;s number of rings. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num_rings</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of rings in this cell </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.h" line="130" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.cpp" bodystart="313" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="classCellBasic_1af54bd9a6800172fc1da9d1d948e8d1e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CellBasic::setNumSectors</definition>
        <argsstring>(short int num_sectors)</argsstring>
        <name>setNumSectors</name>
        <param>
          <type>short int</type>
          <declname>num_sectors</declname>
        </param>
        <briefdescription>
<para>Set the cell&apos;s number of sectors. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num_sectors</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of sectors in this cell </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.h" line="131" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.cpp" bodystart="326" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="classCellBasic_1a11467ff4cc874cb9688ff12feef184a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCellBasic" kindref="compound">CellBasic</ref> *</type>
        <definition>CellBasic * CellBasic::clone</definition>
        <argsstring>()</argsstring>
        <name>clone</name>
        <briefdescription>
<para>Create a duplicate of the cellbasic. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a pointer to the clone </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.h" line="132" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.cpp" bodystart="342" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="classCellBasic_1a68bcdce0e270b6b439ba878a0694d5b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classCellBasic" kindref="compound">CellBasic</ref> * &gt;</type>
        <definition>std::vector&lt; CellBasic * &gt; CellBasic::subdivideCell</definition>
        <argsstring>()</argsstring>
        <name>subdivideCell</name>
        <briefdescription>
<para>Subdivides a cells into rings and sectors. </para>        </briefdescription>
        <detaileddescription>
<para>This method uses the <ref refid="classCell" kindref="compound">Cell</ref>&apos;s clone method to produce a vector of new cells, each representing a subdivision of this cell into rings and sectors. <simplesect kind="return"><para>a vector of <ref refid="classCell" kindref="compound">Cell</ref> pointers to the new subdivided cells </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.h" line="133" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.cpp" bodystart="579" bodyend="583"/>
      </memberdef>
      <memberdef kind="function" id="classCellBasic_1a7c9a65e73c5c9004c2b75f40ab19e4b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string CellBasic::toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <reimplements refid="classCell_1a4a84efc6a82f7abe42d9a6dc990c70e6">toString</reimplements>
        <briefdescription>
<para>Convert this cellbasic&apos;s attributes to a string format. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a character array of this cellbasic&apos;s attributes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.h" line="135" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.cpp" bodystart="589" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="classCellBasic_1a8a4daeca3487c62cfd7251ccb9e22847" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void CellBasic::printString</definition>
        <argsstring>()</argsstring>
        <name>printString</name>
        <reimplements refid="classCell_1af53a3407201aaaebf593939e1b7a69fb">printString</reimplements>
        <briefdescription>
<para>Prints a string representation of all of the cellbasic&apos;s objects to the console. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.h" line="136" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.cpp" bodystart="614" bodyend="616"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a cell filled with a material. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>CellBasic</label>
        <link refid="classCellBasic"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Cell</label>
        <link refid="classCell"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>CellBasic</label>
        <link refid="classCellBasic"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Cell</label>
        <link refid="classCell"/>
      </node>
    </collaborationgraph>
    <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.h" line="104" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Cell.h" bodystart="104" bodyend="137"/>
    <listofallmembers>
      <member refid="classCell_1a479098cae5775f5070b63b9ef7abbb04" prot="protected" virt="non-virtual"><scope>CellBasic</scope><name>_cell_type</name></member>
      <member refid="classCell_1aa028169032e0edead76bde80f7ff3c1f" prot="protected" virt="non-virtual"><scope>CellBasic</scope><name>_clone_n</name></member>
      <member refid="classCell_1af45cbf64248efeb49f5df298a8abaabc" prot="protected" virt="non-virtual"><scope>CellBasic</scope><name>_id</name></member>
      <member refid="classCellBasic_1a5bea0b9dd86c3bc9e9216ef53063f042" prot="private" virt="non-virtual"><scope>CellBasic</scope><name>_material</name></member>
      <member refid="classCell_1a73b3f587dfefe93c9764b9fdcc772710" prot="protected" virt="non-virtual"><scope>CellBasic</scope><name>_n</name></member>
      <member refid="classCellBasic_1ac3a282e0b386b2eef01b5ddd1f8694ee" prot="private" virt="non-virtual"><scope>CellBasic</scope><name>_num_rings</name></member>
      <member refid="classCellBasic_1a62b686f3f27bca6f3fa1bbe26d618207" prot="private" virt="non-virtual"><scope>CellBasic</scope><name>_num_sectors</name></member>
      <member refid="classCellBasic_1a7b021bfd21e7e545027df5122f5a2022" prot="private" virt="non-virtual"><scope>CellBasic</scope><name>_rings</name></member>
      <member refid="classCellBasic_1a80abfbfc39a72c6c89b3769487b2d7b9" prot="private" virt="non-virtual"><scope>CellBasic</scope><name>_sectors</name></member>
      <member refid="classCellBasic_1ae1ba95b6541ac5ed2df946fc14e6f0a9" prot="private" virt="non-virtual"><scope>CellBasic</scope><name>_subcells</name></member>
      <member refid="classCell_1ac43ed5fa7607eb5ca51b71c519dc67bf" prot="protected" virt="non-virtual"><scope>CellBasic</scope><name>_surfaces</name></member>
      <member refid="classCell_1aba78515e347a8dad627832c71b8bc2fa" prot="protected" virt="non-virtual"><scope>CellBasic</scope><name>_uid</name></member>
      <member refid="classCell_1a1672521c43143394c114df1ca5e52dbc" prot="protected" virt="non-virtual"><scope>CellBasic</scope><name>_universe</name></member>
      <member refid="classCell_1aa3dc5df3090ba776ea817b5a8385616b" prot="public" virt="non-virtual"><scope>CellBasic</scope><name>addSurface</name></member>
      <member refid="classCell_1a394510643e8664cf12b5efaf5cb99f71" prot="public" virt="non-virtual"><scope>CellBasic</scope><name>Cell</name></member>
      <member refid="classCell_1a42507131912fad0ec04a7c398456322a" prot="public" virt="non-virtual"><scope>CellBasic</scope><name>Cell</name></member>
      <member refid="classCellBasic_1ad670ef7ec7bece7b8a057f7e3e511919" prot="public" virt="non-virtual"><scope>CellBasic</scope><name>CellBasic</name></member>
      <member refid="classCell_1a89c95a180daff341176d78c5d573da53" prot="public" virt="non-virtual"><scope>CellBasic</scope><name>cellContainsCoords</name></member>
      <member refid="classCell_1a7ccb9a3084719a36a170bed2cd48a593" prot="public" virt="non-virtual"><scope>CellBasic</scope><name>cellContainsPoint</name></member>
      <member refid="classCellBasic_1a11467ff4cc874cb9688ff12feef184a6" prot="public" virt="non-virtual"><scope>CellBasic</scope><name>clone</name></member>
      <member refid="classCell_1a5ee7d2b6a1ed18804d207f937e3defaf" prot="public" virt="non-virtual"><scope>CellBasic</scope><name>getId</name></member>
      <member refid="classCellBasic_1a72c5170a7a99499874bf96eea3da4148" prot="public" virt="non-virtual"><scope>CellBasic</scope><name>getMaterial</name></member>
      <member refid="classCellBasic_1a20995e53c5742d2e27a9ee32d78f7302" prot="public" virt="virtual"><scope>CellBasic</scope><name>getNumFSRs</name></member>
      <member refid="classCellBasic_1afb947abd7222748cee6af104845506c3" prot="public" virt="non-virtual"><scope>CellBasic</scope><name>getNumRings</name></member>
      <member refid="classCellBasic_1a34740bd6ab41262ce6cf929e05ea9027" prot="public" virt="non-virtual"><scope>CellBasic</scope><name>getNumSectors</name></member>
      <member refid="classCell_1a7c3defd6e47e454df12891d2f9c90405" prot="public" virt="non-virtual"><scope>CellBasic</scope><name>getNumSurfaces</name></member>
      <member refid="classCell_1a212ae4536a8da3258fcdb5b3ab36a3a0" prot="public" virt="non-virtual"><scope>CellBasic</scope><name>getSurfaces</name></member>
      <member refid="classCell_1af0421cc4cbb034947b2b7ec18c6df7d0" prot="public" virt="non-virtual"><scope>CellBasic</scope><name>getType</name></member>
      <member refid="classCell_1a27be5077c04eaf21747b1e6101495ba4" prot="public" virt="non-virtual"><scope>CellBasic</scope><name>getUid</name></member>
      <member refid="classCell_1af4af1af3638b0c9a64d0b8f3f12f0e30" prot="public" virt="non-virtual"><scope>CellBasic</scope><name>getUniverse</name></member>
      <member refid="classCell_1adf41aafa99278a759d8d6ae826c7330e" prot="public" virt="non-virtual"><scope>CellBasic</scope><name>minSurfaceDist</name></member>
      <member refid="classCellBasic_1a8a4daeca3487c62cfd7251ccb9e22847" prot="public" virt="virtual"><scope>CellBasic</scope><name>printString</name></member>
      <member refid="classCellBasic_1a1d3dbb92420b698434a5658a054d9b65" prot="private" virt="non-virtual"><scope>CellBasic</scope><name>ringify</name></member>
      <member refid="classCellBasic_1acad02881cef4068e6a74d05770f38bfc" prot="private" virt="non-virtual"><scope>CellBasic</scope><name>sectorize</name></member>
      <member refid="classCellBasic_1a28315145c6f60f50b2fae3c69b0a04ac" prot="public" virt="non-virtual"><scope>CellBasic</scope><name>setNumRings</name></member>
      <member refid="classCellBasic_1af54bd9a6800172fc1da9d1d948e8d1e4" prot="public" virt="non-virtual"><scope>CellBasic</scope><name>setNumSectors</name></member>
      <member refid="classCell_1ad6a1e2e87f6708663dddb370d670a067" prot="public" virt="non-virtual"><scope>CellBasic</scope><name>setSurfacePointer</name></member>
      <member refid="classCell_1aaf4b5dcb6f7e1dc7121f6bdf5f69aa09" prot="public" virt="non-virtual"><scope>CellBasic</scope><name>setUniverse</name></member>
      <member refid="classCellBasic_1a68bcdce0e270b6b439ba878a0694d5b1" prot="public" virt="non-virtual"><scope>CellBasic</scope><name>subdivideCell</name></member>
      <member refid="classCellBasic_1a7c9a65e73c5c9004c2b75f40ab19e4b3" prot="public" virt="virtual"><scope>CellBasic</scope><name>toString</name></member>
      <member refid="classCell_1a9fa559f7a28e2b4336c6879ca09304d8" prot="public" virt="virtual"><scope>CellBasic</scope><name>~Cell</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
