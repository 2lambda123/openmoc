<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="classMaterial" kind="class" prot="public">
    <compoundname>Material</compoundname>
    <includes refid="Material_8h" local="yes">openmoc/src/host/Material.h</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classMaterial_1aa98938c954a6d4dae8c56489c1805546" prot="private" static="yes" mutable="no">
        <type>int</type>
        <definition>int Material::_n</definition>
        <argsstring></argsstring>
        <name>_n</name>
        <initializer> 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A static counter for the number of materials in a simulation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="44" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classMaterial_1a489d35359a61b0e444bca0704a1b21c0" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Material::_uid</definition>
        <argsstring></argsstring>
        <name>_uid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A monotonically increasing unique ID for each material created </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="47" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMaterial_1aa1b226cc97c3dd0b441e850c3ce29fb7" prot="private" static="no" mutable="no">
        <type>short int</type>
        <definition>short int Material::_id</definition>
        <argsstring></argsstring>
        <name>_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A user-defined ID for each material created </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="50" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMaterial_1a9f17b42cb5b716d8bba238bc78e1e5c8" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Material::_num_groups</definition>
        <argsstring></argsstring>
        <name>_num_groups</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of energy groups </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="53" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMaterial_1ac04ce0b41c010c9c70355e5337a5152f" prot="private" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Material::_sigma_t</definition>
        <argsstring></argsstring>
        <name>_sigma_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An array of the total cross-sections for each energy group </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="56" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMaterial_1a9bb42da5d52a13dab49f3af4a9192054" prot="private" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Material::_sigma_a</definition>
        <argsstring></argsstring>
        <name>_sigma_a</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An array of the absorption cross-sections for each energy group </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="59" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMaterial_1a4190159c978abfa9e19eb648ea8243ce" prot="private" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Material::_sigma_s</definition>
        <argsstring></argsstring>
        <name>_sigma_s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A 2D array of the scattering cross-section matrix. The first index is row number and second index is column number </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="63" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMaterial_1a6d14ed0c2ba0bc45dec73286f3c75aa0" prot="private" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Material::_sigma_f</definition>
        <argsstring></argsstring>
        <name>_sigma_f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An array of the fission cross-sections for each energy group </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="66" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMaterial_1a80d0f35d57b0594970bdd2e06d172423" prot="private" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Material::_nu_sigma_f</definition>
        <argsstring></argsstring>
        <name>_nu_sigma_f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An array of the fission cross-sections multiplied by nu <formula id="0">$ \nu $</formula> for each energy group </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="70" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMaterial_1a518ab62d7a6ab63fe476760b7ff1f0bf" prot="private" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Material::_chi</definition>
        <argsstring></argsstring>
        <name>_chi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An array of the chi <formula id="1">$ \chi $</formula> values for each energy group </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="73" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMaterial_1a284659bd33a09567ac68e94199e9ab57" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Material::_data_aligned</definition>
        <argsstring></argsstring>
        <name>_data_aligned</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A boolean to indicate whether or not the data has been allocated to be vector aligned for SIMD instructions </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="77" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMaterial_1a2968c1e2955efb21e03a6f426e6981bb" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Material::_num_vector_groups</definition>
        <argsstring></argsstring>
        <name>_num_vector_groups</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of vector widths needed to fit all energy groups </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="80" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classMaterial_1a3aeffba703966e0c9c971209455f77a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Material::Material</definition>
        <argsstring>(short int id)</argsstring>
        <name>Material</name>
        <param>
          <type>short int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Constructor sets the ID and unique ID for the material. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>the user-defined id for the material </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="83" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="29" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1a2c19452d71f54075df8f5405b03129f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Material::~Material</definition>
        <argsstring>()</argsstring>
        <name>~Material</name>
        <briefdescription>
<para>Destructor deletes all cross-section data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="84" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="51" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1a95de130b248a20f9237793ab92e494a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Material::getUid</definition>
        <argsstring>() const </argsstring>
        <name>getUid</name>
        <briefdescription>
<para>Return the material&apos;s unique ID. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the material&apos;s unique ID </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="86" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="101" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1adf33854b14118543ec16888b33595cc9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>short int</type>
        <definition>short int Material::getId</definition>
        <argsstring>() const </argsstring>
        <name>getId</name>
        <briefdescription>
<para>Return the material&apos;s user-defined ID. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the material&apos;s user-defined ID </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="87" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="109" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1a50683c7b7c62f1473809c51f37af5a13" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Material::getNumEnergyGroups</definition>
        <argsstring>() const </argsstring>
        <name>getNumEnergyGroups</name>
        <briefdescription>
<para>Returns the number of energy groups for this material&apos;s nuclear data. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of energy groups </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="88" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="118" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1a79a0abbbfb65002dd7e59e6e1d871faa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double *</type>
        <definition>double * Material::getSigmaT</definition>
        <argsstring>()</argsstring>
        <name>getSigmaT</name>
        <briefdescription>
<para>Return the array of the material&apos;s total cross-sections. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the pointer to the material&apos;s array of total cross-sections </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="89" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="127" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1ada8e6ff3194dc56f5c9ebd6947b20418" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double *</type>
        <definition>double * Material::getSigmaA</definition>
        <argsstring>()</argsstring>
        <name>getSigmaA</name>
        <briefdescription>
<para>Return the array of the material&apos;s absorption cross-sections. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the pointer to the material&apos;s array of absorption cross-sections </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="90" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="140" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1a8c771a7e51ac3a9323226f91cad432a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double *</type>
        <definition>double * Material::getSigmaS</definition>
        <argsstring>()</argsstring>
        <name>getSigmaS</name>
        <briefdescription>
<para>Return the array of the material&apos;s scattering cross-section matrix. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the pointer to the material&apos;s array of scattering cross-sections </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="91" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="153" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1a36a0b94a5b3d19add9582e9dba9fce2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double *</type>
        <definition>double * Material::getSigmaF</definition>
        <argsstring>()</argsstring>
        <name>getSigmaF</name>
        <briefdescription>
<para>Return the array of the material&apos;s fission cross-sections. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the pointer to the material&apos;s array of fission cross-sections </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="92" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="166" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1ab9dfbf1074438717d8699601f5bb1339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double *</type>
        <definition>double * Material::getNuSigmaF</definition>
        <argsstring>()</argsstring>
        <name>getNuSigmaF</name>
        <briefdescription>
<para>Return the array of the material&apos;s fission cross-sections multiplied by nu <formula id="0">$ \nu $</formula>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the pointer to the material&apos;s array of fission cross-sections multiplied by nu <formula id="0">$ \nu $</formula> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="93" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="181" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1a542b94d86be7e2c63b4aec8cd4dde1cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double *</type>
        <definition>double * Material::getChi</definition>
        <argsstring>()</argsstring>
        <name>getChi</name>
        <briefdescription>
<para>Return the array of the material&apos;s chi <formula id="1">$ \chi $</formula>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the pointer to the material&apos;s array of chi <formula id="1">$ \chi $</formula> values </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="94" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="194" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1a2e0a8759604823c08a695cce843120d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Material::isDataAligned</definition>
        <argsstring>()</argsstring>
        <name>isDataAligned</name>
        <briefdescription>
<para>Returns true if the data is vector aligned, false otherwise (default). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Whether or not the materials data is vector aligned </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="95" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="207" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1aafa74846dbee967669b0017bf61c724e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Material::getNumVectorGroups</definition>
        <argsstring>()</argsstring>
        <name>getNumVectorGroups</name>
        <briefdescription>
<para>Returns the rounded up number of energy groups to fill an integral number of vector lengths. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of vector-aligned energy groups </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="96" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="217" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1a5650368fddfd9793205bf6b05f25ee60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Material::setNumEnergyGroups</definition>
        <argsstring>(const int num_groups)</argsstring>
        <name>setNumEnergyGroups</name>
        <param>
          <type>const int</type>
          <declname>num_groups</declname>
        </param>
        <briefdescription>
<para>Set the number of energy groups for this material. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num_groups</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of energy groups. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="98" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="227" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1a2949b239adb57bd0053ab9e4e5bd9d65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Material::setSigmaT</definition>
        <argsstring>(double *xs, int num_groups)</argsstring>
        <name>setSigmaT</name>
        <param>
          <type>double *</type>
          <declname>xs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_groups</declname>
        </param>
        <briefdescription>
<para>Set the material&apos;s array of total cross-sections. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xs</parametername>
</parameternamelist>
<parameterdescription>
<para>the array of total cross-sections </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_groups</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of energy groups </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="99" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="294" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1a73890393a3c599dd9697af4af9b5a5f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Material::setSigmaA</definition>
        <argsstring>(double *xs, int num_groups)</argsstring>
        <name>setSigmaA</name>
        <param>
          <type>double *</type>
          <declname>xs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_groups</declname>
        </param>
        <briefdescription>
<para>Set the material&apos;s array of absorption scattering cross-sections. </para>        </briefdescription>
        <detaileddescription>
<para>This method is intended to be called from <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xs</parametername>
</parameternamelist>
<parameterdescription>
<para>the array of absorption scattering cross-sections </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_groups</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of energy groups </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="100" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="326" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1acebc8e4e35bbcf9a9e6d3f183a1e7568" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Material::setSigmaS</definition>
        <argsstring>(double *xs, int num_groups)</argsstring>
        <name>setSigmaS</name>
        <param>
          <type>double *</type>
          <declname>xs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_groups</declname>
          <defname>num_groups_squared</defname>
        </param>
        <briefdescription>
<para>Set the material&apos;s 2D array of scattering cross-sections. </para>        </briefdescription>
        <detaileddescription>
<para>This assumes that the scattering matrix passed in has the standard notation: the ij element is for scattering from group i to j. For efficient caching of the elements of this matrix during fixed source iteration, the matrix transpose is what is actually stored in the material <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xs</parametername>
</parameternamelist>
<parameterdescription>
<para>the array of scattering cross-sections </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_groups_squared</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of energy groups squared </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="101" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="364" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1a3240f3778b1a6690a5c3fc008ce79cca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Material::setSigmaF</definition>
        <argsstring>(double *xs, int num_groups)</argsstring>
        <name>setSigmaF</name>
        <param>
          <type>double *</type>
          <declname>xs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_groups</declname>
        </param>
        <briefdescription>
<para>Set the material&apos;s array of fission cross-sections. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xs</parametername>
</parameternamelist>
<parameterdescription>
<para>the array of fission cross-sections </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_groups</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of energy groups </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="102" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="402" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1a5a330fb2c6408c1d60ec9516337a65fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Material::setNuSigmaF</definition>
        <argsstring>(double *xs, int num_groups)</argsstring>
        <name>setNuSigmaF</name>
        <param>
          <type>double *</type>
          <declname>xs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_groups</declname>
        </param>
        <briefdescription>
<para>Set the material&apos;s array of fission cross-sections multiplied by <formula id="0">$ \nu $</formula>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xs</parametername>
</parameternamelist>
<parameterdescription>
<para>the array of fission cross-sections multiplied by nu <formula id="0">$ \nu $</formula> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_groups</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of energy groups </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="103" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="436" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1a114afbe76bed5364472bf9a46d72adea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Material::setChi</definition>
        <argsstring>(double *xs, int num_groups)</argsstring>
        <name>setChi</name>
        <param>
          <type>double *</type>
          <declname>xs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_groups</declname>
        </param>
        <briefdescription>
<para>Set the material&apos;s array of <formula id="1">$ \chi $</formula> values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xs</parametername>
</parameternamelist>
<parameterdescription>
<para>the array of chi <formula id="1">$ \chi $</formula> values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_groups</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of energy groups </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="104" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="469" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1a61fd26dde452e699b2b2531b993d2cab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Material::setSigmaTByGroup</definition>
        <argsstring>(double xs, int group)</argsstring>
        <name>setSigmaTByGroup</name>
        <param>
          <type>double</type>
          <declname>xs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Set the material&apos;s total cross-section for some energy group. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xs</parametername>
</parameternamelist>
<parameterdescription>
<para>the total cross-section ( <formula id="5">$ \Sigma_t [cm^1] $</formula>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>group</parametername>
</parameternamelist>
<parameterdescription>
<para>the energy group </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="106" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="310" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1a4bedbd3883a56bf47b903417b34676fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Material::setSigmaAByGroup</definition>
        <argsstring>(double xs, int group)</argsstring>
        <name>setSigmaAByGroup</name>
        <param>
          <type>double</type>
          <declname>xs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Set the material&apos;s absorption cross-section for some energy group. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xs</parametername>
</parameternamelist>
<parameterdescription>
<para>the absorption cross-section ( <formula id="6">$ \Sigma_a [cm^1] $</formula>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>group</parametername>
</parameternamelist>
<parameterdescription>
<para>the energy group </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="107" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="342" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1a9a5b3e747ee51343327b22356549bf20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Material::setSigmaFByGroup</definition>
        <argsstring>(double xs, int group)</argsstring>
        <name>setSigmaFByGroup</name>
        <param>
          <type>double</type>
          <declname>xs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Set the material&apos;s fission cross-section for some energy group. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xs</parametername>
</parameternamelist>
<parameterdescription>
<para>the fission cross-section ( <formula id="8">$ \Sigma_f [cm^1] $</formula>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>group</parametername>
</parameternamelist>
<parameterdescription>
<para>the energy group </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="108" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="418" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1a4929d58a0e80b155cd1d115edbc15819" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Material::setNuSigmaFByGroup</definition>
        <argsstring>(double xs, int group)</argsstring>
        <name>setNuSigmaFByGroup</name>
        <param>
          <type>double</type>
          <declname>xs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Set the material&apos;s fission cross-section multiplied by <formula id="0">$ \nu $</formula> for some energy group. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xs</parametername>
</parameternamelist>
<parameterdescription>
<para>the fission cross-section ( <formula id="9">$ \nu\Sigma_f [cm^1] $</formula>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>group</parametername>
</parameternamelist>
<parameterdescription>
<para>the energy group </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="109" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="453" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1afa089d512b06b16196cd327502862689" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Material::setSigmaSByGroup</definition>
        <argsstring>(double xs, int group1, int group2)</argsstring>
        <name>setSigmaSByGroup</name>
        <param>
          <type>double</type>
          <declname>xs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>group1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>group2</declname>
        </param>
        <briefdescription>
<para>Set the material&apos;s scattering cross-section for some energy group. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xs</parametername>
</parameternamelist>
<parameterdescription>
<para>the scattering cross-section ( <formula id="7">$ \Sigma_s [cm^1] $</formula>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>group1</parametername>
</parameternamelist>
<parameterdescription>
<para>the row index in the scattering matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>group2</parametername>
</parameternamelist>
<parameterdescription>
<para>the column index in the scattering matrix </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="110" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="385" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1a05006775ab7559d41479842043fd2e33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Material::setChiByGroup</definition>
        <argsstring>(double xs, int group)</argsstring>
        <name>setChiByGroup</name>
        <param>
          <type>double</type>
          <declname>xs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Set the material&apos;s chi value for some energy group. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xs</parametername>
</parameternamelist>
<parameterdescription>
<para>the chi value ( <formula id="10">$ \Chi $</formula>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>group</parametername>
</parameternamelist>
<parameterdescription>
<para>the energy group </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="111" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="486" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1a2defb57596c868a773cea7c094fe61f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Material::checkSigmaT</definition>
        <argsstring>()</argsstring>
        <name>checkSigmaT</name>
        <briefdescription>
<para>Checks if the total cross-section for this material is equal to the absorption plus scattering cross-sections for all energy groups. </para>        </briefdescription>
        <detaileddescription>
<para>If the total cross-section does not equal the absorption plus scattering cross-section within SIGMA_T_THRESH (defined in openmoc/src/host/configurations.h) then this method exits OpenMOC. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="114" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="505" bodyend="543"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1a72f180d85439497ffc732718166e5634" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Material::toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <briefdescription>
<para>Converts this material&apos;s attributes to a character array representation. </para>        </briefdescription>
        <detaileddescription>
<para>The character array returned includes the user-defined ID, and each of the absorption, total, fission, nu multiplied by fission and scattering cross-sections and chi for all energy groups. <simplesect kind="return"><para>character array of this member&apos;s attributes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="115" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="555" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1a5901b75e048d7b55616a3f53a983390e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Material::printString</definition>
        <argsstring>()</argsstring>
        <name>printString</name>
        <briefdescription>
<para>Prints a string representation of all of the material&apos;s objects to the console. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="116" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="609" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="classMaterial_1a68937e22f1c8369a4f03506c8a356cb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Material::alignData</definition>
        <argsstring>()</argsstring>
        <name>alignData</name>
        <briefdescription>
<para>Aligns the cross-section data structures. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="118" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.cpp" bodystart="617" bodyend="695"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The material class represents a unique material and its relevant nuclear data (ie, multigroup cross-sections) for neutron transport. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="56">
        <label>Material</label>
        <link refid="classMaterial"/>
      </node>
    </collaborationgraph>
    <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" line="39" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Material.h" bodystart="39" bodyend="119"/>
    <listofallmembers>
      <member refid="classMaterial_1a518ab62d7a6ab63fe476760b7ff1f0bf" prot="private" virt="non-virtual"><scope>Material</scope><name>_chi</name></member>
      <member refid="classMaterial_1a284659bd33a09567ac68e94199e9ab57" prot="private" virt="non-virtual"><scope>Material</scope><name>_data_aligned</name></member>
      <member refid="classMaterial_1aa1b226cc97c3dd0b441e850c3ce29fb7" prot="private" virt="non-virtual"><scope>Material</scope><name>_id</name></member>
      <member refid="classMaterial_1aa98938c954a6d4dae8c56489c1805546" prot="private" virt="non-virtual"><scope>Material</scope><name>_n</name></member>
      <member refid="classMaterial_1a80d0f35d57b0594970bdd2e06d172423" prot="private" virt="non-virtual"><scope>Material</scope><name>_nu_sigma_f</name></member>
      <member refid="classMaterial_1a9f17b42cb5b716d8bba238bc78e1e5c8" prot="private" virt="non-virtual"><scope>Material</scope><name>_num_groups</name></member>
      <member refid="classMaterial_1a2968c1e2955efb21e03a6f426e6981bb" prot="private" virt="non-virtual"><scope>Material</scope><name>_num_vector_groups</name></member>
      <member refid="classMaterial_1a9bb42da5d52a13dab49f3af4a9192054" prot="private" virt="non-virtual"><scope>Material</scope><name>_sigma_a</name></member>
      <member refid="classMaterial_1a6d14ed0c2ba0bc45dec73286f3c75aa0" prot="private" virt="non-virtual"><scope>Material</scope><name>_sigma_f</name></member>
      <member refid="classMaterial_1a4190159c978abfa9e19eb648ea8243ce" prot="private" virt="non-virtual"><scope>Material</scope><name>_sigma_s</name></member>
      <member refid="classMaterial_1ac04ce0b41c010c9c70355e5337a5152f" prot="private" virt="non-virtual"><scope>Material</scope><name>_sigma_t</name></member>
      <member refid="classMaterial_1a489d35359a61b0e444bca0704a1b21c0" prot="private" virt="non-virtual"><scope>Material</scope><name>_uid</name></member>
      <member refid="classMaterial_1a68937e22f1c8369a4f03506c8a356cb6" prot="public" virt="non-virtual"><scope>Material</scope><name>alignData</name></member>
      <member refid="classMaterial_1a2defb57596c868a773cea7c094fe61f6" prot="public" virt="non-virtual"><scope>Material</scope><name>checkSigmaT</name></member>
      <member refid="classMaterial_1a542b94d86be7e2c63b4aec8cd4dde1cb" prot="public" virt="non-virtual"><scope>Material</scope><name>getChi</name></member>
      <member refid="classMaterial_1adf33854b14118543ec16888b33595cc9" prot="public" virt="non-virtual"><scope>Material</scope><name>getId</name></member>
      <member refid="classMaterial_1a50683c7b7c62f1473809c51f37af5a13" prot="public" virt="non-virtual"><scope>Material</scope><name>getNumEnergyGroups</name></member>
      <member refid="classMaterial_1aafa74846dbee967669b0017bf61c724e" prot="public" virt="non-virtual"><scope>Material</scope><name>getNumVectorGroups</name></member>
      <member refid="classMaterial_1ab9dfbf1074438717d8699601f5bb1339" prot="public" virt="non-virtual"><scope>Material</scope><name>getNuSigmaF</name></member>
      <member refid="classMaterial_1ada8e6ff3194dc56f5c9ebd6947b20418" prot="public" virt="non-virtual"><scope>Material</scope><name>getSigmaA</name></member>
      <member refid="classMaterial_1a36a0b94a5b3d19add9582e9dba9fce2c" prot="public" virt="non-virtual"><scope>Material</scope><name>getSigmaF</name></member>
      <member refid="classMaterial_1a8c771a7e51ac3a9323226f91cad432a0" prot="public" virt="non-virtual"><scope>Material</scope><name>getSigmaS</name></member>
      <member refid="classMaterial_1a79a0abbbfb65002dd7e59e6e1d871faa" prot="public" virt="non-virtual"><scope>Material</scope><name>getSigmaT</name></member>
      <member refid="classMaterial_1a95de130b248a20f9237793ab92e494a3" prot="public" virt="non-virtual"><scope>Material</scope><name>getUid</name></member>
      <member refid="classMaterial_1a2e0a8759604823c08a695cce843120d4" prot="public" virt="non-virtual"><scope>Material</scope><name>isDataAligned</name></member>
      <member refid="classMaterial_1a3aeffba703966e0c9c971209455f77a9" prot="public" virt="non-virtual"><scope>Material</scope><name>Material</name></member>
      <member refid="classMaterial_1a5901b75e048d7b55616a3f53a983390e" prot="public" virt="non-virtual"><scope>Material</scope><name>printString</name></member>
      <member refid="classMaterial_1a114afbe76bed5364472bf9a46d72adea" prot="public" virt="non-virtual"><scope>Material</scope><name>setChi</name></member>
      <member refid="classMaterial_1a05006775ab7559d41479842043fd2e33" prot="public" virt="non-virtual"><scope>Material</scope><name>setChiByGroup</name></member>
      <member refid="classMaterial_1a5650368fddfd9793205bf6b05f25ee60" prot="public" virt="non-virtual"><scope>Material</scope><name>setNumEnergyGroups</name></member>
      <member refid="classMaterial_1a5a330fb2c6408c1d60ec9516337a65fa" prot="public" virt="non-virtual"><scope>Material</scope><name>setNuSigmaF</name></member>
      <member refid="classMaterial_1a4929d58a0e80b155cd1d115edbc15819" prot="public" virt="non-virtual"><scope>Material</scope><name>setNuSigmaFByGroup</name></member>
      <member refid="classMaterial_1a73890393a3c599dd9697af4af9b5a5f0" prot="public" virt="non-virtual"><scope>Material</scope><name>setSigmaA</name></member>
      <member refid="classMaterial_1a4bedbd3883a56bf47b903417b34676fc" prot="public" virt="non-virtual"><scope>Material</scope><name>setSigmaAByGroup</name></member>
      <member refid="classMaterial_1a3240f3778b1a6690a5c3fc008ce79cca" prot="public" virt="non-virtual"><scope>Material</scope><name>setSigmaF</name></member>
      <member refid="classMaterial_1a9a5b3e747ee51343327b22356549bf20" prot="public" virt="non-virtual"><scope>Material</scope><name>setSigmaFByGroup</name></member>
      <member refid="classMaterial_1acebc8e4e35bbcf9a9e6d3f183a1e7568" prot="public" virt="non-virtual"><scope>Material</scope><name>setSigmaS</name></member>
      <member refid="classMaterial_1afa089d512b06b16196cd327502862689" prot="public" virt="non-virtual"><scope>Material</scope><name>setSigmaSByGroup</name></member>
      <member refid="classMaterial_1a2949b239adb57bd0053ab9e4e5bd9d65" prot="public" virt="non-virtual"><scope>Material</scope><name>setSigmaT</name></member>
      <member refid="classMaterial_1a61fd26dde452e699b2b2531b993d2cab" prot="public" virt="non-virtual"><scope>Material</scope><name>setSigmaTByGroup</name></member>
      <member refid="classMaterial_1a72f180d85439497ffc732718166e5634" prot="public" virt="non-virtual"><scope>Material</scope><name>toString</name></member>
      <member refid="classMaterial_1a2c19452d71f54075df8f5405b03129f4" prot="public" virt="virtual"><scope>Material</scope><name>~Material</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
