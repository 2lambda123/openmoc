<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="Solver_8cpp" kind="file">
    <compoundname>Solver.cpp</compoundname>
    <includes refid="Solver_8h" local="yes">Solver.h</includes>
    <incdepgraph>
      <node id="91">
        <label>/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Solver.cpp</label>
        <link refid="Solver.cpp"/>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>Solver.h</label>
        <link refid="Solver_8h"/>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Solver_8h" kindref="compound" tooltip="The Solver class.">Solver.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><ref refid="classSolver_1a950a0ef510e9eb4a92984473c668c198" kindref="member" tooltip="Constructor initializes array pointers for tracks and materials.">Solver::Solver</ref>(<ref refid="classGeometry" kindref="compound" tooltip="The master class containing references to all geometry-related objects (surfaces, cells...">Geometry</ref>*<sp/>geometry,<sp/><ref refid="classTrackGenerator" kindref="compound" tooltip="The track generator is dedicated to generating tracks which cyclically wrap across the geometry...">TrackGenerator</ref>*<sp/>track_generator)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Default<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a5b17e508bd721f49a382673efcd8ae1b" kindref="member">_num_materials</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1ab18db0ed64afb0dade6054a7a08ae3c4" kindref="member">_num_groups</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a9f0fd3a842870803f27c47ed51a83039" kindref="member">_num_azim</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a84ce3dbf9e3c4a86773161e7c92b1da1" kindref="member">_polar_times_groups</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a2e17e8aa8a11d4300e89179984ca4347" kindref="member">_num_FSRs</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a84372339d7c2b5da3f07bc8b0822f42f" kindref="member">_FSR_volumes</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a9c124fee8429fc5e44649fbb22f930b4" kindref="member">_FSR_materials</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a4cf19c17278e367f44c6e735e437103d" kindref="member">_quad</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a7f7349dc153dd9e728697c922cf7c052" kindref="member">_track_generator</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1ae323198b6be6ddc402c53784c5a89b7f" kindref="member">_geometry</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a775ed41fc1268312c8fb25ec994e1351" kindref="member">_tracks</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a02f013a25d984fa74aabc4c34f829960" kindref="member">_azim_weights</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a8407ebcfee31a54a67e6d5ca2e3d4e6b" kindref="member">_polar_weights</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1adcfcfe1758affc74780907584fc7beaf" kindref="member">_boundary_flux</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1ace3972879027f76a99f24fd01618d123" kindref="member">_boundary_leakage</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a60df3fd1a13667c294b1519d59a00b87" kindref="member">_scalar_flux</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a63b1f8d78d02dc5a0f2dc392597cc5af" kindref="member">_fission_sources</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a524973fbca3ad3ace58b122c01b404f0" kindref="member">_scatter_sources</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a935ab1926ea3d625d0c549c5f8595c07" kindref="member">_source</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1ad7d3233142b6798f9aea7330b221754c" kindref="member">_old_source</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1aff69bb3f354f5c598e1117e2a3515f1b" kindref="member">_reduced_source</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1af2285a2a6361ea1d351e3b8c55858c92" kindref="member">_source_residuals</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1ac6de9ad9091dae955848d83a91b0f3b5" kindref="member">_FSRs_to_powers</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a2ae997684ddbc16e2c8575cb6dcad788" kindref="member">_FSRs_to_pin_powers</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a1263a3948d7fe87874854460a3701d82" kindref="member">_interpolate_exponential</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a64ce3d9a61c55fa470b91b68497dd9d6" kindref="member">_prefactor_array</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geometry<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSolver_1a117012c7ecaf59b70fa6b489562acc65" kindref="member" tooltip="Sets the geometry for the solver.">setGeometry</ref>(geometry);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(track_generator<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSolver_1ac07cee2fe04515dc8e4d2980d567c4c5" kindref="member" tooltip="Sets the track generator with characteristic tracks for the solver.">setTrackGenerator</ref>(track_generator);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Default<sp/>polar<sp/>quadrature<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a3c8910d870254066e9ba89c75c3a1003" kindref="member">_quadrature_type</ref><sp/>=<sp/><ref refid="Quadrature_8h_1abaf5f877e7f8a13548058dcb876c4de1ad4a0df69114bffafe09dee44ca32d523" kindref="member">TABUCHI</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a49cc179a9f47c5ca5f6d19c954d680ad" kindref="member">_num_polar</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a5f9e45e5d2a93bc3b18ca2659b95ac6a" kindref="member">_two_times_num_polar</ref><sp/>=<sp/>2<sp/>*<sp/><ref refid="classSolver_1a49cc179a9f47c5ca5f6d19c954d680ad" kindref="member">_num_polar</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a06f3fd380731eb988cb2fc5232cb94b3" kindref="member">_num_iterations</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a4aa4d18f980bbb098f839835e5e2f35d" kindref="member">_source_convergence_thresh</ref><sp/>=<sp/>1E-3;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a1ce60126ba4fa0b05b08943ddd7cf295" kindref="member">_converged_source</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a3cab54ec3cb374d796180b94201276ec" kindref="member">_timer</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classTimer" kindref="compound" tooltip="The timer class is for timing and profiling regions of code.">Timer</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="classSolver_1aba52d3c92fafceb6fe39f937f2d73db3" kindref="member" tooltip="Destructor deletes arrays of boundary angular fluxes, scalar fluxes and sources for each flat source ...">Solver::~Solver</ref>()<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classSolver_1a84372339d7c2b5da3f07bc8b0822f42f" kindref="member">_FSR_volumes</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="classSolver_1a84372339d7c2b5da3f07bc8b0822f42f" kindref="member">_FSR_volumes</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classSolver_1a9c124fee8429fc5e44649fbb22f930b4" kindref="member">_FSR_materials</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="classSolver_1a9c124fee8429fc5e44649fbb22f930b4" kindref="member">_FSR_materials</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classSolver_1a8407ebcfee31a54a67e6d5ca2e3d4e6b" kindref="member">_polar_weights</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="classSolver_1a8407ebcfee31a54a67e6d5ca2e3d4e6b" kindref="member">_polar_weights</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classSolver_1adcfcfe1758affc74780907584fc7beaf" kindref="member">_boundary_flux</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="classSolver_1adcfcfe1758affc74780907584fc7beaf" kindref="member">_boundary_flux</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classSolver_1a60df3fd1a13667c294b1519d59a00b87" kindref="member">_scalar_flux</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="classSolver_1a60df3fd1a13667c294b1519d59a00b87" kindref="member">_scalar_flux</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classSolver_1a63b1f8d78d02dc5a0f2dc392597cc5af" kindref="member">_fission_sources</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="classSolver_1a63b1f8d78d02dc5a0f2dc392597cc5af" kindref="member">_fission_sources</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classSolver_1a524973fbca3ad3ace58b122c01b404f0" kindref="member">_scatter_sources</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="classSolver_1a524973fbca3ad3ace58b122c01b404f0" kindref="member">_scatter_sources</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classSolver_1a935ab1926ea3d625d0c549c5f8595c07" kindref="member">_source</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="classSolver_1a935ab1926ea3d625d0c549c5f8595c07" kindref="member">_source</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classSolver_1ad7d3233142b6798f9aea7330b221754c" kindref="member">_old_source</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="classSolver_1ad7d3233142b6798f9aea7330b221754c" kindref="member">_old_source</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classSolver_1aff69bb3f354f5c598e1117e2a3515f1b" kindref="member">_reduced_source</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="classSolver_1aff69bb3f354f5c598e1117e2a3515f1b" kindref="member">_reduced_source</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classSolver_1af2285a2a6361ea1d351e3b8c55858c92" kindref="member">_source_residuals</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="classSolver_1af2285a2a6361ea1d351e3b8c55858c92" kindref="member">_source_residuals</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classSolver_1ac6de9ad9091dae955848d83a91b0f3b5" kindref="member">_FSRs_to_powers</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="classSolver_1ac6de9ad9091dae955848d83a91b0f3b5" kindref="member">_FSRs_to_powers</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classSolver_1a2ae997684ddbc16e2c8575cb6dcad788" kindref="member">_FSRs_to_pin_powers</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="classSolver_1a2ae997684ddbc16e2c8575cb6dcad788" kindref="member">_FSRs_to_pin_powers</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classSolver_1a64ce3d9a61c55fa470b91b68497dd9d6" kindref="member">_prefactor_array</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="classSolver_1a64ce3d9a61c55fa470b91b68497dd9d6" kindref="member">_prefactor_array</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classSolver_1a4cf19c17278e367f44c6e735e437103d" kindref="member">_quad</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a4cf19c17278e367f44c6e735e437103d" kindref="member">_quad</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><ref refid="classGeometry" kindref="compound" tooltip="The master class containing references to all geometry-related objects (surfaces, cells...">Geometry</ref>*<sp/><ref refid="classSolver_1afd394d9603d0ceba175d96a53f54d7fa" kindref="member" tooltip="Returns a pointer to the geometry.">Solver::getGeometry</ref>()<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classSolver_1ae323198b6be6ddc402c53784c5a89b7f" kindref="member">_geometry</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a2fd6f336d08340583bd620a7f5694c90" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>return<sp/>the<sp/>solver&apos;s<sp/>geometry<sp/>since<sp/>it<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;has<sp/>not<sp/>yet<sp/>been<sp/>set&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classSolver_1ae323198b6be6ddc402c53784c5a89b7f" kindref="member">_geometry</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><ref refid="classTrackGenerator" kindref="compound" tooltip="The track generator is dedicated to generating tracks which cyclically wrap across the geometry...">TrackGenerator</ref>*<sp/><ref refid="classSolver_1ac47a004e88d7fde15880ab8c2b08e754" kindref="member" tooltip="Returns a pointer to the track generator.">Solver::getTrackGenerator</ref>()<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classSolver_1a7f7349dc153dd9e728697c922cf7c052" kindref="member">_track_generator</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a2fd6f336d08340583bd620a7f5694c90" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>return<sp/>the<sp/>solver&apos;s<sp/>track<sp/>genetrator<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;since<sp/>it<sp/>has<sp/>not<sp/>yet<sp/>been<sp/>set&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a7f7349dc153dd9e728697c922cf7c052" kindref="member">_track_generator</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classSolver_1ae3012e43ec82aea38b7ff0c26a6e5003" kindref="member" tooltip="Returns the number of angles used for the polar quadrature.">Solver::getNumPolarAngles</ref>()<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a49cc179a9f47c5ca5f6d19c954d680ad" kindref="member">_num_polar</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><ref refid="Quadrature_8h_1abaf5f877e7f8a13548058dcb876c4de1" kindref="member" tooltip="The type of polar quadrature.">quadratureType</ref><sp/><ref refid="classSolver_1a8810de68de50b5f4881e89e68733960a" kindref="member" tooltip="Returns the type of polar quadrature in use (TABUCHI or LEONARD).">Solver::getPolarQuadratureType</ref>()<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a3c8910d870254066e9ba89c75c3a1003" kindref="member">_quadrature_type</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a4e2f2f30ca4bae8871b30bb188a29b38" kindref="member" tooltip="Returns the number of transport sweeps to converge the source.">Solver::getNumIterations</ref>()<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a06f3fd380731eb988cb2fc5232cb94b3" kindref="member">_num_iterations</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal">FP_PRECISION<sp/><ref refid="classSolver_1af3ec5e2776910329b6502e9fc06d533b" kindref="member" tooltip="Returns the threshold for source convergence.">Solver::getSourceConvergenceThreshold</ref>()<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a4aa4d18f980bbb098f839835e5e2f35d" kindref="member">_source_convergence_thresh</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a117012c7ecaf59b70fa6b489562acc65" kindref="member" tooltip="Sets the geometry for the solver.">Solver::setGeometry</ref>(<ref refid="classGeometry" kindref="compound" tooltip="The master class containing references to all geometry-related objects (surfaces, cells...">Geometry</ref>*<sp/>geometry)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geometry-&gt;<ref refid="classGeometry_1aa6c6670cf0552fc24824f074077e994b" kindref="member" tooltip="Returns the number of flat source regions in the geometry.">getNumFSRs</ref>()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a2fd6f336d08340583bd620a7f5694c90" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>set<sp/>the<sp/>Geometry<sp/>for<sp/>the<sp/>Solver<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;since<sp/>the<sp/>Geometry<sp/>has<sp/>not<sp/>yet<sp/>initialized<sp/>flat<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;source<sp/>regions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geometry-&gt;<ref refid="classGeometry_1aceb6249699270b234cddfb9046ed9b2d" kindref="member" tooltip="Returns the number of energy groups for each material&amp;#39;s nuclear data.">getNumEnergyGroups</ref>()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a2fd6f336d08340583bd620a7f5694c90" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>set<sp/>the<sp/>Geometry<sp/>for<sp/>the<sp/>Solver<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;since<sp/>the<sp/>Geometry<sp/>does<sp/>noet<sp/>contain<sp/>any<sp/>materials&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1ae323198b6be6ddc402c53784c5a89b7f" kindref="member">_geometry</ref><sp/>=<sp/>geometry;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a2e17e8aa8a11d4300e89179984ca4347" kindref="member">_num_FSRs</ref><sp/>=<sp/><ref refid="classSolver_1ae323198b6be6ddc402c53784c5a89b7f" kindref="member">_geometry</ref>-&gt;<ref refid="classGeometry_1aa6c6670cf0552fc24824f074077e994b" kindref="member" tooltip="Returns the number of flat source regions in the geometry.">getNumFSRs</ref>();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1ab18db0ed64afb0dade6054a7a08ae3c4" kindref="member">_num_groups</ref><sp/>=<sp/><ref refid="classSolver_1ae323198b6be6ddc402c53784c5a89b7f" kindref="member">_geometry</ref>-&gt;<ref refid="classGeometry_1aceb6249699270b234cddfb9046ed9b2d" kindref="member" tooltip="Returns the number of energy groups for each material&amp;#39;s nuclear data.">getNumEnergyGroups</ref>();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a84ce3dbf9e3c4a86773161e7c92b1da1" kindref="member">_polar_times_groups</ref><sp/>=<sp/><ref refid="classSolver_1ab18db0ed64afb0dade6054a7a08ae3c4" kindref="member">_num_groups</ref><sp/>*<sp/><ref refid="classSolver_1a49cc179a9f47c5ca5f6d19c954d680ad" kindref="member">_num_polar</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a5b17e508bd721f49a382673efcd8ae1b" kindref="member">_num_materials</ref><sp/>=<sp/><ref refid="classSolver_1ae323198b6be6ddc402c53784c5a89b7f" kindref="member">_geometry</ref>-&gt;<ref refid="classGeometry_1aee3114c51ec090bdc73b470a93ee2b32" kindref="member" tooltip="Returns the number of materials in the geometry.">getNumMaterials</ref>();</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1ac07cee2fe04515dc8e4d2980d567c4c5" kindref="member" tooltip="Sets the track generator with characteristic tracks for the solver.">Solver::setTrackGenerator</ref>(<ref refid="classTrackGenerator" kindref="compound" tooltip="The track generator is dedicated to generating tracks which cyclically wrap across the geometry...">TrackGenerator</ref>*<sp/>track_generator)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!track_generator-&gt;<ref refid="classTrackGenerator_1a5ec836ced3479a5aae51132809a3d7b4" kindref="member" tooltip="Returns whether or not the trackgenerator contains track that are for its current number of azimuthal...">containsTracks</ref>())</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a2fd6f336d08340583bd620a7f5694c90" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>set<sp/>the<sp/>TrackGenerator<sp/>for<sp/>the<sp/>Solver<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;since<sp/>the<sp/>TrackGenerator<sp/>has<sp/>not<sp/>yet<sp/>generated<sp/>tracks&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a7f7349dc153dd9e728697c922cf7c052" kindref="member">_track_generator</ref><sp/>=<sp/>track_generator;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a9f0fd3a842870803f27c47ed51a83039" kindref="member">_num_azim</ref><sp/>=<sp/><ref refid="classSolver_1a7f7349dc153dd9e728697c922cf7c052" kindref="member">_track_generator</ref>-&gt;<ref refid="classTrackGenerator_1a9c9661635df90ab658b17517548e7cc2" kindref="member" tooltip="Return the number of azimuthal angles in .">getNumAzim</ref>()<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a564e918dc20cdc12f40e15a86fffefc2" kindref="member">_num_tracks</ref><sp/>=<sp/><ref refid="classSolver_1a7f7349dc153dd9e728697c922cf7c052" kindref="member">_track_generator</ref>-&gt;<ref refid="classTrackGenerator_1a20e00c47aa96fbee5c2eef16e8aa006c" kindref="member" tooltip="Return an array of the number of tracks for each azimuthal angle.">getNumTracksArray</ref>();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a817518832fb051823de9e8855319f02e" kindref="member">_tot_num_tracks</ref><sp/>=<sp/><ref refid="classSolver_1a7f7349dc153dd9e728697c922cf7c052" kindref="member">_track_generator</ref>-&gt;<ref refid="classTrackGenerator_1a078d71a343d4c245c38195491b2d024c" kindref="member" tooltip="Return the total number of tracks across the geometry.">getNumTracks</ref>();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a02f013a25d984fa74aabc4c34f829960" kindref="member">_azim_weights</ref><sp/>=<sp/><ref refid="classSolver_1a7f7349dc153dd9e728697c922cf7c052" kindref="member">_track_generator</ref>-&gt;<ref refid="classTrackGenerator_1a1488db5d20339280b0e6fadf19a6d431" kindref="member" tooltip="Return a pointer to the array of azimuthal weights.">getAzimWeights</ref>();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a775ed41fc1268312c8fb25ec994e1351" kindref="member">_tracks</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classTrack" kindref="compound" tooltip="A track represents a characteristic line across the geometry.">Track</ref>*[<ref refid="classSolver_1a817518832fb051823de9e8855319f02e" kindref="member">_tot_num_tracks</ref>];</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>the<sp/>tracks<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/><ref refid="classSolver_1a9f0fd3a842870803f27c47ed51a83039" kindref="member">_num_azim</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j<sp/>&lt;<sp/><ref refid="classSolver_1a564e918dc20cdc12f40e15a86fffefc2" kindref="member">_num_tracks</ref>[i];<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSolver_1a775ed41fc1268312c8fb25ec994e1351" kindref="member">_tracks</ref>[counter]<sp/>=<sp/>&amp;<ref refid="classSolver_1a7f7349dc153dd9e728697c922cf7c052" kindref="member">_track_generator</ref>-&gt;<ref refid="classTrackGenerator_1a293c6a25a694bfcb8187cfd679fa3639" kindref="member" tooltip="Returns a 2D jagged array of the tracks.">getTracks</ref>()[i][j];</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>counter++;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1aa602cd57f7b72f13050920f2c752815e" kindref="member" tooltip="Sets the type of polar angle quadrature set to use (ie, TABUCHI or LEONARD).">Solver::setPolarQuadratureType</ref>(<ref refid="Quadrature_8h_1abaf5f877e7f8a13548058dcb876c4de1" kindref="member" tooltip="The type of polar quadrature.">quadratureType</ref><sp/>quadrature_type)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a3c8910d870254066e9ba89c75c3a1003" kindref="member">_quadrature_type</ref><sp/>=<sp/>quadrature_type;</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a069e8bf490a2f5de391f57cd9e7224ed" kindref="member" tooltip="Sets the number of polar angles to use (only 1, 2, or 3 currently supported).">Solver::setNumPolarAngles</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_polar)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_polar<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a2fd6f336d08340583bd620a7f5694c90" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>set<sp/>the<sp/>Solver&apos;s<sp/>number<sp/>of<sp/>polar<sp/>angles<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;to<sp/>%d<sp/>since<sp/>this<sp/>is<sp/>a<sp/>negative<sp/>number&quot;</highlight><highlight class="normal">,<sp/>num_polar);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_polar<sp/>&gt;<sp/>3)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a2fd6f336d08340583bd620a7f5694c90" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>set<sp/>the<sp/>Solver&apos;s<sp/>number<sp/>of<sp/>polar<sp/>angles<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;to<sp/>%d<sp/>since<sp/>this<sp/>is<sp/>not<sp/>a<sp/>supported<sp/>value<sp/>(only<sp/>1,<sp/>2<sp/>or<sp/>3<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>are<sp/>currently<sp/>supported)&quot;</highlight><highlight class="normal">,<sp/>num_polar);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>_num_polar<sp/>=<sp/>num_polar;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a5f9e45e5d2a93bc3b18ca2659b95ac6a" kindref="member">_two_times_num_polar</ref><sp/>=<sp/>2<sp/>*<sp/><ref refid="classSolver_1a49cc179a9f47c5ca5f6d19c954d680ad" kindref="member">_num_polar</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a84ce3dbf9e3c4a86773161e7c92b1da1" kindref="member">_polar_times_groups</ref><sp/>=<sp/><ref refid="classSolver_1ab18db0ed64afb0dade6054a7a08ae3c4" kindref="member">_num_groups</ref><sp/>*<sp/><ref refid="classSolver_1a49cc179a9f47c5ca5f6d19c954d680ad" kindref="member">_num_polar</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1aaace17535420183bd7c699b0a10c1e01" kindref="member" tooltip="Sets the threshold for source convergence (&amp;gt;0)">Solver::setSourceConvergenceThreshold</ref>(FP_PRECISION<sp/>source_thresh)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source_thresh<sp/>&lt;=<sp/>0.0)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a2fd6f336d08340583bd620a7f5694c90" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>set<sp/>the<sp/>source<sp/>convergence<sp/>threshold<sp/>to<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%f<sp/>since<sp/>the<sp/>threshold<sp/>must<sp/>be<sp/>a<sp/>positive<sp/>number&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source_thresh);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a4aa4d18f980bbb098f839835e5e2f35d" kindref="member">_source_convergence_thresh</ref><sp/>=<sp/>source_thresh;</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a627f677bdb8a621a632b581bc976b2a5" kindref="member" tooltip="Sets the solver to use linear interpolation to compute the exponential in the transport equation...">Solver::useExponentialInterpolation</ref>()<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a1263a3948d7fe87874854460a3701d82" kindref="member">_interpolate_exponential</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a5400c11874dac7f00ade6e7c2d573aee" kindref="member" tooltip="Sets the solver to use the exponential intrinsic function to compute the exponential in the transport...">Solver::useExponentialIntrinsic</ref>()<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a1263a3948d7fe87874854460a3701d82" kindref="member">_interpolate_exponential</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a4ab290c6ca1d74230bf885cfc7f58b7a" kindref="member" tooltip="Checks that each flat source region has at least one segment within it and if not, throws an exception and prints an error message.">Solver::checkTrackSpacing</ref>()<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>FSR_segment_tallies<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[<ref refid="classSolver_1a2e17e8aa8a11d4300e89179984ca4347" kindref="member">_num_FSRs</ref>];</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_segments;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsegment" kindref="compound" tooltip="A segment represents a line segment within a single flat source region along a track.">segment</ref>*<sp/>curr_segment;<sp/></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsegment" kindref="compound" tooltip="A segment represents a line segment within a single flat source region along a track.">segment</ref>*<sp/>segments;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCell" kindref="compound" tooltip="Represents a cell inside of a universe.">Cell</ref>*<sp/>cell;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>each<sp/>tally<sp/>to<sp/>zero<sp/>to<sp/>begin<sp/>with<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for</highlight></codeline>
<codeline lineno="323"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r=0;<sp/>r<sp/>&lt;<sp/><ref refid="classSolver_1a2e17e8aa8a11d4300e89179984ca4347" kindref="member">_num_FSRs</ref>;<sp/>r++)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FSR_segment_tallies[r]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Iterate<sp/>over<sp/>all<sp/>azimuthal<sp/>angles,<sp/>all<sp/>tracks,<sp/>and<sp/>all<sp/>segments</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>tally<sp/>each<sp/>segment<sp/>in<sp/>the<sp/>corresponding<sp/>FSR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for<sp/>private<sp/>(num_segments,<sp/>curr_segment)</highlight></codeline>
<codeline lineno="329"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/><ref refid="classSolver_1a817518832fb051823de9e8855319f02e" kindref="member">_tot_num_tracks</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_segments<sp/>=<sp/><ref refid="classSolver_1a775ed41fc1268312c8fb25ec994e1351" kindref="member">_tracks</ref>[i]-&gt;<ref refid="classTrack_1a034893295ac06eed35aac0c7ed172419" kindref="member" tooltip="Return the number of segments along this track.">getNumSegments</ref>();</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>segments<sp/>=<sp/><ref refid="classSolver_1a775ed41fc1268312c8fb25ec994e1351" kindref="member">_tracks</ref>[i]-&gt;<ref refid="classTrack_1a796efa8dc12ef0f1073ba264f4074380" kindref="member" tooltip="Returns a vector of pointers to the track&amp;#39;s segments.">getSegments</ref>();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s=0;<sp/>s<sp/>&lt;<sp/>num_segments;<sp/>s++)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_segment<sp/>=<sp/>&amp;segments[s];</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FSR_segment_tallies[curr_segment-&gt;<ref refid="structsegment_1ad4185c78e4df6c12a07392dfee367706" kindref="member">_region_id</ref>]++;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>over<sp/>all<sp/>FSRs<sp/>and<sp/>if<sp/>one<sp/>FSR<sp/>does<sp/>not<sp/>have<sp/>tracks<sp/>in<sp/>it,<sp/>print</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>error<sp/>message<sp/>to<sp/>the<sp/>screen<sp/>and<sp/>exit<sp/>program<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for<sp/>private<sp/>(cell)</highlight></codeline>
<codeline lineno="343"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r=0;<sp/>r<sp/>&lt;<sp/><ref refid="classSolver_1a2e17e8aa8a11d4300e89179984ca4347" kindref="member">_num_FSRs</ref>;<sp/>r++)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FSR_segment_tallies[r]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell<sp/>=<sp/><ref refid="classSolver_1ae323198b6be6ddc402c53784c5a89b7f" kindref="member">_geometry</ref>-&gt;<ref refid="classGeometry_1a92eee0b27aeacfee8eaef6dacd2c8d6e" kindref="member" tooltip="Find the cell for a flat source region ID.">findCellContainingFSR</ref>(r);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a2fd6f336d08340583bd620a7f5694c90" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>tracks<sp/>were<sp/>tallied<sp/>inside<sp/>FSR<sp/>id<sp/>=<sp/>%d<sp/>which<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;is<sp/>cell<sp/>id<sp/>=<sp/>%d.<sp/>Please<sp/>reduce<sp/>your<sp/>track<sp/>spacing,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>increase<sp/>the<sp/>number<sp/>of<sp/>azimuthal<sp/>angles,<sp/>or<sp/>increase<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;the<sp/>size<sp/>of<sp/>the<sp/>flat<sp/>source<sp/>regions&quot;</highlight><highlight class="normal">,<sp/>r,<sp/>cell-&gt;<ref refid="classCell_1a5ee7d2b6a1ed18804d207f937e3defaf" kindref="member" tooltip="Return the cell&amp;#39;s user-specified ID.">getId</ref>());</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>FSR_segment_tallies;</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal">FP_PRECISION<sp/><ref refid="classSolver_1af8358a66a7cbd56339211f80a2365678" kindref="member" tooltip="Computes keff by performing a series of transport sweep and source updates.">Solver::convergeSource</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_iterations)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Error<sp/>checking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classSolver_1ae323198b6be6ddc402c53784c5a89b7f" kindref="member">_geometry</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a2fd6f336d08340583bd620a7f5694c90" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>Solver<sp/>is<sp/>unable<sp/>to<sp/>converge<sp/>the<sp/>source<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;since<sp/>it<sp/>does<sp/>not<sp/>contain<sp/>a<sp/>Geometry&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classSolver_1a7f7349dc153dd9e728697c922cf7c052" kindref="member">_track_generator</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a2fd6f336d08340583bd620a7f5694c90" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>Solver<sp/>is<sp/>unable<sp/>to<sp/>converge<sp/>the<sp/>source<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;since<sp/>it<sp/>does<sp/>not<sp/>contain<sp/>a<sp/>TrackGenerator&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a50d1448013c6f17125caee18aa418af7" kindref="member">NORMAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Converging<sp/>the<sp/>source...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>all<sp/>timing<sp/>data<sp/>from<sp/>a<sp/>previous<sp/>simulation<sp/>run<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a4f6e2e3069aa9404fefd62be376e8390" kindref="member" tooltip="Deletes the Timer&amp;#39;s timing entries for each timed code section code in the source convergence loop...">clearTimerSplits</ref>();</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>the<sp/>timer<sp/>to<sp/>record<sp/>the<sp/>total<sp/>time<sp/>to<sp/>converge<sp/>the<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a3cab54ec3cb374d796180b94201276ec" kindref="member">_timer</ref>-&gt;<ref refid="classTimer_1aa8c887576ec3b0d68c10ebf4097c367c" kindref="member" tooltip="Starts the timer.">startTimer</ref>();</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Counter<sp/>for<sp/>the<sp/>number<sp/>of<sp/>iterations<sp/>to<sp/>converge<sp/>the<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a06f3fd380731eb988cb2fc5232cb94b3" kindref="member">_num_iterations</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>An<sp/>initial<sp/>guess<sp/>for<sp/>the<sp/>eigenvalue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a3c52f5e2ecbe44ebca20e6696a09e447" kindref="member">_k_eff</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>residual<sp/>on<sp/>the<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>FP_PRECISION<sp/>residual<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>data<sp/>structures<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a6591b996eb837e0c4184424e48e191a3" kindref="member" tooltip="Creates a polar quadrature object for the solver.">initializePolarQuadrature</ref>();</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a916eb7ef96140e1ea2d22bb9d1c86240" kindref="member" tooltip="Allocates memory for track boundary angular fluxes and leakages flat source region scalar fluxes...">initializeFluxArrays</ref>();</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a8592d819738b24a5b983e54c0a635d30" kindref="member" tooltip="Allocates memory for flat source region source arrays.">initializeSourceArrays</ref>();</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a4d5a5373ca8cb3e04e745eace85115b0" kindref="member" tooltip="Allocates memory for flat source region power arrays.">initializePowerArrays</ref>();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a5a9d6fc967c1f8ba7eb6b34094f8fd25" kindref="member" tooltip="Builds an interpolation table for the exponential prefactors referenced for each segment in the trans...">precomputePrefactors</ref>();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a512ac25e056b3e2d77ae9159e793babf" kindref="member" tooltip="Initializes the volumes and material arrays for each flat source region.">initializeFSRs</ref>();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>each<sp/>FSR<sp/>has<sp/>at<sp/>least<sp/>one<sp/>segment<sp/>crossing<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a4ab290c6ca1d74230bf885cfc7f58b7a" kindref="member" tooltip="Checks that each flat source region has at least one segment within it and if not, throws an exception and prints an error message.">checkTrackSpacing</ref>();</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>scalar<sp/>flux<sp/>to<sp/>unity<sp/>for<sp/>each<sp/>region<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a148137c97310ee2df94a4fd3fe35456f" kindref="member" tooltip="Set the scalar flux for each energy group inside each flat source region to a constant value...">flattenFSRFluxes</ref>(1.0);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a906c202ff2b3e38443f333964efa2342" kindref="member" tooltip="Set the source for each energy group in each flat source region to a constant value.">flattenFSRSources</ref>(1.0);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1ac9960f6987c85a3d8e670beb10a9fbb2" kindref="member" tooltip="Zero each track&amp;#39;s boundary fluxes for each energy group and polar angle in the &amp;quot;forward&amp;quot; and &amp;quot;reverse...">zeroTrackFluxes</ref>();</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Source<sp/>iteration<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>max_iterations;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a50d1448013c6f17125caee18aa418af7" kindref="member">NORMAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Iteration<sp/>%d:<sp/>\tk_eff<sp/>=<sp/>%1.6f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\tres<sp/>=<sp/>%1.3E&quot;</highlight><highlight class="normal">,<sp/>i,<sp/><ref refid="classSolver_1a3c52f5e2ecbe44ebca20e6696a09e447" kindref="member">_k_eff</ref>,<sp/>residual);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1aeb89db6a6b624b222494625613b2ed57" kindref="member" tooltip="Normalizes all flat source region scalar fluxes and track boundary angular fluxes to the total fissio...">normalizeFluxes</ref>();</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>residual<sp/>=<sp/><ref refid="classSolver_1af3265d25938ee473633e193bc59202c8" kindref="member" tooltip="Computes the total source (fission and scattering) in each flat source region.">computeFSRSources</ref>();</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1ab029744c3532b239fab583c4f8d8ea98" kindref="member" tooltip="This method performs one transport sweep of all azimuthal angles, tracks, segments, polar angles and energy groups.">transportSweep</ref>();<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a431c793e0164e134d35fecf9e1e56434" kindref="member" tooltip="Add the source term contribution in the transport equation to the flat source region scalar flux...">addSourceToScalarFlux</ref>();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a7d0c4632edff104979002eb21d38d794" kindref="member" tooltip="Compute  from total fission and absorption rates.">computeKeff</ref>();</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a06f3fd380731eb988cb2fc5232cb94b3" kindref="member">_num_iterations</ref>++;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>convergence<sp/>of<sp/>the<sp/>fission<sp/>source<sp/>distribution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/>residual<sp/>&lt;<sp/><ref refid="classSolver_1a4aa4d18f980bbb098f839835e5e2f35d" kindref="member">_source_convergence_thresh</ref>)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSolver_1a3cab54ec3cb374d796180b94201276ec" kindref="member">_timer</ref>-&gt;<ref refid="classTimer_1a27f97da1b1d19ad74a847703ca25c455" kindref="member" tooltip="Stops the timer.">stopTimer</ref>();</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSolver_1a3cab54ec3cb374d796180b94201276ec" kindref="member">_timer</ref>-&gt;<ref refid="classTimer_1a613c775ca0b0b08f7cf1a6c165a6b6f7" kindref="member" tooltip="Records a message corresponding to a time for the current split.">recordSplit</ref>(</highlight><highlight class="stringliteral">&quot;Total<sp/>time<sp/>to<sp/>converge<sp/>the<sp/>source&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a3c52f5e2ecbe44ebca20e6696a09e447" kindref="member">_k_eff</ref>;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a3cab54ec3cb374d796180b94201276ec" kindref="member">_timer</ref>-&gt;<ref refid="classTimer_1a27f97da1b1d19ad74a847703ca25c455" kindref="member" tooltip="Stops the timer.">stopTimer</ref>();</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a3cab54ec3cb374d796180b94201276ec" kindref="member">_timer</ref>-&gt;<ref refid="classTimer_1a613c775ca0b0b08f7cf1a6c165a6b6f7" kindref="member" tooltip="Records a message corresponding to a time for the current split.">recordSplit</ref>(</highlight><highlight class="stringliteral">&quot;Total<sp/>time<sp/>to<sp/>converge<sp/>the<sp/>source&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a984de77c680eaff141ec910e25568a81" kindref="member">WARNING</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>converge<sp/>the<sp/>source<sp/>after<sp/>%d<sp/>iterations&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_iterations);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a3c52f5e2ecbe44ebca20e6696a09e447" kindref="member">_k_eff</ref>;</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1a4f6e2e3069aa9404fefd62be376e8390" kindref="member" tooltip="Deletes the Timer&amp;#39;s timing entries for each timed code section code in the source convergence loop...">Solver::clearTimerSplits</ref>()<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSolver_1a3cab54ec3cb374d796180b94201276ec" kindref="member">_timer</ref>-&gt;<ref refid="classTimer_1a11700956fe9bcbfefc0812e84c483764" kindref="member" tooltip="Clears the time split for this message and deletes the message&amp;#39;s entry in the Timer&amp;#39;s splits log...">clearSplit</ref>(</highlight><highlight class="stringliteral">&quot;Total<sp/>time<sp/>to<sp/>converge<sp/>the<sp/>source&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSolver_1aeec2b08ba9d6be88cf08f1fc02658500" kindref="member" tooltip="Prints a report of the timing statistics to the console.">Solver::printTimerReport</ref>()<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>msg_string;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a0a041e18d712f7b239eac5375daf4a05" kindref="member">TITLE</ref>,<sp/></highlight><highlight class="stringliteral">&quot;TIMING<sp/>REPORT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>total<sp/>runtime<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tot_time<sp/>=<sp/><ref refid="classSolver_1a3cab54ec3cb374d796180b94201276ec" kindref="member">_timer</ref>-&gt;<ref refid="classTimer_1aa56c74daecc44c72c434db6c98e69178" kindref="member" tooltip="Returns the time associated with a particular split.">getSplit</ref>(</highlight><highlight class="stringliteral">&quot;Total<sp/>time<sp/>to<sp/>converge<sp/>the<sp/>source&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>msg_string<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Total<sp/>time<sp/>to<sp/>solution&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>msg_string.resize(53,<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a7186ecefe792fdae9fec0a42f105ad6b" kindref="member">RESULT</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%s%1.4E<sp/>sec&quot;</highlight><highlight class="normal">,<sp/>msg_string.c_str(),<sp/>tot_time);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Time<sp/>per<sp/>unknown<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time_per_unknown<sp/>=<sp/>tot_time<sp/>/<sp/>(_num_FSRs<sp/>*<sp/><ref refid="classSolver_1ab18db0ed64afb0dade6054a7a08ae3c4" kindref="member">_num_groups</ref>);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>msg_string<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Solution<sp/>time<sp/>per<sp/>unknown&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>msg_string.resize(53,<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a7186ecefe792fdae9fec0a42f105ad6b" kindref="member">RESULT</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%s%1.4E<sp/>sec&quot;</highlight><highlight class="normal">,<sp/>msg_string.c_str(),<sp/>time_per_unknown);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Time<sp/>per<sp/>iteration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time_per_iter<sp/>=<sp/>tot_time<sp/>/<sp/><ref refid="classSolver_1a06f3fd380731eb988cb2fc5232cb94b3" kindref="member">_num_iterations</ref>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>msg_string<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Solution<sp/>time<sp/>per<sp/>iteration&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>msg_string.resize(53,<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a7186ecefe792fdae9fec0a42f105ad6b" kindref="member">RESULT</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%s%1.4E<sp/>sec&quot;</highlight><highlight class="normal">,<sp/>msg_string.c_str(),<sp/>time_per_iter);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Time<sp/>per<sp/>segment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_segments<sp/>=<sp/><ref refid="classSolver_1a7f7349dc153dd9e728697c922cf7c052" kindref="member">_track_generator</ref>-&gt;<ref refid="classTrackGenerator_1a4e377cdc26b0eec5f54d55ebc2249089" kindref="member" tooltip="Return the total number of track segments across the geometry.">getNumSegments</ref>();</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time_per_segment<sp/>=<sp/>(time_per_iter<sp/>/<sp/>num_segments);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>msg_string<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Integration<sp/>time<sp/>per<sp/>track<sp/>segment&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>msg_string.resize(53,<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a7186ecefe792fdae9fec0a42f105ad6b" kindref="member">RESULT</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%s%1.4E<sp/>sec&quot;</highlight><highlight class="normal">,<sp/>msg_string.c_str(),<sp/>time_per_segment);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564ac22e1a44f0ddbc929cfea45e49d20f84" kindref="member">SEPARATOR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="487"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/Solver.cpp"/>
  </compounddef>
</doxygen>
