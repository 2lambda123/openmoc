<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="clone_8h" kind="file">
    <compoundname>clone.h</compoundname>
    <includes refid="DeviceMaterial_8h" local="yes">../DeviceMaterial.h</includes>
    <includes refid="DeviceTrack_8h" local="yes">../DeviceTrack.h</includes>
    <includedby refid="clone_8cu" local="yes">/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/dev/gpu/clone.cu</includedby>
    <includedby refid="GPUSolver_8h" local="yes">/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/dev/gpu/GPUSolver.h</includedby>
    <incdepgraph>
      <node id="31">
        <label>/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/dev/gpu/clone.h</label>
        <link refid="clone.h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>../DeviceTrack.h</label>
        <link refid="DeviceTrack_8h"/>
      </node>
      <node id="32">
        <label>../DeviceMaterial.h</label>
        <link refid="DeviceMaterial_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="34">
        <label>/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/dev/gpu/clone.h</label>
        <link refid="clone.h"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/dev/gpu/GPUSolver.h</label>
        <link refid="GPUSolver_8h"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="clone_8h_1a365517a6057129ebbe45d6cbf5175b91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cloneMaterialOnGPU</definition>
        <argsstring>(Material *material_h, dev_material *material_d)</argsstring>
        <name>cloneMaterialOnGPU</name>
        <param>
          <type><ref refid="classMaterial" kindref="compound">Material</ref> *</type>
          <declname>material_h</declname>
        </param>
        <param>
          <type><ref refid="structdev__material" kindref="compound">dev_material</ref> *</type>
          <declname>material_d</declname>
        </param>
        <briefdescription>
<para>Given a pointer to a material on the host and a material on the GPU, copy all of the properties from the material on the host to the GPU. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>material_h</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a material on the host </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>material_d</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a material on the GPU </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/dev/gpu/clone.h" line="4" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/dev/gpu/clone.cu" bodystart="11" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="clone_8h_1a3125bc8a664937676a44e336c8049820" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cloneTrackOnGPU</definition>
        <argsstring>(Track *track_h, dev_track *track_d)</argsstring>
        <name>cloneTrackOnGPU</name>
        <param>
          <type><ref refid="classTrack" kindref="compound">Track</ref> *</type>
          <declname>track_h</declname>
        </param>
        <param>
          <type><ref refid="structdev__track" kindref="compound">dev_track</ref> *</type>
          <declname>track_d</declname>
        </param>
        <briefdescription>
<para>Given a pointer to a track on the host and a track on the GPU, copy all of the properties and segments from the track on the host to the GPU. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>track_h</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a track on the host </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>track_d</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a track on the GPU </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/dev/gpu/clone.h" line="5" bodyfile="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/dev/gpu/clone.cu" bodystart="78" bodyend="113"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;../DeviceMaterial.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../DeviceTrack.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cloneMaterialOnGPU(<ref refid="classMaterial" kindref="compound" tooltip="The material class represents a unique material and its relevant nuclear data (ie, multigroup cross-sections) for neutron transport.">Material</ref>*<sp/>material_h,<sp/><ref refid="structdev__material" kindref="compound" tooltip="A material&amp;#39;s nuclear data to be stored on a GPU.">dev_material</ref>*<sp/>material_d);</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cloneTrackOnGPU(<ref refid="classTrack" kindref="compound" tooltip="A track represents a characteristic line across the geometry.">Track</ref>*<sp/>track_h,<sp/><ref refid="structdev__track" kindref="compound" tooltip="A dev_track represents a characteristic line across the geometry.">dev_track</ref>*<sp/>track_d);</highlight></codeline>
    </programlisting>
    <location file="/home/wbinventor/NSE-CRPG-Codes/OpenMOC/src/dev/gpu/clone.h"/>
  </compounddef>
</doxygen>
