<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="classUniverse" kind="class" prot="public">
    <compoundname>Universe</compoundname>
    <derivedcompoundref refid="classLattice" prot="public" virt="non-virtual">Lattice</derivedcompoundref>
    <includes refid="Universe_8h" local="yes">openmoc/src/host/Universe.h</includes>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="classUniverse_1ac243fe18b2dda0d635c4e3cb04e00dda" prot="protected" static="yes" mutable="no">
        <type>short int</type>
        <definition>short int Universe::_n</definition>
        <argsstring></argsstring>
        <name>_n</name>
        <initializer> 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A static counter for the number of universes in a simulation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" line="54" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classUniverse_1a737f37373d846ed69fddf2de38473a87" prot="protected" static="no" mutable="no">
        <type>short int</type>
        <definition>short int Universe::_uid</definition>
        <argsstring></argsstring>
        <name>_uid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A monotonically increasing unique ID for each universe created </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" line="56" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classUniverse_1a59625074218444923fc88384f13d51bf" prot="protected" static="no" mutable="no">
        <type>short int</type>
        <definition>short int Universe::_id</definition>
        <argsstring></argsstring>
        <name>_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A user-defined id for each universe created </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" line="58" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classUniverse_1ab982650a751c2aae8ebc26e150b71cd1" prot="protected" static="no" mutable="no">
        <type><ref refid="Universe_8h_1a123911615dcd5c50bea706d32683a02a" kindref="member">universeType</ref></type>
        <definition>universeType Universe::_type</definition>
        <argsstring></argsstring>
        <name>_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The type of universe (ie, SIMLE or LATTICE) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" line="60" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classUniverse_1aa410d75ac7bfc487dd1194077d7cbfc1" prot="protected" static="no" mutable="no">
        <type>std::map&lt; short int, <ref refid="classCell" kindref="compound">Cell</ref> * &gt;</type>
        <definition>std::map&lt;short int, Cell*&gt; Universe::_cells</definition>
        <argsstring></argsstring>
        <name>_cells</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A hash table of cell IDs and cell pointers </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" line="62" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classUniverse_1a1a1a80e5a8cc28b9629317edf03b9765" prot="protected" static="no" mutable="no">
        <type><ref refid="classPoint" kindref="compound">Point</ref></type>
        <definition>Point Universe::_origin</definition>
        <argsstring></argsstring>
        <name>_origin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The coordinates of the origin for the universe </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" line="64" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classUniverse_1adca8df0b782ecddad4e1ff65d7621f68" prot="protected" static="no" mutable="no">
        <type>std::map&lt; int, int &gt;</type>
        <definition>std::map&lt;int, int&gt; Universe::_region_map</definition>
        <argsstring></argsstring>
        <name>_region_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A hash table of cell IDs and their corresponding flat source region IDs. This helps for computing FSR IDs and building FSR maps for plotting FSR-based quantities such as the scalar flux and pin powers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" line="68" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classUniverse_1ad1cbe2dc504fff3eac77c89a20a5fea2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Universe::Universe</definition>
        <argsstring>(const short int id)</argsstring>
        <name>Universe</name>
        <param>
          <type>const short int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Constructor assigns a unique and user-specified ID for the universe. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>the user-specified universe id </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" line="71" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.cpp" bodystart="11" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classUniverse_1a7723438c7fa497defb4c82ac975152b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Universe::~Universe</definition>
        <argsstring>()</argsstring>
        <name>~Universe</name>
        <briefdescription>
<para>Destructor clears the cell pointers container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" line="72" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.cpp" bodystart="22" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classUniverse_1af045c632c9b336f8d4f7be20c5a510a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Universe::addCell</definition>
        <argsstring>(Cell *cell)</argsstring>
        <name>addCell</name>
        <param>
          <type><ref refid="classCell" kindref="compound">Cell</ref> *</type>
          <declname>cell</declname>
        </param>
        <briefdescription>
<para>Adds a cell to this universe. </para>        </briefdescription>
        <detaileddescription>
<para>Stores the user-specified cell ID and cell pointer in a hash table along with all of other cells added to this universe. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>the cell id </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" line="74" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.cpp" bodystart="100" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classUniverse_1a2c23d7adc8ea99834f4cdd0e4a26e45a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; short int, <ref refid="classCell" kindref="compound">Cell</ref> * &gt;</type>
        <definition>std::map&lt; short int, Cell * &gt; Universe::getCells</definition>
        <argsstring>() const </argsstring>
        <name>getCells</name>
        <briefdescription>
<para>Return the vector of cell pointers in this universe. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>vector of cell ids </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" line="75" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.cpp" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classUniverse_1aa42e60aa9e1b4a8baa1b3b3b865caec4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>short int</type>
        <definition>short int Universe::getUid</definition>
        <argsstring>() const </argsstring>
        <name>getUid</name>
        <briefdescription>
<para>Returns the universe&apos;s unique ID. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the universe&apos;s unique ID. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" line="76" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.cpp" bodystart="31" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classUniverse_1a4f7c4329c04e78b6a62f8977dfe3d115" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>short int</type>
        <definition>short int Universe::getId</definition>
        <argsstring>() const </argsstring>
        <name>getId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the user-specified ID for this universe. <simplesect kind="return"><para>the user-specified universe ID </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" line="77" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.cpp" bodystart="39" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classUniverse_1a6cbde58618cfcec5f72780b2911ab97b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="Universe_8h_1a123911615dcd5c50bea706d32683a02a" kindref="member">universeType</ref></type>
        <definition>universeType Universe::getType</definition>
        <argsstring>()</argsstring>
        <name>getType</name>
        <briefdescription>
<para>Return the universe type (SIMPLE or LATTICE). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the universe type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" line="78" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.cpp" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classUniverse_1a14d0a5faf027f70526bd87298ff1e45c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>short int</type>
        <definition>short int Universe::getNumCells</definition>
        <argsstring>() const </argsstring>
        <name>getNumCells</name>
        <briefdescription>
<para>Return the number of cells in this universe. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of cells </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" line="79" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.cpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classUniverse_1ac4223b9975965ff302bd38666782985f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Universe::getFSR</definition>
        <argsstring>(short int cell_id)</argsstring>
        <name>getFSR</name>
        <param>
          <type>short int</type>
          <declname>cell_id</declname>
        </param>
        <briefdescription>
<para>Returns the local ID for the FSR representing a cell in this universe. </para>        </briefdescription>
        <detaileddescription>
<para>This method is used when constructing an ID for a FSR. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cell_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID of the cell of interest </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" line="80" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.cpp" bodystart="75" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classUniverse_1a2925eda0d8d3a5142b57f6a75974fada" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classPoint" kindref="compound">Point</ref> *</type>
        <definition>Point * Universe::getOrigin</definition>
        <argsstring>()</argsstring>
        <name>getOrigin</name>
        <reimplementedby refid="classLattice_1ac74c38894f48a1f3462178cd07b6c00b">getOrigin</reimplementedby>
        <briefdescription>
<para>Return a pointer to the origin for this cell (in global coordinates). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the origin of the cell </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" line="81" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.cpp" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classUniverse_1a9a2868fbdf186f4842db3c71c1c77373" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Universe::setType</definition>
        <argsstring>(universeType type)</argsstring>
        <name>setType</name>
        <param>
          <type><ref refid="Universe_8h_1a123911615dcd5c50bea706d32683a02a" kindref="member">universeType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Sets the universe type to SIMPLE or LATTICE. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>the universe type </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" line="83" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.cpp" bodystart="118" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classUniverse_1a0f832001f75c9a3e9b57ba6834d202af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Universe::setOrigin</definition>
        <argsstring>(Point *origin)</argsstring>
        <name>setOrigin</name>
        <param>
          <type><ref refid="classPoint" kindref="compound">Point</ref> *</type>
          <declname>origin</declname>
        </param>
        <briefdescription>
<para>Set the origin in global coordinates for this universe. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>origin</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the origin </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" line="84" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.cpp" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classUniverse_1a23c055aef2533f10d524979ee8e9f46b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCell" kindref="compound">Cell</ref> *</type>
        <definition>Cell * Universe::findCell</definition>
        <argsstring>(LocalCoords *coords, std::map&lt; short int, Universe * &gt; universes)</argsstring>
        <name>findCell</name>
        <reimplementedby refid="classLattice_1a463e4fba851c367d6c46ed777a7de7e8">findCell</reimplementedby>
        <param>
          <type><ref refid="classLocalCoords" kindref="compound">LocalCoords</ref> *</type>
          <declname>coords</declname>
        </param>
        <param>
          <type>std::map&lt; short int, <ref refid="classUniverse" kindref="compound">Universe</ref> * &gt;</type>
          <declname>universes</declname>
        </param>
        <briefdescription>
<para>Finds the cell for which a localcoords object resides. </para>        </briefdescription>
        <detaileddescription>
<para>Finds the cell that a localcoords object is located inside by checking each of this universe&apos;s cells. Returns NULL if the localcoords is not in any of the cells. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coords</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the localcoords of interest </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>universes</parametername>
</parameternamelist>
<parameterdescription>
<para>a container of all of the universes passed in by geometry </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer the cell where the localcoords is located </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" line="86" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.cpp" bodystart="142" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classUniverse_1af76741be6456d3542a302024fd4c52e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Universe::computeFSRMaps</definition>
        <argsstring>()</argsstring>
        <name>computeFSRMaps</name>
        <reimplementedby refid="classLattice_1afc84badb58ce4b9c3946fcc944647c30">computeFSRMaps</reimplementedby>
        <briefdescription>
<para>Compute the FSR maps for this universe and return the number of FSRs inside the universe. </para>        </briefdescription>
        <detaileddescription>
<para>The FSR map is simply a hash table of the local FSR IDs for each of the cells making up this universe. This is used when constructing a global FSR ID for a lattice which may contain several repeating versions of this universe. <simplesect kind="return"><para>the number of FSRs in the universe </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" line="87" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.cpp" bodystart="241" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classUniverse_1ae3952c88390eda788da540d421d0b139" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Universe::subdivideCells</definition>
        <argsstring>()</argsstring>
        <name>subdivideCells</name>
        <briefdescription>
<para>Subdivides all of the cells within this universe into rings and angular sectors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" line="88" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.cpp" bodystart="261" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classUniverse_1a9bc78841d661eb12afa51ca04ae31368" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Universe::toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <reimplementedby refid="classLattice_1a85eb51407b84e29d55f300e06b29f9b4">toString</reimplementedby>
        <briefdescription>
<para>Convert the member attributes of this universe to a character array. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a character array reprsenting the universe </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" line="89" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.cpp" bodystart="204" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classUniverse_1a9d7f74890c13dc3856a694b4f142f985" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Universe::printString</definition>
        <argsstring>()</argsstring>
        <name>printString</name>
        <reimplementedby refid="classLattice_1ac29a8a1d0a21829843ee39eb3778fc85">printString</reimplementedby>
        <briefdescription>
<para>Prints a string representation of all of the universe&apos;s objects to the console. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" line="90" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.cpp" bodystart="227" bodyend="229"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A universe represents an unbounded space in the 2D xy-plane. </para>    </briefdescription>
    <detaileddescription>
<para>A universe contains cell which are bounded subspaces in the 2D xy-plane and which together form the universe. Universes allow for complex, repeating (ie lattices) geometries to be simply represented with as few data structures as possible. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="109">
        <label>Universe</label>
        <link refid="classUniverse"/>
      </node>
      <node id="110">
        <label>Lattice</label>
        <link refid="classLattice"/>
        <childnode refid="109" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="111">
        <label>Universe</label>
        <link refid="classUniverse"/>
        <childnode refid="112" relation="usage">
          <edgelabel>_origin</edgelabel>
        </childnode>
      </node>
      <node id="112">
        <label>Point</label>
        <link refid="classPoint"/>
      </node>
    </collaborationgraph>
    <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" line="50" bodyfile="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.h" bodystart="50" bodyend="91"/>
    <listofallmembers>
      <member refid="classUniverse_1aa410d75ac7bfc487dd1194077d7cbfc1" prot="protected" virt="non-virtual"><scope>Universe</scope><name>_cells</name></member>
      <member refid="classUniverse_1a59625074218444923fc88384f13d51bf" prot="protected" virt="non-virtual"><scope>Universe</scope><name>_id</name></member>
      <member refid="classUniverse_1ac243fe18b2dda0d635c4e3cb04e00dda" prot="protected" virt="non-virtual"><scope>Universe</scope><name>_n</name></member>
      <member refid="classUniverse_1a1a1a80e5a8cc28b9629317edf03b9765" prot="protected" virt="non-virtual"><scope>Universe</scope><name>_origin</name></member>
      <member refid="classUniverse_1adca8df0b782ecddad4e1ff65d7621f68" prot="protected" virt="non-virtual"><scope>Universe</scope><name>_region_map</name></member>
      <member refid="classUniverse_1ab982650a751c2aae8ebc26e150b71cd1" prot="protected" virt="non-virtual"><scope>Universe</scope><name>_type</name></member>
      <member refid="classUniverse_1a737f37373d846ed69fddf2de38473a87" prot="protected" virt="non-virtual"><scope>Universe</scope><name>_uid</name></member>
      <member refid="classUniverse_1af045c632c9b336f8d4f7be20c5a510a1" prot="public" virt="non-virtual"><scope>Universe</scope><name>addCell</name></member>
      <member refid="classUniverse_1af76741be6456d3542a302024fd4c52e4" prot="public" virt="non-virtual"><scope>Universe</scope><name>computeFSRMaps</name></member>
      <member refid="classUniverse_1a23c055aef2533f10d524979ee8e9f46b" prot="public" virt="non-virtual"><scope>Universe</scope><name>findCell</name></member>
      <member refid="classUniverse_1a2c23d7adc8ea99834f4cdd0e4a26e45a" prot="public" virt="non-virtual"><scope>Universe</scope><name>getCells</name></member>
      <member refid="classUniverse_1ac4223b9975965ff302bd38666782985f" prot="public" virt="non-virtual"><scope>Universe</scope><name>getFSR</name></member>
      <member refid="classUniverse_1a4f7c4329c04e78b6a62f8977dfe3d115" prot="public" virt="non-virtual"><scope>Universe</scope><name>getId</name></member>
      <member refid="classUniverse_1a14d0a5faf027f70526bd87298ff1e45c" prot="public" virt="non-virtual"><scope>Universe</scope><name>getNumCells</name></member>
      <member refid="classUniverse_1a2925eda0d8d3a5142b57f6a75974fada" prot="public" virt="non-virtual"><scope>Universe</scope><name>getOrigin</name></member>
      <member refid="classUniverse_1a6cbde58618cfcec5f72780b2911ab97b" prot="public" virt="non-virtual"><scope>Universe</scope><name>getType</name></member>
      <member refid="classUniverse_1aa42e60aa9e1b4a8baa1b3b3b865caec4" prot="public" virt="non-virtual"><scope>Universe</scope><name>getUid</name></member>
      <member refid="classUniverse_1a9d7f74890c13dc3856a694b4f142f985" prot="public" virt="non-virtual"><scope>Universe</scope><name>printString</name></member>
      <member refid="classUniverse_1a0f832001f75c9a3e9b57ba6834d202af" prot="public" virt="non-virtual"><scope>Universe</scope><name>setOrigin</name></member>
      <member refid="classUniverse_1a9a2868fbdf186f4842db3c71c1c77373" prot="public" virt="non-virtual"><scope>Universe</scope><name>setType</name></member>
      <member refid="classUniverse_1ae3952c88390eda788da540d421d0b139" prot="public" virt="non-virtual"><scope>Universe</scope><name>subdivideCells</name></member>
      <member refid="classUniverse_1a9bc78841d661eb12afa51ca04ae31368" prot="public" virt="non-virtual"><scope>Universe</scope><name>toString</name></member>
      <member refid="classUniverse_1ad1cbe2dc504fff3eac77c89a20a5fea2" prot="public" virt="non-virtual"><scope>Universe</scope><name>Universe</name></member>
      <member refid="classUniverse_1a7723438c7fa497defb4c82ac975152b2" prot="public" virt="virtual"><scope>Universe</scope><name>~Universe</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
