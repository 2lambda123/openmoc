<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="Universe_8cpp" kind="file">
    <compoundname>Universe.cpp</compoundname>
    <includes refid="Universe_8h" local="yes">Universe.h</includes>
    <incdepgraph>
      <node id="122">
        <label>Universe.h</label>
        <link refid="Universe_8h"/>
      </node>
      <node id="121">
        <label>/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.cpp</label>
        <link refid="Universe.cpp"/>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Universe_8h" kindref="compound" tooltip="The Universe class.">Universe.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classUniverse_1ac243fe18b2dda0d635c4e3cb04e00dda" kindref="member">Universe::_n</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><ref refid="classUniverse_1ad1cbe2dc504fff3eac77c89a20a5fea2" kindref="member" tooltip="Constructor assigns a unique and user-specified ID for the universe.">Universe::Universe</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classUniverse_1a737f37373d846ed69fddf2de38473a87" kindref="member">_uid</ref><sp/>=<sp/><ref refid="classUniverse_1ac243fe18b2dda0d635c4e3cb04e00dda" kindref="member">_n</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classUniverse_1a59625074218444923fc88384f13d51bf" kindref="member">_id</ref><sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classUniverse_1ac243fe18b2dda0d635c4e3cb04e00dda" kindref="member">_n</ref>++;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classUniverse_1ab982650a751c2aae8ebc26e150b71cd1" kindref="member">_type</ref><sp/>=<sp/><ref refid="Universe_8h_1a123911615dcd5c50bea706d32683a02aa1a6b6e9893ec9e5d9710335b4c74d3f6" kindref="member">SIMPLE</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><ref refid="classUniverse_1a7723438c7fa497defb4c82ac975152b2" kindref="member" tooltip="Destructor clears the cell pointers container.">Universe::~Universe</ref>()<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classUniverse_1aa410d75ac7bfc487dd1194077d7cbfc1" kindref="member">_cells</ref>.clear();</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classUniverse_1aa42e60aa9e1b4a8baa1b3b3b865caec4" kindref="member" tooltip="Returns the universe&amp;#39;s unique ID.">Universe::getUid</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classUniverse_1a737f37373d846ed69fddf2de38473a87" kindref="member">_uid</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classUniverse_1a4f7c4329c04e78b6a62f8977dfe3d115" kindref="member">Universe::getId</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classUniverse_1a59625074218444923fc88384f13d51bf" kindref="member">_id</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><ref refid="Universe_8h_1a123911615dcd5c50bea706d32683a02a" kindref="member" tooltip="The type of universe.">universeType</ref><sp/><ref refid="classUniverse_1a6cbde58618cfcec5f72780b2911ab97b" kindref="member" tooltip="Return the universe type (SIMPLE or LATTICE).">Universe::getType</ref>()<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classUniverse_1ab982650a751c2aae8ebc26e150b71cd1" kindref="member">_type</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classUniverse_1a14d0a5faf027f70526bd87298ff1e45c" kindref="member" tooltip="Return the number of cells in this universe.">Universe::getNumCells</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classUniverse_1aa410d75ac7bfc487dd1194077d7cbfc1" kindref="member">_cells</ref>.size();</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="classPoint" kindref="compound" tooltip="Class to represent a 2D point in space.">Point</ref>*<sp/><ref refid="classUniverse_1a2925eda0d8d3a5142b57f6a75974fada" kindref="member" tooltip="Return a pointer to the origin for this cell (in global coordinates).">Universe::getOrigin</ref>()<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<ref refid="classUniverse_1a1a1a80e5a8cc28b9629317edf03b9765" kindref="member">_origin</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classUniverse_1ac4223b9975965ff302bd38666782985f" kindref="member" tooltip="Returns the local ID for the FSR representing a cell in this universe.">Universe::getFSR</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cell_id)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classUniverse_1aa410d75ac7bfc487dd1194077d7cbfc1" kindref="member">_cells</ref>.find(cell_id)<sp/>==<sp/><ref refid="classUniverse_1aa410d75ac7bfc487dd1194077d7cbfc1" kindref="member">_cells</ref>.end())</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a2fd6f336d08340583bd620a7f5694c90" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Tried<sp/>to<sp/>find<sp/>FSR<sp/>id<sp/>for<sp/>cell<sp/>with<sp/>id<sp/>=<sp/>%d<sp/>in<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>universe<sp/>with<sp/>id<sp/>=<sp/>%d<sp/>but<sp/>no<sp/>cell<sp/>exists&quot;</highlight><highlight class="normal">,<sp/>cell_id,<sp/><ref refid="classUniverse_1a59625074218444923fc88384f13d51bf" kindref="member">_id</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classUniverse_1adca8df0b782ecddad4e1ff65d7621f68" kindref="member">_region_map</ref>.at(cell_id);</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">std::map&lt;short<sp/>int,<sp/>Cell*&gt;<sp/><ref refid="classUniverse_1a2c23d7adc8ea99834f4cdd0e4a26e45a" kindref="member" tooltip="Return the vector of cell pointers in this universe.">Universe::getCells</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classUniverse_1aa410d75ac7bfc487dd1194077d7cbfc1" kindref="member">_cells</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classUniverse_1af045c632c9b336f8d4f7be20c5a510a1" kindref="member" tooltip="Adds a cell to this universe.">Universe::addCell</ref>(<ref refid="classCell" kindref="compound" tooltip="Represents a cell inside of a universe.">Cell</ref>*<sp/>cell)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUniverse_1aa410d75ac7bfc487dd1194077d7cbfc1" kindref="member">_cells</ref>.insert(std::pair&lt;short<sp/>int,<sp/>Cell*&gt;(cell-&gt;<ref refid="classCell_1a5ee7d2b6a1ed18804d207f937e3defaf" kindref="member" tooltip="Return the cell&amp;#39;s user-specified ID.">getId</ref>(),<sp/>cell));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a748005382152808a72b1a9177d9dc806" kindref="member">INFO</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Added<sp/>cell<sp/>with<sp/>id<sp/>=<sp/>%d<sp/>to<sp/>universe<sp/>with<sp/>id<sp/>=<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell-&gt;<ref refid="classCell_1a5ee7d2b6a1ed18804d207f937e3defaf" kindref="member" tooltip="Return the cell&amp;#39;s user-specified ID.">getId</ref>(),<sp/><ref refid="classUniverse_1a59625074218444923fc88384f13d51bf" kindref="member">_id</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a2fd6f336d08340583bd620a7f5694c90" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>add<sp/>cell<sp/>with<sp/>id<sp/>=<sp/>%d<sp/>to<sp/>universe<sp/>with&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>id<sp/>=<sp/>%d.<sp/>Backtrace:\n%s&quot;</highlight><highlight class="normal">,<sp/>cell,<sp/><ref refid="classUniverse_1a59625074218444923fc88384f13d51bf" kindref="member">_id</ref>,<sp/>e.what());</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classUniverse_1a9a2868fbdf186f4842db3c71c1c77373" kindref="member" tooltip="Sets the universe type to SIMPLE or LATTICE.">Universe::setType</ref>(<ref refid="Universe_8h_1a123911615dcd5c50bea706d32683a02a" kindref="member" tooltip="The type of universe.">universeType</ref><sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classUniverse_1ab982650a751c2aae8ebc26e150b71cd1" kindref="member">_type</ref><sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classUniverse_1a0f832001f75c9a3e9b57ba6834d202af" kindref="member" tooltip="Set the origin in global coordinates for this universe.">Universe::setOrigin</ref>(<ref refid="classPoint" kindref="compound" tooltip="Class to represent a 2D point in space.">Point</ref>*<sp/>origin)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classUniverse_1a1a1a80e5a8cc28b9629317edf03b9765" kindref="member">_origin</ref>.<ref refid="classPoint_1ad8bedf2cc41f2414728d83d6976fb55f" kindref="member" tooltip="Set the point&amp;#39;s x-coordinate.">setX</ref>(origin-&gt;<ref refid="classPoint_1af52a20a376f8f31e87658837565d3812" kindref="member" tooltip="Returns this point&amp;#39;s x-coordinate.">getX</ref>());</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classUniverse_1a1a1a80e5a8cc28b9629317edf03b9765" kindref="member">_origin</ref>.<ref refid="classPoint_1a91ab67528ea9e1311d408237448e16c5" kindref="member" tooltip="Set the point&amp;#39;s y-coordinate.">setY</ref>(origin-&gt;<ref refid="classPoint_1aac5008459bf0e0053ce744a69187bae7" kindref="member" tooltip="Returns this point&amp;#39;s y-coordinate.">getY</ref>());</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><ref refid="classCell" kindref="compound" tooltip="Represents a cell inside of a universe.">Cell</ref>*<sp/><ref refid="classUniverse_1a23c055aef2533f10d524979ee8e9f46b" kindref="member" tooltip="Finds the cell for which a localcoords object resides.">Universe::findCell</ref>(<ref refid="classLocalCoords" kindref="compound" tooltip="The localcoords represents a set of local coordinates on some level of nested universes making up the...">LocalCoords</ref>*<sp/>coords,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;short<sp/>int,<sp/>Universe*&gt;<sp/>universes)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCell" kindref="compound" tooltip="Represents a cell inside of a universe.">Cell</ref>*<sp/>return_cell<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;short<sp/>int,<sp/>Cell*&gt;::iterator<sp/>iter;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sets<sp/>the<sp/>localcoord<sp/>type<sp/>to<sp/>UNIV<sp/>at<sp/>this<sp/>level<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>coords-&gt;<ref refid="classLocalCoords_1a5eb0104c614b60dee59177afbf5a1d09" kindref="member" tooltip="Set the type of localcoords (UNIV or LAT).">setType</ref>(<ref refid="LocalCoords_8h_1a9b2c6f3fe231906f231afd6ae7293871a65a2a55bc0cbbb11fedd1f47574b355d" kindref="member">UNIV</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>over<sp/>all<sp/>cells<sp/>in<sp/>this<sp/>universe<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iter<sp/>=<sp/><ref refid="classUniverse_1aa410d75ac7bfc487dd1194077d7cbfc1" kindref="member">_cells</ref>.begin();<sp/>iter<sp/>!=<sp/><ref refid="classUniverse_1aa410d75ac7bfc487dd1194077d7cbfc1" kindref="member">_cells</ref>.end();<sp/>++iter)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCell" kindref="compound" tooltip="Represents a cell inside of a universe.">Cell</ref>*<sp/>cell<sp/>=<sp/>iter-&gt;second;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell-&gt;<ref refid="classCell_1a89c95a180daff341176d78c5d573da53" kindref="member" tooltip="Determines whether a point is contained inside a cell.">cellContainsCoords</ref>(coords))<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>cell<sp/>on<sp/>this<sp/>level<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords-&gt;<ref refid="classLocalCoords_1aac97ca92f795081c3472b5dd219795aa" kindref="member" tooltip="Set the id of the cell within which this localcoords resides.">setCell</ref>(cell-&gt;<ref refid="classCell_1a5ee7d2b6a1ed18804d207f937e3defaf" kindref="member" tooltip="Return the cell&amp;#39;s user-specified ID.">getId</ref>());</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>MATERIAL<sp/>type<sp/>cell<sp/>-<sp/>lowest<sp/>level,<sp/>terminate<sp/>search<sp/>for<sp/>cell<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell-&gt;<ref refid="classCell_1af0421cc4cbb034947b2b7ec18c6df7d0" kindref="member" tooltip="Return the cell type (FILL or MATERIAL).">getType</ref>()<sp/>==<sp/><ref refid="Cell_8h_1a274ceed3b07859c48505f65b1fe42328a23f8f5e62324af5f4d8f899cee8fb70d" kindref="member">MATERIAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords-&gt;<ref refid="classLocalCoords_1aac97ca92f795081c3472b5dd219795aa" kindref="member" tooltip="Set the id of the cell within which this localcoords resides.">setCell</ref>(cell-&gt;<ref refid="classCell_1a5ee7d2b6a1ed18804d207f937e3defaf" kindref="member" tooltip="Return the cell&amp;#39;s user-specified ID.">getId</ref>());</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_cell<sp/>=<sp/>cell;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>return_cell;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FILL<sp/>type<sp/>cell<sp/>-<sp/>cell<sp/>contains<sp/>a<sp/>universe<sp/>at<sp/>a<sp/>lower<sp/>level</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Update<sp/>coords<sp/>to<sp/>next<sp/>level<sp/>and<sp/>continue<sp/>search<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell-&gt;<ref refid="classCell_1af0421cc4cbb034947b2b7ec18c6df7d0" kindref="member" tooltip="Return the cell type (FILL or MATERIAL).">getType</ref>()<sp/>==<sp/><ref refid="Cell_8h_1a274ceed3b07859c48505f65b1fe42328a1d3754a297a681486f8cb3138a27c28b" kindref="member">FILL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classLocalCoords" kindref="compound" tooltip="The localcoords represents a set of local coordinates on some level of nested universes making up the...">LocalCoords</ref>*<sp/>next_coords;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coords-&gt;<ref refid="classLocalCoords_1a2072734614ca0d7b945fd20ed59f4594" kindref="member" tooltip="Return a pointer to the localcoord at the next lower nested universe level if one exists...">getNext</ref>()<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_coords<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classLocalCoords" kindref="compound" tooltip="The localcoords represents a set of local coordinates on some level of nested universes making up the...">LocalCoords</ref>(coords-&gt;<ref refid="classLocalCoords_1a9623e05ee2de4ace57a7595a154a3764" kindref="member" tooltip="Returns the x-coordinate for this localcoords location.">getX</ref>(),</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords-&gt;<ref refid="classLocalCoords_1ac2ca0a99b00c2aa5784ff82fba2a3618" kindref="member" tooltip="Returns the y-coordinate for this localcoords location.">getY</ref>());</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_coords<sp/>=<sp/>coords-&gt;<ref refid="classLocalCoords_1a2072734614ca0d7b945fd20ed59f4594" kindref="member" tooltip="Return a pointer to the localcoord at the next lower nested universe level if one exists...">getNext</ref>();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCellFill" kindref="compound" tooltip="Represents a cell filled with a universe.">CellFill</ref>*<sp/>cell_fill<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classCellFill" kindref="compound" tooltip="Represents a cell filled with a universe.">CellFill</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cell);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>universe_id<sp/>=<sp/>cell_fill-&gt;<ref refid="classCellFill_1ae657ae09fe0b6532f20d214e4b774228" kindref="member" tooltip="Return the ID of the universe filling this cell.">getUniverseFillId</ref>();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_coords-&gt;<ref refid="classLocalCoords_1a74f4a16775592fd84c8e4cdccd10b486" kindref="member" tooltip="Set the id of the universe within which this localcoords resides.">setUniverse</ref>(universe_id);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUniverse" kindref="compound" tooltip="A universe represents an unbounded space in the 2D xy-plane.">Universe</ref>*<sp/>univ<sp/>=<sp/>universes.at(universe_id);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords-&gt;<ref refid="classLocalCoords_1aac97ca92f795081c3472b5dd219795aa" kindref="member" tooltip="Set the id of the cell within which this localcoords resides.">setCell</ref>(cell-&gt;<ref refid="classCell_1a5ee7d2b6a1ed18804d207f937e3defaf" kindref="member" tooltip="Return the cell&amp;#39;s user-specified ID.">getId</ref>());</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords-&gt;<ref refid="classLocalCoords_1ad0d95a64372a6b60c4a7276350380c7c" kindref="member" tooltip="Sets the pointer to the localcoords on the next lower nested universe level.">setNext</ref>(next_coords);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_coords-&gt;<ref refid="classLocalCoords_1a433a17c4bfb3f491a16a6067e05067ae" kindref="member" tooltip="Sets the pointer to the localcoords on the next higher nested universe level.">setPrev</ref>(coords);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(univ-&gt;<ref refid="classUniverse_1a6cbde58618cfcec5f72780b2911ab97b" kindref="member" tooltip="Return the universe type (SIMPLE or LATTICE).">getType</ref>()<sp/>==<sp/><ref refid="Universe_8h_1a123911615dcd5c50bea706d32683a02aa1a6b6e9893ec9e5d9710335b4c74d3f6" kindref="member">SIMPLE</ref>)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>univ-&gt;<ref refid="classUniverse_1a23c055aef2533f10d524979ee8e9f46b" kindref="member" tooltip="Finds the cell for which a localcoords object resides.">findCell</ref>(next_coords,<sp/>universes);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classLattice" kindref="compound" tooltip="Represents a repeating 2D lattice array of universes.">Lattice</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(univ)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<ref refid="classUniverse_1a23c055aef2533f10d524979ee8e9f46b" kindref="member" tooltip="Finds the cell for which a localcoords object resides.">findCell</ref>(next_coords,<sp/>universes);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>return_cell;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal">std::string<sp/><ref refid="classUniverse_1a9bc78841d661eb12afa51ca04ae31368" kindref="member" tooltip="Convert the member attributes of this universe to a character array.">Universe::toString</ref>()<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>string;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;short<sp/>int,<sp/>Cell*&gt;::iterator<sp/>iter;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Universe<sp/>id<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classUniverse_1a59625074218444923fc88384f13d51bf" kindref="member">_id</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>type<sp/>=<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classUniverse_1ab982650a751c2aae8ebc26e150b71cd1" kindref="member">_type</ref><sp/>==<sp/><ref refid="Universe_8h_1a123911615dcd5c50bea706d32683a02aa1a6b6e9893ec9e5d9710335b4c74d3f6" kindref="member">SIMPLE</ref>)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SIMPLE&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LATTICE&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>num<sp/>cells<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classUniverse_1aa410d75ac7bfc487dd1194077d7cbfc1" kindref="member">_cells</ref>.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>cell<sp/>ids<sp/>=<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iter<sp/>=<sp/><ref refid="classUniverse_1aa410d75ac7bfc487dd1194077d7cbfc1" kindref="member">_cells</ref>.begin();<sp/>iter<sp/>!=<sp/><ref refid="classUniverse_1aa410d75ac7bfc487dd1194077d7cbfc1" kindref="member">_cells</ref>.end();<sp/>++iter)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iter-&gt;first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.str();</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classUniverse_1a9d7f74890c13dc3856a694b4f142f985" kindref="member" tooltip="Prints a string representation of all of the universe&amp;#39;s objects to the console.">Universe::printString</ref>()<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a7186ecefe792fdae9fec0a42f105ad6b" kindref="member">RESULT</ref>,<sp/><ref refid="classUniverse_1a9bc78841d661eb12afa51ca04ae31368" kindref="member" tooltip="Convert the member attributes of this universe to a character array.">toString</ref>().c_str());</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classUniverse_1af76741be6456d3542a302024fd4c52e4" kindref="member" tooltip="Compute the FSR maps for this universe and return the number of FSRs inside the universe.">Universe::computeFSRMaps</ref>()<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>a<sp/>counter<sp/>count<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;short<sp/>int,<sp/>Cell*&gt;::iterator<sp/>iter;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>loop<sp/>over<sp/>cells<sp/>in<sp/>the<sp/>universe<sp/>to<sp/>set<sp/>the<sp/>map<sp/>and<sp/>update<sp/>count<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iter<sp/>=<sp/><ref refid="classUniverse_1aa410d75ac7bfc487dd1194077d7cbfc1" kindref="member">_cells</ref>.begin();<sp/>iter<sp/>!=<sp/><ref refid="classUniverse_1aa410d75ac7bfc487dd1194077d7cbfc1" kindref="member">_cells</ref>.end();<sp/>++iter)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUniverse_1adca8df0b782ecddad4e1ff65d7621f68" kindref="member">_region_map</ref>.insert(std::pair&lt;int,<sp/>int&gt;(iter-&gt;first,<sp/>count));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>iter-&gt;second-&gt;getNumFSRs();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classUniverse_1ae3952c88390eda788da540d421d0b139" kindref="member" tooltip="Subdivides all of the cells within this universe into rings and angular sectors.">Universe::subdivideCells</ref>()<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a0593585da9181e972974c1274d8f2b4f" kindref="member">DEBUG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Subdividing<sp/>cells<sp/>for<sp/>universe<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>_id);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;short<sp/>int,<sp/>Cell*&gt;::iterator<sp/>iter1;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter1<sp/>!=<sp/><ref refid="classUniverse_1aa410d75ac7bfc487dd1194077d7cbfc1" kindref="member">_cells</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iter1<sp/>=<sp/><ref refid="classUniverse_1aa410d75ac7bfc487dd1194077d7cbfc1" kindref="member">_cells</ref>.begin();<sp/>iter1<sp/>!=<sp/><ref refid="classUniverse_1aa410d75ac7bfc487dd1194077d7cbfc1" kindref="member">_cells</ref>.end();<sp/>++iter1)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*iter1).second-&gt;getType()<sp/>==<sp/><ref refid="Cell_8h_1a274ceed3b07859c48505f65b1fe42328a23f8f5e62324af5f4d8f899cee8fb70d" kindref="member">MATERIAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCellBasic" kindref="compound" tooltip="Represents a cell filled with a material.">CellBasic</ref>*<sp/>cell<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classCellBasic" kindref="compound" tooltip="Represents a cell filled with a material.">CellBasic</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((*iter1).second);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell-&gt;<ref refid="classCellBasic_1afb947abd7222748cee6af104845506c3" kindref="member" tooltip="Return the number of rings in the cell.">getNumRings</ref>()<sp/>&gt;<sp/>0<sp/>||<sp/>cell-&gt;<ref refid="classCellBasic_1a34740bd6ab41262ce6cf929e05ea9027" kindref="member" tooltip="Return the number of sectors in the cell.">getNumSectors</ref>()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;CellBasic*&gt;<sp/>newcells<sp/>=<sp/>cell-&gt;<ref refid="classCellBasic_1a68bcdce0e270b6b439ba878a0694d5b1" kindref="member" tooltip="Subdivides a cells into rings and sectors.">subdivideCell</ref>();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a0593585da9181e972974c1274d8f2b4f" kindref="member">DEBUG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;cell<sp/>%d<sp/>in<sp/>universe<sp/>%d<sp/>has<sp/>%d<sp/>subcells&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell-&gt;<ref refid="classCell_1a5ee7d2b6a1ed18804d207f937e3defaf" kindref="member" tooltip="Return the cell&amp;#39;s user-specified ID.">getId</ref>(),<sp/><ref refid="classUniverse_1a59625074218444923fc88384f13d51bf" kindref="member">_id</ref>,<sp/>newcells.size());</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;CellBasic*&gt;::iterator<sp/>iter2;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iter2=newcells.begin();<sp/>iter2!=newcells.end();<sp/>++iter2)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUniverse_1af045c632c9b336f8d4f7be20c5a510a1" kindref="member" tooltip="Adds a cell to this universe.">addCell</ref>((*iter2));</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUniverse_1aa410d75ac7bfc487dd1194077d7cbfc1" kindref="member">_cells</ref>.erase(iter1);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><ref refid="classLattice_1a057db59a2a7b471ca3d9af94b41d4d6e" kindref="member" tooltip="Constructor sets the user-specified and unique IDs for this lattice.">Lattice::Lattice</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width_x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width_y):<sp/></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classUniverse" kindref="compound" tooltip="A universe represents an unbounded space in the 2D xy-plane.">Universe</ref>(id)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>_width_x<sp/>=<sp/>width_x;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>_width_y<sp/>=<sp/>width_y;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>_type<sp/>=<sp/><ref refid="Universe_8h_1a123911615dcd5c50bea706d32683a02aa339a8cc891972f1e75bb948454f358be" kindref="member">LATTICE</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Default<sp/>number<sp/>of<sp/>lattice<sp/>cells<sp/>along<sp/>each<sp/>dimension<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>_num_y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>_num_x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><ref refid="classLattice_1a91be54ce9927b6bc53d30a2faf760780" kindref="member" tooltip="Destructor clears memory for all of universes pointers.">Lattice::~Lattice</ref>()<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>_num_x;<sp/>i++){</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_universes.at(i).clear();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>_universes.clear();</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classLattice_1aa72ae9812e91b1a4a907dfc1107c0393" kindref="member" tooltip="Return the number of lattice cells along the x-axis.">Lattice::getNumX</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_num_x;</highlight></codeline>
<codeline lineno="332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classLattice_1a9f978534c7ac76cc8b98e815e271e978" kindref="member" tooltip="Return the number of lattice cells along the y-axis.">Lattice::getNumY</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_num_y;</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><ref refid="classPoint" kindref="compound" tooltip="Class to represent a 2D point in space.">Point</ref>*<sp/><ref refid="classLattice_1ac74c38894f48a1f3462178cd07b6c00b" kindref="member" tooltip="Return the origin of the lattice.">Lattice::getOrigin</ref>()<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<ref refid="classUniverse_1a1a1a80e5a8cc28b9629317edf03b9765" kindref="member">_origin</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal">std::vector&lt;<sp/>std::vector&lt;<sp/>std::pair&lt;short<sp/>int,<sp/>Universe*&gt;<sp/>&gt;<sp/>&gt;<sp/></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><ref refid="classLattice_1ae6b84cf43026d5e4ee368bab59910cdb" kindref="member" tooltip="Return a 2D vector array of the universes in the lattice.">Lattice::getUniverses</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_universes;</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><ref refid="classUniverse" kindref="compound" tooltip="A universe represents an unbounded space in the 2D xy-plane.">Universe</ref>*<sp/><ref refid="classLattice_1a0b1b5aa06a73064c65d08332c13f973f" kindref="member" tooltip="Returns a pointer to the universe within a specific lattice cell.">Lattice::getUniverse</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lattice_x,</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lattice_y)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Checks<sp/>that<sp/>lattice<sp/>indices<sp/>are<sp/>within<sp/>the<sp/>bounds<sp/>of<sp/>the<sp/>lattice<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lattice_x<sp/>&gt;<sp/>_num_x<sp/>||<sp/>lattice_y<sp/>&gt;<sp/>_num_y)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a2fd6f336d08340583bd620a7f5694c90" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>retrieve<sp/>universe<sp/>from<sp/>lattice<sp/>id<sp/>=<sp/>%d:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Index<sp/>out<sp/>of<sp/>bounds:<sp/>Tried<sp/>to<sp/>access<sp/>cell<sp/>x<sp/>=<sp/>%d,<sp/>y<sp/>=<sp/>%d<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;but<sp/>bounds<sp/>are<sp/>x<sp/>=<sp/>%d,<sp/>y<sp/>=<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>_id,<sp/>lattice_x,<sp/>lattice_y,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_num_x,<sp/>_num_y);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_universes.at(lattice_y).at(lattice_x).second;</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classLattice_1acb5c93de94618ab65ef61f18a93e48b3" kindref="member" tooltip="Return the width of the lattice along the x-axis.">Lattice::getWidthX</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_width_x;</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classLattice_1ad54b31fc59330eaadf4c6b81e034a199" kindref="member" tooltip="Return the width of the lattice along the y-axis.">Lattice::getWidthY</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_width_y;</highlight></codeline>
<codeline lineno="397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classLattice_1a5c290c37b0e29a22764acf7e7e74ba22" kindref="member" tooltip="Return the id of a flat source region base index (smallest FSR region id within a specific lattice ce...">Lattice::getFSR</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lat_x,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lat_y)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>lattice<sp/>indices<sp/>are<sp/>out<sp/>of<sp/>bounds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lat_x<sp/>&gt;<sp/>_num_x<sp/>||<sp/>lat_y<sp/>&gt;<sp/>_num_y)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a2fd6f336d08340583bd620a7f5694c90" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Tried<sp/>to<sp/>access<sp/>FSR<sp/>map<sp/>of<sp/>lattice<sp/>id<sp/>=<sp/>%d,<sp/>but<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;indices<sp/>lat_x<sp/>=<sp/>%d<sp/>and<sp/>lat_y<sp/>=<sp/>%d<sp/>were<sp/>out<sp/>of<sp/>bounds&quot;</highlight><highlight class="normal">,<sp/>_id,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lat_x,<sp/>lat_y);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_region_map[lat_y][lat_x].second;</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classLattice_1a9a59a806e3629135d7ea784669a6c12c" kindref="member" tooltip="Sets the pointer to a universe filling one of this lattice&amp;#39;s lattice cells.">Lattice::setUniversePointer</ref>(<ref refid="classUniverse" kindref="compound" tooltip="A universe represents an unbounded space in the 2D xy-plane.">Universe</ref>*<sp/>universe)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>_surfaces<sp/>contains<sp/>this<sp/>surface<sp/>id<sp/>and<sp/>delete<sp/>the<sp/>id</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>otherwise<sp/>throw<sp/>an<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>universe_id<sp/>=<sp/>universe-&gt;<ref refid="classUniverse_1a4f7c4329c04e78b6a62f8977dfe3d115" kindref="member">getId</ref>();</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>universe_not_found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>over<sp/>all<sp/>universes<sp/>in<sp/>lattice<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>_num_y;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j&lt;<sp/>_num_x;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Checks<sp/>if<sp/>the<sp/>universe<sp/>id<sp/>matches<sp/>what<sp/>the<sp/>lattice&apos;s</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>universes<sp/>container<sp/>expects<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_universes.at(i).at(j).first<sp/>==<sp/>universe_id)<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_universes[i][j].second<sp/>=<sp/>universe;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>universe_not_found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(universe_not_found)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a984de77c680eaff141ec910e25568a81" kindref="member">WARNING</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Tried<sp/>to<sp/>set<sp/>the<sp/>universe<sp/>pointer<sp/>for<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;lattice<sp/>id<sp/>=<sp/>%d<sp/>for<sp/>universe<sp/>id<sp/>=<sp/>%d<sp/>but<sp/>the<sp/>lattice<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;does<sp/>not<sp/>contain<sp/>the<sp/>universe&quot;</highlight><highlight class="normal">,<sp/>_id,<sp/>universe_id);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a748005382152808a72b1a9177d9dc806" kindref="member">INFO</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Set<sp/>the<sp/>universe<sp/>pointer<sp/>for<sp/>lattice<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;id<sp/>=<sp/>%d<sp/>for<sp/>universe<sp/>id<sp/>=<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>_id,<sp/>universe_id);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classLattice_1a89b07f10fdb35efdbe5701c54cfbd548" kindref="member" tooltip="Sets the arrary of universe IDs filling each lattice cell.">Lattice::setLatticeCells</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_y,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*<sp/>universes)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>_num_x<sp/>=<sp/>num_x;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>_num_y<sp/>=<sp/>num_y;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>origin<sp/>to<sp/>lower<sp/>left<sp/>corner<sp/>with<sp/>(x=0,<sp/>y=0)<sp/>in<sp/>center<sp/>of<sp/>lattice<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classUniverse_1a1a1a80e5a8cc28b9629317edf03b9765" kindref="member">_origin</ref>.<ref refid="classPoint_1ad8bedf2cc41f2414728d83d6976fb55f" kindref="member" tooltip="Set the point&amp;#39;s x-coordinate.">setX</ref>(-_width_x*_num_x/2.0);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classUniverse_1a1a1a80e5a8cc28b9629317edf03b9765" kindref="member">_origin</ref>.<ref refid="classPoint_1a91ab67528ea9e1311d408237448e16c5" kindref="member" tooltip="Set the point&amp;#39;s y-coordinate.">setY</ref>(-_width_y*_num_y/2.0);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classUniverse" kindref="compound" tooltip="A universe represents an unbounded space in the 2D xy-plane.">Universe</ref>*<sp/>empty_universe_pointer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>parser<sp/>gives<sp/>the<sp/>lattice<sp/>cells<sp/>in<sp/>row<sp/>major<sp/>order<sp/>starting<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>upper<sp/>left<sp/>corner.<sp/>This<sp/>double<sp/>loop<sp/>reorders<sp/>the<sp/>lattice<sp/>cells<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>start<sp/>from<sp/>the<sp/>lower<sp/>left<sp/>corner<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>_num_y;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_universes.push_back(std::vector&lt;<sp/>std::pair&lt;short<sp/>int,<sp/>Universe*&gt;<sp/>&gt;());</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j&lt;<sp/>_num_x;<sp/>j++){</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_universes.at(i).push_back(std::pair&lt;short<sp/>int,<sp/>Universe*&gt;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(universes[(_num_y-1-i)*_num_x<sp/>+<sp/>j],<sp/></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>empty_universe_pointer));</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>intialize<sp/>_region_map<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>_num_y;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_region_map.push_back(std::vector&lt;<sp/>std::pair&lt;int,<sp/>int&gt;<sp/>&gt;());</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>_num_x;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_region_map.at(i).push_back(std::pair&lt;int,<sp/>int&gt;());</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classLattice_1aaa38ae681b8814661033c99f6410fadd" kindref="member" tooltip="Checks if a point is within the bounds of a lattice.">Lattice::withinBounds</ref>(<ref refid="classPoint" kindref="compound" tooltip="Class to represent a 2D point in space.">Point</ref>*<sp/>point)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computes<sp/>the<sp/>lattice<sp/>bounds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bound_x<sp/>=<sp/>_num_x/2.0<sp/>*<sp/>_width_x;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bound_y<sp/>=<sp/>_num_y/2.0<sp/>*<sp/>_width_y;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>point-&gt;<ref refid="classPoint_1af52a20a376f8f31e87658837565d3812" kindref="member" tooltip="Returns this point&amp;#39;s x-coordinate.">getX</ref>();</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>point-&gt;<ref refid="classPoint_1aac5008459bf0e0053ce744a69187bae7" kindref="member" tooltip="Returns this point&amp;#39;s y-coordinate.">getY</ref>();</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>point<sp/>is<sp/>outside<sp/>the<sp/>x<sp/>bounds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;<sp/>bound_x<sp/>||<sp/>x<sp/>&lt;<sp/>-1*bound_x)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>point<sp/>is<sp/>outside<sp/>the<sp/>y<sp/>boounds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;<sp/>bound_y<sp/>||<sp/>y<sp/>&lt;<sp/>-1*bound_y)</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>point<sp/>is<sp/>within<sp/>the<sp/>bounds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><ref refid="classCell" kindref="compound" tooltip="Represents a cell inside of a universe.">Cell</ref>*<sp/><ref refid="classLattice_1a463e4fba851c367d6c46ed777a7de7e8" kindref="member" tooltip="Finds the cell within this lattice that a localcoords is in.">Lattice::findCell</ref>(<ref refid="classLocalCoords" kindref="compound" tooltip="The localcoords represents a set of local coordinates on some level of nested universes making up the...">LocalCoords</ref>*<sp/>coords,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;short<sp/>int,<sp/>Universe*&gt;<sp/>universes)<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>localcoord<sp/>to<sp/>be<sp/>a<sp/>LAT<sp/>type<sp/>at<sp/>this<sp/>level<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>coords-&gt;<ref refid="classLocalCoords_1a5eb0104c614b60dee59177afbf5a1d09" kindref="member" tooltip="Set the type of localcoords (UNIV or LAT).">setType</ref>(<ref refid="LocalCoords_8h_1a9b2c6f3fe231906f231afd6ae7293871a40df096e8ca19a820dbd94de79e97b3b" kindref="member">LAT</ref>);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>the<sp/>x<sp/>and<sp/>y<sp/>indices<sp/>for<sp/>the<sp/>lattice<sp/>cell<sp/>this<sp/>coord<sp/>is<sp/>in<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lat_x<sp/>=<sp/>(int)floor((coords-&gt;<ref refid="classLocalCoords_1a9623e05ee2de4ace57a7595a154a3764" kindref="member" tooltip="Returns the x-coordinate for this localcoords location.">getX</ref>()<sp/>-<sp/><ref refid="classUniverse_1a1a1a80e5a8cc28b9629317edf03b9765" kindref="member">_origin</ref>.<ref refid="classPoint_1af52a20a376f8f31e87658837565d3812" kindref="member" tooltip="Returns this point&amp;#39;s x-coordinate.">getX</ref>())<sp/>/<sp/>_width_x);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lat_y<sp/>=<sp/>(int)floor((coords-&gt;<ref refid="classLocalCoords_1ac2ca0a99b00c2aa5784ff82fba2a3618" kindref="member" tooltip="Returns the y-coordinate for this localcoords location.">getY</ref>()<sp/>-<sp/><ref refid="classUniverse_1a1a1a80e5a8cc28b9629317edf03b9765" kindref="member">_origin</ref>.<ref refid="classPoint_1aac5008459bf0e0053ce744a69187bae7" kindref="member" tooltip="Returns this point&amp;#39;s y-coordinate.">getY</ref>())<sp/>/<sp/>_width_y);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>the<sp/>localcoord<sp/>is<sp/>on<sp/>the<sp/>lattice<sp/>boundaries<sp/>and<sp/>if<sp/>so<sp/>adjust</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>x<sp/>or<sp/>y<sp/>lattice<sp/>cell<sp/>indices<sp/>i<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(fabs(coords-&gt;<ref refid="classLocalCoords_1a9623e05ee2de4ace57a7595a154a3764" kindref="member" tooltip="Returns the x-coordinate for this localcoords location.">getX</ref>())<sp/>-<sp/>_num_x*_width_x*0.5)<sp/>&lt;<sp/></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Universe_8h_1ad8a93cce3a9cd77aa9fc698dd9af26e7" kindref="member">ON_LATTICE_CELL_THRESH</ref>)<sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coords-&gt;<ref refid="classLocalCoords_1a9623e05ee2de4ace57a7595a154a3764" kindref="member" tooltip="Returns the x-coordinate for this localcoords location.">getX</ref>()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lat_x<sp/>=<sp/>_num_x<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lat_x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(fabs(coords-&gt;<ref refid="classLocalCoords_1ac2ca0a99b00c2aa5784ff82fba2a3618" kindref="member" tooltip="Returns the y-coordinate for this localcoords location.">getY</ref>())<sp/>-<sp/>_num_y*_width_y*0.5)<sp/>&lt;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Universe_8h_1ad8a93cce3a9cd77aa9fc698dd9af26e7" kindref="member">ON_LATTICE_CELL_THRESH</ref>)<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coords-&gt;<ref refid="classLocalCoords_1ac2ca0a99b00c2aa5784ff82fba2a3618" kindref="member" tooltip="Returns the y-coordinate for this localcoords location.">getY</ref>()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lat_y<sp/>=<sp/>_num_y<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lat_y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>indices<sp/>are<sp/>outside<sp/>the<sp/>bound<sp/>of<sp/>the<sp/>lattice<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lat_x<sp/>&lt;<sp/>0<sp/>||<sp/>lat_x<sp/>&gt;=<sp/>_num_x<sp/>||</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>lat_y<sp/>&lt;<sp/>0<sp/>||<sp/>lat_y<sp/>&gt;=<sp/>_num_y)<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>local<sp/>position<sp/>of<sp/>particle<sp/>in<sp/>the<sp/>next<sp/>level<sp/>universe<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nextX<sp/>=<sp/>coords-&gt;<ref refid="classLocalCoords_1a9623e05ee2de4ace57a7595a154a3764" kindref="member" tooltip="Returns the x-coordinate for this localcoords location.">getX</ref>()<sp/>-<sp/>(<ref refid="classUniverse_1a1a1a80e5a8cc28b9629317edf03b9765" kindref="member">_origin</ref>.<ref refid="classPoint_1af52a20a376f8f31e87658837565d3812" kindref="member" tooltip="Returns this point&amp;#39;s x-coordinate.">getX</ref>()</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(lat_x<sp/>+<sp/>0.5)<sp/>*<sp/>_width_x);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nextY<sp/>=<sp/>coords-&gt;<ref refid="classLocalCoords_1ac2ca0a99b00c2aa5784ff82fba2a3618" kindref="member" tooltip="Returns the y-coordinate for this localcoords location.">getY</ref>()<sp/>-<sp/>(<ref refid="classUniverse_1a1a1a80e5a8cc28b9629317edf03b9765" kindref="member">_origin</ref>.<ref refid="classPoint_1aac5008459bf0e0053ce744a69187bae7" kindref="member" tooltip="Returns this point&amp;#39;s y-coordinate.">getY</ref>()</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(lat_y<sp/>+<sp/>0.5)<sp/>*<sp/>_width_y);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>a<sp/>new<sp/>localcoords<sp/>object<sp/>for<sp/>the<sp/>next<sp/>level<sp/>universe<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classLocalCoords" kindref="compound" tooltip="The localcoords represents a set of local coordinates on some level of nested universes making up the...">LocalCoords</ref>*<sp/>next_coords;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coords-&gt;<ref refid="classLocalCoords_1a2072734614ca0d7b945fd20ed59f4594" kindref="member" tooltip="Return a pointer to the localcoord at the next lower nested universe level if one exists...">getNext</ref>()<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_coords<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classLocalCoords" kindref="compound" tooltip="The localcoords represents a set of local coordinates on some level of nested universes making up the...">LocalCoords</ref>(nextX,<sp/>nextY);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_coords<sp/>=<sp/>coords-&gt;<ref refid="classLocalCoords_1a2072734614ca0d7b945fd20ed59f4594" kindref="member" tooltip="Return a pointer to the localcoord at the next lower nested universe level if one exists...">getNext</ref>();</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>universe_id<sp/>=<sp/><ref refid="classLattice_1a0b1b5aa06a73064c65d08332c13f973f" kindref="member" tooltip="Returns a pointer to the universe within a specific lattice cell.">getUniverse</ref>(lat_x,<sp/>lat_y)-&gt;<ref refid="classUniverse_1a4f7c4329c04e78b6a62f8977dfe3d115" kindref="member">getId</ref>();</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classUniverse" kindref="compound" tooltip="A universe represents an unbounded space in the 2D xy-plane.">Universe</ref>*<sp/>univ<sp/>=<sp/>universes.at(universe_id);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>next_coords-&gt;<ref refid="classLocalCoords_1a74f4a16775592fd84c8e4cdccd10b486" kindref="member" tooltip="Set the id of the universe within which this localcoords resides.">setUniverse</ref>(universe_id);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>lattice<sp/>indices<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>coords-&gt;<ref refid="classLocalCoords_1a61da1c8cfc72af7514c55822714e5258" kindref="member" tooltip="Sets the id of the lattice within which this localcoords resides.">setLattice</ref>(_id);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>coords-&gt;<ref refid="classLocalCoords_1a8940ee0b1d5698483dd646b8f2275f71" kindref="member" tooltip="Sets the first index for the lattice cell within which this localcoords resides.">setLatticeX</ref>(lat_x);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>coords-&gt;<ref refid="classLocalCoords_1ac12edaa6db88e7be90a622e8fdbac244" kindref="member" tooltip="Sets the second index for the lattice cell within which this localcoords resides.">setLatticeY</ref>(lat_y);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>coords-&gt;<ref refid="classLocalCoords_1ad0d95a64372a6b60c4a7276350380c7c" kindref="member" tooltip="Sets the pointer to the localcoords on the next lower nested universe level.">setNext</ref>(next_coords);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>next_coords-&gt;<ref refid="classLocalCoords_1a433a17c4bfb3f491a16a6067e05067ae" kindref="member" tooltip="Sets the pointer to the localcoords on the next higher nested universe level.">setPrev</ref>(coords);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Search<sp/>the<sp/>next<sp/>lowest<sp/>level<sp/>universe<sp/>for<sp/>the<sp/>cell<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>univ-&gt;<ref refid="classUniverse_1a23c055aef2533f10d524979ee8e9f46b" kindref="member" tooltip="Finds the cell for which a localcoords object resides.">findCell</ref>(next_coords,<sp/>universes);</highlight></codeline>
<codeline lineno="591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><ref refid="classCell" kindref="compound" tooltip="Represents a cell inside of a universe.">Cell</ref>*<sp/><ref refid="classLattice_1af5b9506d18a4ebcd2bf4932c0ab6d86a" kindref="member" tooltip="Finds the next cell for a localcoords object along a trajectory defined by some angle (in radians fro...">Lattice::findNextLatticeCell</ref>(<ref refid="classLocalCoords" kindref="compound" tooltip="The localcoords represents a set of local coordinates on some level of nested universes making up the...">LocalCoords</ref>*<sp/>coords,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle,</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;short<sp/>int,<sp/>Universe*&gt;<sp/>universes)<sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Tests<sp/>the<sp/>upper,<sp/>lower,<sp/>left<sp/>and<sp/>right<sp/>lattice<sp/>cells<sp/>adjacent<sp/>to</highlight></codeline>
<codeline lineno="616"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>localcoord<sp/>and<sp/>uses<sp/>the<sp/>one<sp/>with<sp/>the<sp/>shortest<sp/>distance<sp/>from</highlight></codeline>
<codeline lineno="617"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>current<sp/>location<sp/>of<sp/>the<sp/>localcoord<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initial<sp/>distance<sp/>is<sp/>infinity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distance<sp/>=<sp/>std::numeric_limits&lt;double&gt;::infinity();</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Current<sp/>minimum<sp/>distance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Properties<sp/>of<sp/>the<sp/>current<sp/>localcoords<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x0<sp/>=<sp/>coords-&gt;<ref refid="classLocalCoords_1a9623e05ee2de4ace57a7595a154a3764" kindref="member" tooltip="Returns the x-coordinate for this localcoords location.">getX</ref>();</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y0<sp/>=<sp/>coords-&gt;<ref refid="classLocalCoords_1ac2ca0a99b00c2aa5784ff82fba2a3618" kindref="member" tooltip="Returns the y-coordinate for this localcoords location.">getY</ref>();</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lattice_x<sp/>=<sp/>coords-&gt;<ref refid="classLocalCoords_1a98a422016cd0e5e8a791a44784a3f6ac" kindref="member" tooltip="Return the first index of the lattice cell within which this localcoords resides.">getLatticeX</ref>();</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lattice_y<sp/>=<sp/>coords-&gt;<ref refid="classLocalCoords_1a82c184c2b1327bae01e7a607bbdc07f5" kindref="member" tooltip="Return the second index of the lattice cell within which this localcoords resides.">getLatticeY</ref>();</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Slope<sp/>of<sp/>trajectory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>sin(angle)<sp/>/<sp/>cos(angle);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Properties<sp/>of<sp/>the<sp/>new<sp/>location<sp/>for<sp/>localcoords<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Current<sp/>point<sp/>of<sp/>minimum<sp/>distance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x_curr,<sp/>y_curr;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>x-coordinate<sp/>on<sp/>new<sp/>lattice<sp/>cell<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x_new<sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>y-coordinate<sp/>on<sp/>new<sp/>lattice<sp/>cell<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y_new<sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>New<sp/>x<sp/>lattice<sp/>cell<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_lattice_x;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>New<sp/>y<sp/>lattice<sp/>cell<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_lattice_y;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>point<sp/>for<sp/>computing<sp/>distance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPoint" kindref="compound" tooltip="Class to represent a 2D point in space.">Point</ref><sp/>test;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>lower<sp/>lattice<sp/>cell<sp/>Lower<sp/>lattice<sp/>cell<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lattice_y<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>angle<sp/>&gt;=<sp/>M_PI)<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_curr<sp/>=<sp/>(lattice_y<sp/>-<sp/>_num_y/2.0)<sp/>*<sp/>_width_y;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>x_curr<sp/>=<sp/>x0<sp/>+<sp/>(y_curr<sp/>-<sp/>y0)<sp/>/<sp/>m;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>test.<ref refid="classPoint_1a21046f7efa6623eb78ae1ffc46b1820a" kindref="member" tooltip="Initializes a point with two-dimensional coordinates.">setCoords</ref>(x_curr,<sp/>y_curr);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>the<sp/>test<sp/>point<sp/>is<sp/>within<sp/>the<sp/>bounds<sp/>of<sp/>the<sp/>lattice<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classLattice_1aaa38ae681b8814661033c99f6410fadd" kindref="member" tooltip="Checks if a point is within the bounds of a lattice.">withinBounds</ref>(&amp;test))<sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>test.<ref refid="classPoint_1a1000c6590f93653b2d8d3b45991f60c9" kindref="member" tooltip="Compute the distance from this point to another point of interest.">distanceToPoint</ref>(coords-&gt;<ref refid="classLocalCoords_1aff39b0f4a6cd5de5347ab154000d349b" kindref="member" tooltip="Returns a pointer to the point containing the coordinates for this localcoord.">getPoint</ref>());</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>distance<sp/>to<sp/>test<sp/>point<sp/>is<sp/>current<sp/>minimum<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;<sp/>distance)<sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distance<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_new<sp/>=<sp/>x_curr;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_new<sp/>=<sp/>y_curr;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Upper<sp/>lattice<sp/>cell<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lattice_y<sp/>&lt;=<sp/>_num_y-1<sp/>&amp;&amp;<sp/>angle<sp/>&lt;=<sp/>M_PI)<sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_curr<sp/>=<sp/>(lattice_y<sp/>-<sp/>_num_y/2.0<sp/>+<sp/>1)<sp/>*<sp/>_width_y;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>x_curr<sp/>=<sp/>x0<sp/>+<sp/>(y_curr<sp/>-<sp/>y0)<sp/>/<sp/>m;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>test.<ref refid="classPoint_1a21046f7efa6623eb78ae1ffc46b1820a" kindref="member" tooltip="Initializes a point with two-dimensional coordinates.">setCoords</ref>(x_curr,<sp/>y_curr);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>the<sp/>test<sp/>point<sp/>is<sp/>within<sp/>the<sp/>bounds<sp/>of<sp/>the<sp/>lattice<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classLattice_1aaa38ae681b8814661033c99f6410fadd" kindref="member" tooltip="Checks if a point is within the bounds of a lattice.">withinBounds</ref>(&amp;test))<sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>test.<ref refid="classPoint_1a1000c6590f93653b2d8d3b45991f60c9" kindref="member" tooltip="Compute the distance from this point to another point of interest.">distanceToPoint</ref>(coords-&gt;<ref refid="classLocalCoords_1aff39b0f4a6cd5de5347ab154000d349b" kindref="member" tooltip="Returns a pointer to the point containing the coordinates for this localcoord.">getPoint</ref>());</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>distance<sp/>to<sp/>test<sp/>point<sp/>is<sp/>current<sp/>minimum<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;<sp/>distance)<sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distance<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_new<sp/>=<sp/>x_curr;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_new<sp/>=<sp/>y_curr;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Left<sp/>lattice<sp/>cell<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lattice_x<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(angle<sp/>&gt;=<sp/>M_PI/2<sp/>&amp;&amp;<sp/>angle<sp/>&lt;=<sp/>3*M_PI/2))<sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_curr<sp/>=<sp/>(lattice_x<sp/>-<sp/>_num_x/2.0)<sp/>*<sp/>_width_x;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>y_curr<sp/>=<sp/>y0<sp/>+<sp/>m<sp/>*<sp/>(x_curr<sp/>-<sp/>x0);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>test.<ref refid="classPoint_1a21046f7efa6623eb78ae1ffc46b1820a" kindref="member" tooltip="Initializes a point with two-dimensional coordinates.">setCoords</ref>(x_curr,<sp/>y_curr);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>the<sp/>test<sp/>point<sp/>is<sp/>within<sp/>the<sp/>bounds<sp/>of<sp/>the<sp/>lattice<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classLattice_1aaa38ae681b8814661033c99f6410fadd" kindref="member" tooltip="Checks if a point is within the bounds of a lattice.">withinBounds</ref>(&amp;test))<sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>test.<ref refid="classPoint_1a1000c6590f93653b2d8d3b45991f60c9" kindref="member" tooltip="Compute the distance from this point to another point of interest.">distanceToPoint</ref>(coords-&gt;<ref refid="classLocalCoords_1aff39b0f4a6cd5de5347ab154000d349b" kindref="member" tooltip="Returns a pointer to the point containing the coordinates for this localcoord.">getPoint</ref>());</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>distance<sp/>to<sp/>test<sp/>point<sp/>is<sp/>current<sp/>minimum<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;<sp/>distance)<sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distance<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_new<sp/>=<sp/>x_curr;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_new<sp/>=<sp/>y_curr;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Right<sp/>lattice<sp/>cell<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lattice_x<sp/>&lt;=<sp/>_num_x-1<sp/>&amp;&amp;<sp/>(angle<sp/>&lt;=<sp/>M_PI/2<sp/>||<sp/>angle<sp/>&gt;=<sp/>3*M_PI/2))<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_curr<sp/>=<sp/>(lattice_x<sp/>-<sp/>_num_x/2.0<sp/>+<sp/>1)<sp/>*<sp/>_width_x;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>y_curr<sp/>=<sp/>y0<sp/>+<sp/>m<sp/>*<sp/>(x_curr<sp/>-<sp/>x0);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>test.<ref refid="classPoint_1a21046f7efa6623eb78ae1ffc46b1820a" kindref="member" tooltip="Initializes a point with two-dimensional coordinates.">setCoords</ref>(x_curr,<sp/>y_curr);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>the<sp/>test<sp/>point<sp/>is<sp/>within<sp/>the<sp/>bounds<sp/>of<sp/>the<sp/>lattice<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classLattice_1aaa38ae681b8814661033c99f6410fadd" kindref="member" tooltip="Checks if a point is within the bounds of a lattice.">withinBounds</ref>(&amp;test))<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>test.<ref refid="classPoint_1a1000c6590f93653b2d8d3b45991f60c9" kindref="member" tooltip="Compute the distance from this point to another point of interest.">distanceToPoint</ref>(coords-&gt;<ref refid="classLocalCoords_1aff39b0f4a6cd5de5347ab154000d349b" kindref="member" tooltip="Returns a pointer to the point containing the coordinates for this localcoord.">getPoint</ref>());</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>distance<sp/>to<sp/>test<sp/>point<sp/>is<sp/>current<sp/>minimum<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;<sp/>distance)<sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distance<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_new<sp/>=<sp/>x_curr;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_new<sp/>=<sp/>y_curr;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>no<sp/>point<sp/>was<sp/>found<sp/>on<sp/>the<sp/>lattice<sp/>cell,<sp/>then<sp/>the<sp/>localcoords<sp/>was</highlight></codeline>
<codeline lineno="723"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>already<sp/>on<sp/>the<sp/>boundary<sp/>of<sp/>the<sp/>lattice<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distance<sp/>==<sp/>INFINITY)</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Otherwise<sp/>a<sp/>point<sp/>was<sp/>found<sp/>inside<sp/>a<sp/>new<sp/>lattice<sp/>cell<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>the<sp/>localcoords<sp/>location<sp/>to<sp/>the<sp/>point<sp/>on<sp/>the<sp/>new<sp/>lattice<sp/>cell</highlight></codeline>
<codeline lineno="730"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>plus<sp/>a<sp/>small<sp/>bit<sp/>to<sp/>ensure<sp/>that<sp/>its<sp/>coordinates<sp/>are<sp/>inside<sp/>cell<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta_x<sp/>=<sp/>(x_new<sp/>-<sp/>coords-&gt;<ref refid="classLocalCoords_1a9623e05ee2de4ace57a7595a154a3764" kindref="member" tooltip="Returns the x-coordinate for this localcoords location.">getX</ref>())<sp/>+<sp/>cos(angle)<sp/>*<sp/><ref refid="Universe_8h_1a481c7dad5dc2bb9070235752daa421c6" kindref="member">TINY_MOVE</ref>;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta_y<sp/>=<sp/>(y_new<sp/>-<sp/>coords-&gt;<ref refid="classLocalCoords_1ac2ca0a99b00c2aa5784ff82fba2a3618" kindref="member" tooltip="Returns the y-coordinate for this localcoords location.">getY</ref>())<sp/>+<sp/>sin(angle)<sp/>*<sp/><ref refid="Universe_8h_1a481c7dad5dc2bb9070235752daa421c6" kindref="member">TINY_MOVE</ref>;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>coords-&gt;<ref refid="classLocalCoords_1a9a554dc0de187957849d1577cba7a277" kindref="member" tooltip="Translate all of the x,y coordinates for each localcoords object in the linked list.">adjustCoords</ref>(delta_x,<sp/>delta_y);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>the<sp/>x<sp/>and<sp/>y<sp/>indices<sp/>for<sp/>the<sp/>new<sp/>lattice<sp/>cell<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>new_lattice_x<sp/>=<sp/>(int)floor((coords-&gt;<ref refid="classLocalCoords_1a9623e05ee2de4ace57a7595a154a3764" kindref="member" tooltip="Returns the x-coordinate for this localcoords location.">getX</ref>()<sp/>-<sp/><ref refid="classUniverse_1a1a1a80e5a8cc28b9629317edf03b9765" kindref="member">_origin</ref>.<ref refid="classPoint_1af52a20a376f8f31e87658837565d3812" kindref="member" tooltip="Returns this point&amp;#39;s x-coordinate.">getX</ref>())/_width_x);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>new_lattice_y<sp/>=<sp/>(int)floor((coords-&gt;<ref refid="classLocalCoords_1ac2ca0a99b00c2aa5784ff82fba2a3618" kindref="member" tooltip="Returns the y-coordinate for this localcoords location.">getY</ref>()<sp/>-<sp/><ref refid="classUniverse_1a1a1a80e5a8cc28b9629317edf03b9765" kindref="member">_origin</ref>.<ref refid="classPoint_1aac5008459bf0e0053ce744a69187bae7" kindref="member" tooltip="Returns this point&amp;#39;s y-coordinate.">getY</ref>())/_width_y);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>the<sp/>localcoord<sp/>is<sp/>on<sp/>the<sp/>lattice<sp/>boundaries<sp/>and<sp/>if<sp/>so<sp/>adjust</highlight></codeline>
<codeline lineno="740"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>x<sp/>or<sp/>y<sp/>lattice<sp/>cell<sp/>indices<sp/>i<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(fabs(coords-&gt;<ref refid="classLocalCoords_1a9623e05ee2de4ace57a7595a154a3764" kindref="member" tooltip="Returns the x-coordinate for this localcoords location.">getX</ref>())<sp/>-<sp/>_num_x*_width_x*0.5)<sp/>&lt;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Universe_8h_1ad8a93cce3a9cd77aa9fc698dd9af26e7" kindref="member">ON_LATTICE_CELL_THRESH</ref>)<sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coords-&gt;<ref refid="classLocalCoords_1a9623e05ee2de4ace57a7595a154a3764" kindref="member" tooltip="Returns the x-coordinate for this localcoords location.">getX</ref>()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_lattice_x<sp/>=<sp/>_num_x<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_lattice_x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(fabs(coords-&gt;<ref refid="classLocalCoords_1ac2ca0a99b00c2aa5784ff82fba2a3618" kindref="member" tooltip="Returns the y-coordinate for this localcoords location.">getY</ref>())<sp/>-<sp/>_num_y*_width_y*0.5)<sp/>&lt;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Universe_8h_1ad8a93cce3a9cd77aa9fc698dd9af26e7" kindref="member">ON_LATTICE_CELL_THRESH</ref>)<sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coords-&gt;<ref refid="classLocalCoords_1ac2ca0a99b00c2aa5784ff82fba2a3618" kindref="member" tooltip="Returns the y-coordinate for this localcoords location.">getY</ref>()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_lattice_y<sp/>=<sp/>_num_y<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_lattice_y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>new<sp/>lattice<sp/>cell<sp/>indices<sp/>are<sp/>within<sp/>the<sp/>bounds,<sp/>if<sp/>not,</highlight></codeline>
<codeline lineno="759"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>new<sp/>localcoords<sp/>is<sp/>now<sp/>on<sp/>the<sp/>boundary<sp/>of<sp/>the<sp/>lattice<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_lattice_x<sp/>&gt;=<sp/>_num_x<sp/>||<sp/>new_lattice_x<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_lattice_y<sp/>&gt;=<sp/>_num_y<sp/>||<sp/>new_lattice_y<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>New<sp/>localcoords<sp/>is<sp/>still<sp/>within<sp/>the<sp/>interior<sp/>of<sp/>the<sp/>lattice<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>the<sp/>localcoords<sp/>lattice<sp/>cell<sp/>indices<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords-&gt;<ref refid="classLocalCoords_1a8940ee0b1d5698483dd646b8f2275f71" kindref="member" tooltip="Sets the first index for the lattice cell within which this localcoords resides.">setLatticeX</ref>(new_lattice_x);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords-&gt;<ref refid="classLocalCoords_1ac12edaa6db88e7be90a622e8fdbac244" kindref="member" tooltip="Sets the second index for the lattice cell within which this localcoords resides.">setLatticeY</ref>(new_lattice_y);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Move<sp/>to<sp/>next<sp/>lowest<sp/>level<sp/>universe<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords-&gt;<ref refid="classLocalCoords_1ab6a1654615643dabd35a19c8ed5f7dad" kindref="member" tooltip="Removes and frees memory for all localcoords beyond this one in the linked list.">prune</ref>();</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUniverse" kindref="compound" tooltip="A universe represents an unbounded space in the 2D xy-plane.">Universe</ref>*<sp/>univ<sp/>=<sp/></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_universes.at(new_lattice_y).at(new_lattice_x).second;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classLocalCoords" kindref="compound" tooltip="The localcoords represents a set of local coordinates on some level of nested universes making up the...">LocalCoords</ref>*<sp/>next_coords;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>local<sp/>position<sp/>of<sp/>particle<sp/>in<sp/>next<sp/>level<sp/>universe<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nextX<sp/>=<sp/>coords-&gt;<ref refid="classLocalCoords_1a9623e05ee2de4ace57a7595a154a3764" kindref="member" tooltip="Returns the x-coordinate for this localcoords location.">getX</ref>()<sp/>-<sp/>(<ref refid="classUniverse_1a1a1a80e5a8cc28b9629317edf03b9765" kindref="member">_origin</ref>.<ref refid="classPoint_1af52a20a376f8f31e87658837565d3812" kindref="member" tooltip="Returns this point&amp;#39;s x-coordinate.">getX</ref>()</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(new_lattice_x<sp/>+<sp/>0.5)<sp/>*<sp/>_width_x);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nextY<sp/>=<sp/>coords-&gt;<ref refid="classLocalCoords_1ac2ca0a99b00c2aa5784ff82fba2a3618" kindref="member" tooltip="Returns the y-coordinate for this localcoords location.">getY</ref>()<sp/>-<sp/>(<ref refid="classUniverse_1a1a1a80e5a8cc28b9629317edf03b9765" kindref="member">_origin</ref>.<ref refid="classPoint_1aac5008459bf0e0053ce744a69187bae7" kindref="member" tooltip="Returns this point&amp;#39;s y-coordinate.">getY</ref>()</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(new_lattice_y<sp/>+<sp/>0.5)<sp/>*<sp/>_width_y);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>coordinates<sp/>at<sp/>the<sp/>next<sp/>level<sp/>localcoord<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_coords<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classLocalCoords" kindref="compound" tooltip="The localcoords represents a set of local coordinates on some level of nested universes making up the...">LocalCoords</ref>(nextX,<sp/>nextY);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_coords-&gt;<ref refid="classLocalCoords_1a433a17c4bfb3f491a16a6067e05067ae" kindref="member" tooltip="Sets the pointer to the localcoords on the next higher nested universe level.">setPrev</ref>(coords);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords-&gt;<ref refid="classLocalCoords_1ad0d95a64372a6b60c4a7276350380c7c" kindref="member" tooltip="Sets the pointer to the localcoords on the next lower nested universe level.">setNext</ref>(next_coords);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_coords-&gt;<ref refid="classLocalCoords_1a74f4a16775592fd84c8e4cdccd10b486" kindref="member" tooltip="Set the id of the universe within which this localcoords resides.">setUniverse</ref>(univ-&gt;<ref refid="classUniverse_1a4f7c4329c04e78b6a62f8977dfe3d115" kindref="member">getId</ref>());</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Search<sp/>lower<sp/>level<sp/>universe<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classLattice_1a463e4fba851c367d6c46ed777a7de7e8" kindref="member" tooltip="Finds the cell within this lattice that a localcoords is in.">findCell</ref>(coords,<sp/>universes);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal">}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classLattice_1afc84badb58ce4b9c3946fcc944647c30" kindref="member" tooltip="Computes the flat source region base indices for each of the lattice cells within this Lattice (ie...">Lattice::computeFSRMaps</ref>()<sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>a<sp/>counter<sp/>count<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>loop<sp/>over<sp/>universes<sp/>in<sp/>the<sp/>lattice<sp/>to<sp/>set<sp/>the<sp/>map<sp/>and<sp/>update<sp/>count<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>_num_y;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>_num_x;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUniverse" kindref="compound" tooltip="A universe represents an unbounded space in the 2D xy-plane.">Universe</ref><sp/>*u<sp/>=<sp/>_universes.at(i).at(j).second;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_region_map[i][j].second<sp/>=<sp/>count;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>u-&gt;<ref refid="classUniverse_1af76741be6456d3542a302024fd4c52e4" kindref="member" tooltip="Compute the FSR maps for this universe and return the number of FSRs inside the universe.">computeFSRMaps</ref>();</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="818"><highlight class="normal">}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal">std::string<sp/><ref refid="classLattice_1a85eb51407b84e29d55f300e06b29f9b4" kindref="member" tooltip="Converts a lattice&amp;#39;s attributes to a character array representation.">Lattice::toString</ref>()<sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>string;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Lattice<sp/>id<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>_id<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>num<sp/>cells<sp/>along<sp/>x<sp/>=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>_num_x<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>num<sp/>cells<sp/>along<sp/>y<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>_num_y<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>x<sp/>width<sp/>=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>_width_x<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>y<sp/>width<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>_width_y;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\t\tUniverse<sp/>ids<sp/>within<sp/>this<sp/>lattice:\n\t\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>_num_y-1;<sp/>i<sp/>&gt;<sp/>-1;<sp/><sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>_num_x;<sp/>j++)</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>_universes.at(i).at(j).first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\t\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.str().c_str();</highlight></codeline>
<codeline lineno="841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classLattice_1ac29a8a1d0a21829843ee39eb3778fc85" kindref="member" tooltip="Prints a string representation of all of the lattice&amp;#39;s objects to the console.">Lattice::printString</ref>()<sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>log_printf(<ref refid="log_8h_1a5096002e05063d13577205e0bc5f0564a7186ecefe792fdae9fec0a42f105ad6b" kindref="member">RESULT</ref>,<sp/><ref refid="classLattice_1a85eb51407b84e29d55f300e06b29f9b4" kindref="member" tooltip="Converts a lattice&amp;#39;s attributes to a character array representation.">toString</ref>().c_str());</highlight></codeline>
<codeline lineno="850"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/wbinventor/Documents/NSE-CRPG-Codes/OpenMOC/src/Universe.cpp"/>
  </compounddef>
</doxygen>
